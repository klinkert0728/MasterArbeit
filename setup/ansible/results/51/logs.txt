No tmp folder to clear
---------- Run #0 ----------
--- Run #0 of Baseline
# Collect Benchmarks in Dir: /lib/mergeset
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: table_search_timing_test.go
# Collect Benchmarks in Dir: /lib/prompb
## Collect Benchmarks in File: prompb_timing_test.go
# Collect Benchmarks in Dir: /lib/promrelabel
## Collect Benchmarks in File: graphite_timing_test.go
## Collect Benchmarks in File: if_expression_timing_test.go
## Collect Benchmarks in File: relabel_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape
## Collect Benchmarks in File: config_timing_test.go
## Collect Benchmarks in File: scrapework_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentelemetry/stream
## Collect Benchmarks in File: streamparser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/vmimport
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/blockcache
## Collect Benchmarks in File: blockcache_timing_test.go
# Collect Benchmarks in Dir: /lib/encoding
## Collect Benchmarks in File: nearest_delta2_timing_test.go
## Collect Benchmarks in File: nearest_delta_timing_test.go
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: int_timing_test.go
# Collect Benchmarks in Dir: /lib/uint64set
## Collect Benchmarks in File: uint64set_timing_test.go
# Collect Benchmarks in Dir: /lib/bytesutil
## Collect Benchmarks in File: internstring_timing_test.go
## Collect Benchmarks in File: bytesutil_timing_test.go
## Collect Benchmarks in File: fast_string_matcher_timing_test.go
## Collect Benchmarks in File: fast_string_transformer_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape/discoveryutils
## Collect Benchmarks in File: utils_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentsdbhttp
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/streamaggr
## Collect Benchmarks in File: dedup_timing_test.go
## Collect Benchmarks in File: deduplicator_timing_test.go
## Collect Benchmarks in File: streamaggr_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/opentelemetry
## Collect Benchmarks in File: opentelemetry_timing_test.go
# Collect Benchmarks in Dir: /lib/bloomfilter
## Collect Benchmarks in File: filter_timing_test.go
# Collect Benchmarks in Dir: /lib/regexutil
## Collect Benchmarks in File: regex_timing_test.go
## Collect Benchmarks in File: promregex_timing_test.go
# Collect Benchmarks in Dir: /lib/storage
## Collect Benchmarks in File: merge_timing_test.go
## Collect Benchmarks in File: storage_timing_test.go
## Collect Benchmarks in File: table_search_timing_test.go
## Collect Benchmarks in File: block_stream_writer_timing_test.go
## Collect Benchmarks in File: dedup_timing_test.go
## Collect Benchmarks in File: index_db_timing_test.go
## Collect Benchmarks in File: table_timing_test.go
## Collect Benchmarks in File: tag_filters_timing_test.go
## Collect Benchmarks in File: block_stream_reader_timing_test.go
## Collect Benchmarks in File: inmemory_part_timing_test.go
## Collect Benchmarks in File: part_search_timing_test.go
# Collect Benchmarks in Dir: /app/vmalert/datasource
## Collect Benchmarks in File: vm_prom_api_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/newrelic
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/logstorage
## Collect Benchmarks in File: tokenizer_timing_test.go
## Collect Benchmarks in File: bitmap_timing_test.go
## Collect Benchmarks in File: block_timing_test.go
## Collect Benchmarks in File: hash_tokenizer_timing_test.go
## Collect Benchmarks in File: pattern_timing_test.go
## Collect Benchmarks in File: log_rows_timing_test.go
## Collect Benchmarks in File: stream_id_timing_test.go
## Collect Benchmarks in File: values_encoder_timing_test.go
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: filter_timing_test.go
## Collect Benchmarks in File: hash128_timing_test.go
## Collect Benchmarks in File: inmemory_part_timing_test.go
# Collect Benchmarks in Dir: /lib/persistentqueue
## Collect Benchmarks in File: fastqueue_timing_test.go
## Collect Benchmarks in File: persistentqueue_timing_test.go
# Collect Benchmarks in Dir: /lib/prompbmarshal
## Collect Benchmarks in File: prompbmarshal_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentsdb
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/decimal
## Collect Benchmarks in File: decimal_timing_test.go
# Collect Benchmarks in Dir: /lib/fasttime
## Collect Benchmarks in File: fasttime_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape/discovery/kubernetes
## Collect Benchmarks in File: pod_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/loki
## Collect Benchmarks in File: loki_protobuf_timing_test.go
## Collect Benchmarks in File: loki_json_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/promql
## Collect Benchmarks in File: parse_cache_timing_test.go
## Collect Benchmarks in File: rollup_timing_test.go
# Collect Benchmarks in Dir: /lib/promutils
## Collect Benchmarks in File: labels_timing_test.go
## Collect Benchmarks in File: labelscompressor_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/datadogv1
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/datadogv2
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/influx
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/elasticsearch
## Collect Benchmarks in File: elasticsearch_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/netstorage
## Collect Benchmarks in File: netstorage_timing_test.go
# Collect Benchmarks in Dir: /lib/fs
## Collect Benchmarks in File: reader_at_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/csvimport
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/graphite
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/prometheus
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/stringsutil
## Collect Benchmarks in File: less_natural_timing_test.go
## Collect Benchmarks in File: stringsutil_timing_test.go
# Collect Benchmarks in Dir: /lib/tenantmetrics
## Collect Benchmarks in File: counter_map_timing_test.go
# Collect Benchmarks in Dir: /app/vmagent/remotewrite
## Collect Benchmarks in File: pendingseries_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/prometheus
## Collect Benchmarks in File: federate_timing_test.go
#####################
## Shuffle Benchmarks
#####################
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetAddRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetAddRandomLastBits$]
Benchmark 1 done: go: downloading go1.23.3 (linux/amd64)
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     537	   2263921 ns/op	  44.17 MB/s	   41840 B/op	      16 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     516	   2256511 ns/op	  44.32 MB/s	   39639 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     530	   2267187 ns/op	  44.11 MB/s	   38428 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     543	   2226371 ns/op	  44.92 MB/s	   38459 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     543	   2233517 ns/op	  44.77 MB/s	   39007 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     370	   3362010 ns/op	  29.74 MB/s	  194964 B/op	      59 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     366	   3422037 ns/op	  29.22 MB/s	  209399 B/op	      63 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     336	   3494207 ns/op	  28.62 MB/s	  214661 B/op	      63 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     344	   3383187 ns/op	  29.56 MB/s	  209316 B/op	      62 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     303	   3809196 ns/op	  26.25 MB/s	  212568 B/op	      63 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     226	   4966710 ns/op	  20.13 MB/s	  844385 B/op	     242 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     240	   5165542 ns/op	  19.36 MB/s	  963710 B/op	     283 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     225	   5107541 ns/op	  19.58 MB/s	  826553 B/op	     242 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     229	   4975996 ns/op	  20.10 MB/s	  840684 B/op	     226 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     241	   4922122 ns/op	  20.32 MB/s	  842014 B/op	     236 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     153	   7746038 ns/op	  12.91 MB/s	 2299063 B/op	     735 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     181	   7781689 ns/op	  12.85 MB/s	 1823224 B/op	    1102 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     144	   7921329 ns/op	  12.62 MB/s	 2455599 B/op	     853 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     176	   7407998 ns/op	  13.50 MB/s	 1670308 B/op	     991 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     141	   7599437 ns/op	  13.16 MB/s	 2073370 B/op	     863 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	32.986s

Result 1 parsed
Benchmark run succesful
1 / 193 done
### Execute Benchmark: /lib/promscrape/discoveryutils/utils_timing_test.go::BenchmarkSanitizeLabelName
Changing directory to dir1: /home/benchUser/other/lib/promscrape/discoveryutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeLabelName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discoveryutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeLabelName-2   	26865646	        43.51 ns/op	  22.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27827140	        43.56 ns/op	  22.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27360621	        43.59 ns/op	  22.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27670237	        43.48 ns/op	  23.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27436096	        43.71 ns/op	  22.88 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discoveryutils	6.216s

Result 1 parsed
Benchmark run succesful
2 / 193 done
### Execute Benchmark: /lib/protoparser/datadogv1/parser_timing_test.go::BenchmarkRequestUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/datadogv1
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRequestUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv1
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRequestUnmarshal-2   	  236565	      4879 ns/op	  52.47 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  240492	      4896 ns/op	  52.29 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  239188	      4986 ns/op	  51.34 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  239521	      4908 ns/op	  52.16 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  233665	      4963 ns/op	  51.58 MB/s	     408 B/op	      11 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv1	6.143s

Result 1 parsed
Benchmark run succesful
3 / 193 done
### Execute Benchmark: /lib/protoparser/csvimport/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/csvimport
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/csvimport
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 1276315	       944.8 ns/op	 185.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1268322	       942.0 ns/op	 185.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1273066	       944.4 ns/op	 185.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1279444	       939.7 ns/op	 186.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1267477	       945.5 ns/op	 185.09 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/csvimport	10.783s

Result 1 parsed
Benchmark run succesful
4 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2385945	       499.5 ns/op	 244.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2393722	       500.1 ns/op	 243.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2393326	       500.2 ns/op	 243.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2371765	       499.6 ns/op	 244.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2393259	       503.5 ns/op	 242.33 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	8.534s

Result 1 parsed
Benchmark run succesful
5 / 193 done
### Execute Benchmark: /lib/logstorage/hash128_timing_test.go::BenchmarkHash128
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHash128$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkHash128-2   	  204534	      5731 ns/op	  17.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  223225	      5435 ns/op	  18.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  208824	      5704 ns/op	  17.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  219040	      5462 ns/op	  18.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  221553	      5414 ns/op	  18.47 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.278s

Result 1 parsed
Benchmark run succesful
6 / 193 done
### Execute Benchmark: /lib/storage/tag_filters_timing_test.go::BenchmarkTagFilterMatchSuffix
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTagFilterMatchSuffix$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTagFilterMatchSuffix$]
/lib/storage/tag_filters_timing_test.go::BenchmarkTagFilterMatchSuffix timed out after 10s
Benchmark run succesful
7 / 193 done
### Execute Benchmark: /lib/promrelabel/if_expression_timing_test.go::BenchmarkIfExpression
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIfExpression$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIfExpression/equal_label:_last-2         	 1000000	      1282 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2713596	       440.6 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2731203	       439.9 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2736328	       442.2 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2725174	       438.9 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5504038	       217.2 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5606102	       222.6 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5591338	       216.7 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5552384	       214.8 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5559823	       216.2 ns/op
BenchmarkIfExpression/equal_label:_first-2        	64507531	        18.51 ns/op
BenchmarkIfExpression/equal_label:_first-2        	65649525	        18.40 ns/op
BenchmarkIfExpression/equal_label:_first-2        	64537304	        18.34 ns/op
BenchmarkIfExpression/equal_label:_first-2        	64451863	        18.42 ns/op
BenchmarkIfExpression/equal_label:_first-2        	63993940	        18.48 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9224409	       129.6 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9243250	       129.8 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9223886	       130.3 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9220377	       129.9 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9207378	       130.5 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16001338	        74.30 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16190944	        74.71 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16035348	        74.48 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16046761	        74.37 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	15984196	        74.41 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	78417159	        15.20 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	78899167	        15.23 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	77331969	        15.24 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	79068103	        15.22 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	79019743	        15.27 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	42.386s

Result 1 parsed
Benchmark run succesful
8 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderRowsBestCase-2   	    4122	    278178 ns/op	 359.48 MB/s	     768 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4293	    278838 ns/op	 358.63 MB/s	     766 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4251	    280355 ns/op	 356.69 MB/s	     766 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4104	    279318 ns/op	 358.02 MB/s	     768 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4312	    279158 ns/op	 358.22 MB/s	     765 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.445s

Result 1 parsed
Benchmark run succesful
9 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalDeltaConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalDeltaConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalDeltaConstArray-2   	  220850	      5464 ns/op	1499.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  216854	      5426 ns/op	1509.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  219676	      5446 ns/op	1504.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  221028	      5461 ns/op	1500.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  219702	      5457 ns/op	1501.08 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.290s

Result 1 parsed
Benchmark run succesful
10 / 193 done
### Execute Benchmark: /lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePhrase
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePhrase$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePhrase$]
/lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePhrase timed out after 10s
Benchmark run succesful
11 / 193 done
### Execute Benchmark: /app/vlinsert/opentelemetry/opentelemetry_timing_test.go::BenchmarkParseProtobufRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/opentelemetry
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/opentelemetry
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   27033	     44796 ns/op	   2.23 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   28174	     44395 ns/op	   2.25 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26886	     44471 ns/op	   2.25 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26432	     45511 ns/op	   2.20 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26492	     44563 ns/op	   2.24 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25480	     48308 ns/op	   2.07 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25005	     49245 ns/op	   2.03 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25164	     48460 ns/op	   2.06 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25740	     48829 ns/op	   2.05 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25012	     47230 ns/op	   2.12 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2526	    468438 ns/op	   2.13 MB/s	  435479 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2492	    471104 ns/op	   2.12 MB/s	  435493 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2391	    472348 ns/op	   2.12 MB/s	  435535 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2124	    472796 ns/op	   2.12 MB/s	  435667 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2487	    476884 ns/op	   2.10 MB/s	  435494 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2570	    475363 ns/op	   2.10 MB/s	  436718 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2606	    485335 ns/op	   2.06 MB/s	  436705 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2518	    477576 ns/op	   2.09 MB/s	  436738 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2630	    483891 ns/op	   2.07 MB/s	  436696 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2545	    472122 ns/op	   2.12 MB/s	  436728 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13680	     89669 ns/op	   2.23 MB/s	   72913 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13820	     90764 ns/op	   2.20 MB/s	   72913 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13588	     89286 ns/op	   2.24 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13533	     91294 ns/op	   2.19 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   12943	     91317 ns/op	   2.19 MB/s	   72915 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12682	     92556 ns/op	   2.16 MB/s	   74182 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12904	     92223 ns/op	   2.17 MB/s	   74181 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12810	     91210 ns/op	   2.19 MB/s	   74181 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12682	     93772 ns/op	   2.13 MB/s	   74182 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   13116	     92291 ns/op	   2.17 MB/s	   74181 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1090	   1039670 ns/op	   1.92 MB/s	  872816 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1201	   1032660 ns/op	   1.94 MB/s	  872349 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1083	   1045196 ns/op	   1.91 MB/s	  872848 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1107	   1044112 ns/op	   1.92 MB/s	  872738 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1057	   1029312 ns/op	   1.94 MB/s	  872973 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1093	   1047849 ns/op	   1.91 MB/s	  874059 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1087	   1050933 ns/op	   1.90 MB/s	  874086 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1112	   1054619 ns/op	   1.90 MB/s	  873972 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1074	   1050256 ns/op	   1.90 MB/s	  874148 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1158	   1073957 ns/op	   1.86 MB/s	  873776 B/op	    4084 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/opentelemetry	63.241s

Result 1 parsed
Benchmark run succesful
12 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkMarshalUnmarshalMetricIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUnmarshalMetricIDs$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUnmarshalMetricIDs$]
/lib/storage/index_db_timing_test.go::BenchmarkMarshalUnmarshalMetricIDs timed out after 10s
Benchmark run succesful
13 / 193 done
### Execute Benchmark: /app/vlinsert/elasticsearch/elasticsearch_timing_test.go::BenchmarkReadBulkRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/elasticsearch
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReadBulkRequest$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/elasticsearch
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkReadBulkRequest/gzip:off-2         	   16947	     63524 ns/op	   5.68 MB/s	  262207 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   18754	     75201 ns/op	   4.80 MB/s	  262210 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   11182	    108339 ns/op	   3.33 MB/s	  262212 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   10000	    103201 ns/op	   3.50 MB/s	  262217 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   11670	    104268 ns/op	   3.46 MB/s	  262218 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   10000	    112806 ns/op	   1.68 MB/s	  262309 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	    9228	    108807 ns/op	   1.75 MB/s	  262318 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	    9366	    111873 ns/op	   1.70 MB/s	  262325 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   15970	     80375 ns/op	   2.36 MB/s	  262280 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   14696	     77864 ns/op	   2.44 MB/s	  262291 B/op	       1 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/elasticsearch	17.432s

Result 1 parsed
Benchmark run succesful
14 / 193 done
### Execute Benchmark: /lib/fasttime/fasttime_timing_test.go::BenchmarkTimeNowUnix
Changing directory to dir1: /home/benchUser/other/lib/fasttime
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTimeNowUnix$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTimeNowUnix-2   	29393202	        39.96 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	29915536	        39.91 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	29967476	        40.23 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	29757608	        40.61 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	28978898	        40.22 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime	6.168s

Result 1 parsed
Benchmark run succesful
15 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsTwoSourcesBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsTwoSourcesBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  146540	      7883 ns/op	2078.52 MB/s	    1414 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  145627	      7718 ns/op	2122.86 MB/s	    1414 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  164539	      7680 ns/op	2133.22 MB/s	    1413 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  151033	      7837 ns/op	2090.72 MB/s	    1414 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  154119	      7933 ns/op	2065.25 MB/s	    1414 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.760s

Result 1 parsed
Benchmark run succesful
16 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkRowsDiff
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsDiff$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsDiff-2   	   33474	     35347 ns/op	 187.43 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   34062	     35478 ns/op	 186.74 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   33794	     35490 ns/op	 186.67 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   33832	     35302 ns/op	 187.66 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   34015	     35541 ns/op	 186.41 MB/s	     560 B/op	       4 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	7.808s

Result 1 parsed
Benchmark run succesful
17 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseTimestampISO8601
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseTimestampISO8601$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseTimestampISO8601-2   	 2663434	       447.9 ns/op	  11.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2699754	       445.9 ns/op	  11.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2669074	       445.5 ns/op	  11.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2684700	       448.0 ns/op	  11.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2659801	       448.1 ns/op	  11.16 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	8.278s

Result 1 parsed
Benchmark run succesful
18 / 193 done
### Execute Benchmark: /lib/logstorage/tokenizer_timing_test.go::BenchmarkTokenizeStrings
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTokenizeStrings$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTokenizeStrings-2   	   40687	     29575 ns/op	 113.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40790	     29401 ns/op	 113.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   39748	     30061 ns/op	 111.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40870	     29552 ns/op	 113.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40603	     29552 ns/op	 113.29 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	7.524s

Result 1 parsed
Benchmark run succesful
19 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUint64-2   	944944448	         1.266 ns/op	 789.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	942675116	         1.262 ns/op	 792.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	953282076	         1.264 ns/op	 791.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	951952233	         1.270 ns/op	 787.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	954748660	         1.263 ns/op	 791.87 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.667s

Result 1 parsed
Benchmark run succesful
20 / 193 done
### Execute Benchmark: /lib/bytesutil/fast_string_transformer_timing_test.go::BenchmarkFastStringTransformer
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastStringTransformer$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastStringTransformer/#00-2         	38631087	        30.47 ns/op	  32.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39332545	        30.59 ns/op	  32.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39151755	        31.04 ns/op	  32.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	38950213	        31.64 ns/op	  31.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	38929976	        30.61 ns/op	  32.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	36030390	        35.09 ns/op	  28.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	34520208	        33.91 ns/op	  29.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	34973966	        35.83 ns/op	  27.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	35324844	        34.95 ns/op	  28.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	36196112	        34.56 ns/op	  28.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	34496402	        33.91 ns/op	  29.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	31240654	        33.66 ns/op	  29.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35007247	        34.02 ns/op	  29.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35601385	        35.52 ns/op	  28.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35814817	        33.90 ns/op	  29.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	32857262	        35.63 ns/op	  28.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	32375011	        35.33 ns/op	  28.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	33947554	        35.14 ns/op	  28.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34195430	        36.68 ns/op	  27.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34407782	        35.78 ns/op	  27.95 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	24.831s

Result 1 parsed
Benchmark run succesful
21 / 193 done
### Execute Benchmark: /lib/storage/dedup_timing_test.go::BenchmarkDeduplicateSamplesDuringMerge
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicateSamplesDuringMerge$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51330	     23378 ns/op	 350.42 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51938	     23130 ns/op	 354.17 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   52089	     23245 ns/op	 352.42 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51373	     23264 ns/op	 352.13 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51657	     23246 ns/op	 352.40 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58034	     20444 ns/op	 400.69 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58123	     20315 ns/op	 403.25 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58516	     20530 ns/op	 399.02 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   59494	     20562 ns/op	 398.41 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58358	     20458 ns/op	 400.43 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   76458	     15626 ns/op	 524.25 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   74378	     15684 ns/op	 522.33 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   71797	     15687 ns/op	 522.21 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   74073	     15637 ns/op	 523.88 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   74052	     15651 ns/op	 523.42 MB/s	       3 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	21.321s

Result 1 parsed
Benchmark run succesful
22 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkMarshalUint8String
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUint8String$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUint8String-2   	 1591717	       750.3 ns/op	 341.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1595088	       752.2 ns/op	 340.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1600256	       745.5 ns/op	 343.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1603096	       749.3 ns/op	 341.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1599015	       747.4 ns/op	 342.54 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	9.800s

Result 1 parsed
Benchmark run succesful
23 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarInt64/small-ints-2         	44840110	        26.49 ns/op	 264.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	44059605	        26.45 ns/op	 264.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	45567517	        26.47 ns/op	 264.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	45273588	        26.52 ns/op	 263.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	44255851	        26.52 ns/op	 263.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18113312	        66.18 ns/op	 105.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18026444	        65.84 ns/op	 106.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18136724	        65.86 ns/op	 106.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18196146	        66.15 ns/op	 105.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	17600194	        66.23 ns/op	 105.69 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	12.388s

Result 1 parsed
Benchmark run succesful
24 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkFromFloat
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFromFloat$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFromFloat/0-2 	396812235	         3.060 ns/op	 326.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	393569320	         3.042 ns/op	 328.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	392648649	         3.055 ns/op	 327.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	394438827	         3.054 ns/op	 327.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	392408761	         3.057 ns/op	 327.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	150487521	         7.981 ns/op	 125.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	149829705	         8.008 ns/op	 124.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	149547169	         7.987 ns/op	 125.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	149941423	         7.982 ns/op	 125.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	150324331	         7.988 ns/op	 125.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	150146082	         7.970 ns/op	 125.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	149327398	         7.992 ns/op	 125.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	150556903	         7.977 ns/op	 125.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	150444072	         7.965 ns/op	 125.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	150444236	         7.945 ns/op	 125.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43164682	        27.77 ns/op	  36.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43479684	        27.70 ns/op	  36.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43010451	        27.83 ns/op	  35.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43470966	        27.87 ns/op	  35.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	42576943	        27.75 ns/op	  36.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	75343183	        15.60 ns/op	  64.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	77368899	        15.60 ns/op	  64.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	76520378	        15.55 ns/op	  64.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	77031889	        15.64 ns/op	  63.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	77351619	        15.70 ns/op	  63.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24588729	        49.32 ns/op	  20.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24261633	        49.16 ns/op	  20.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24213475	        49.22 ns/op	  20.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24194506	        49.38 ns/op	  20.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24580137	        49.32 ns/op	  20.27 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	46.138s

Result 1 parsed
Benchmark run succesful
25 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkHeadPostingForMatchers
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHeadPostingForMatchers$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHeadPostingForMatchers$]
/lib/storage/index_db_timing_test.go::BenchmarkHeadPostingForMatchers timed out after 10s
Benchmark run succesful
26 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarUint64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarUint64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  295344	      4044 ns/op	1978.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  294754	      4060 ns/op	1970.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  296925	      4053 ns/op	1973.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  291385	      4053 ns/op	1973.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  294938	      4055 ns/op	1972.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   86863	     13742 ns/op	 582.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   86442	     13804 ns/op	 579.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87247	     13803 ns/op	 579.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   86762	     13754 ns/op	 581.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87393	     13793 ns/op	 579.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35612	     33700 ns/op	 237.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35644	     33485 ns/op	 238.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35551	     33675 ns/op	 237.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35811	     33587 ns/op	 238.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35716	     33603 ns/op	 238.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15098	     79520 ns/op	 100.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15108	     79699 ns/op	 100.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15116	     79465 ns/op	 100.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15117	     79114 ns/op	 101.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15228	     79417 ns/op	 100.73 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	30.640s

Result 1 parsed
Benchmark run succesful
27 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkCalbirateScale
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCalbirateScale$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCalbirateScale-2   	 9989790	       120.4 ns/op	 149.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9869492	       120.0 ns/op	 149.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9973420	       120.1 ns/op	 149.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	10000876	       120.0 ns/op	 149.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9972038	       120.3 ns/op	 149.58 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	6.620s

Result 1 parsed
Benchmark run succesful
28 / 193 done
### Execute Benchmark: /lib/protoparser/newrelic/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/newrelic
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/newrelic
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  238788	      4947 ns/op	 305.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  243334	      4925 ns/op	 306.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  244761	      4944 ns/op	 305.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  243266	      4961 ns/op	 304.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  237198	      4927 ns/op	 306.25 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/newrelic	6.232s

Result 1 parsed
Benchmark run succesful
29 / 193 done
### Execute Benchmark: /lib/stringsutil/stringsutil_timing_test.go::BenchmarkStringsToLower
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStringsToLower$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStringsToLower/ascii-all-lowercase-2         	14791867	        80.45 ns/op	 546.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	14860621	        80.45 ns/op	 546.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15047844	        80.75 ns/op	 544.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15086292	        80.25 ns/op	 548.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	14698100	        80.70 ns/op	 545.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3393818	       356.0 ns/op	 123.61 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3376744	       357.5 ns/op	 123.07 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3402066	       355.3 ns/op	 123.85 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3402859	       351.5 ns/op	 125.16 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3423978	       350.8 ns/op	 125.42 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3260227	       364.0 ns/op	 120.89 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3275839	       367.6 ns/op	 119.68 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3239862	       370.4 ns/op	 118.79 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3158569	       372.0 ns/op	 118.27 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3260684	       367.9 ns/op	 119.61 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1045 ns/op	  72.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1043 ns/op	  72.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1041 ns/op	  73.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1040 ns/op	  73.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1045 ns/op	  72.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  771147	      1498 ns/op	  50.74 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  757126	      1509 ns/op	  50.36 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  802746	      1496 ns/op	  50.82 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  823174	      1499 ns/op	  50.69 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  808753	      1509 ns/op	  50.37 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  919058	      1309 ns/op	  58.04 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  921811	      1308 ns/op	  58.09 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  928332	      1309 ns/op	  58.04 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  901594	      1308 ns/op	  58.12 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  911841	      1316 ns/op	  57.77 MB/s	     104 B/op	       3 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	39.504s

Result 1 parsed
Benchmark run succesful
30 / 193 done
### Execute Benchmark: /lib/protoparser/opentsdb/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentsdb
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdb
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2387042	       486.3 ns/op	 341.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2471126	       487.6 ns/op	 340.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2470876	       487.9 ns/op	 340.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2458629	       488.3 ns/op	 339.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2452558	       490.6 ns/op	 338.37 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdb	8.472s

Result 1 parsed
Benchmark run succesful
31 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectNoOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectNoOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectNoOverlap/items_1000-2         	  146138	      7717 ns/op	 259.16 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  153121	      8253 ns/op	 242.33 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  162286	      7884 ns/op	 253.69 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  159705	      8093 ns/op	 247.13 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  150822	      8275 ns/op	 241.69 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  149235	      8804 ns/op	2271.60 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  116304	      9455 ns/op	2115.27 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  145465	     11057 ns/op	1808.84 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  131866	      8862 ns/op	2256.73 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  139376	      9361 ns/op	2136.50 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   54643	     21841 ns/op	9156.89 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   51364	     22639 ns/op	8834.47 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   53606	     21920 ns/op	9124.11 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   53419	     22680 ns/op	8818.16 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   48946	     24285 ns/op	8235.37 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	    9021	    120172 ns/op	16642.86 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    114932 ns/op	17401.54 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	    9124	    115282 ns/op	17348.70 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	    9361	    116030 ns/op	17236.91 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    117521 ns/op	17018.20 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1142	   1133147 ns/op	17649.96 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1105	   1136019 ns/op	17605.34 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1064	   1129442 ns/op	17707.86 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1047	   1140691 ns/op	17533.23 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1077	   1125810 ns/op	17764.98 MB/s	 2557825 B/op	     622 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	33.223s

Result 1 parsed
Benchmark run succesful
32 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionPartialOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionPartialOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionPartialOverlap/items_1000-2         	  149419	      7634 ns/op	 261.98 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  148144	      8646 ns/op	 231.31 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  133455	      8705 ns/op	 229.74 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  133917	      9676 ns/op	 206.70 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  134565	      8711 ns/op	 229.60 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  125419	      9666 ns/op	2069.01 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  128240	      9840 ns/op	2032.45 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  137744	      9060 ns/op	2207.53 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  128623	      9178 ns/op	2179.10 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  130318	      9435 ns/op	2119.74 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   42998	     27233 ns/op	7344.14 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   44454	     26912 ns/op	7431.56 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   43336	     27054 ns/op	7392.64 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   42374	     27812 ns/op	7191.19 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   41176	     26745 ns/op	7477.92 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    4908	    223704 ns/op	8940.37 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5242	    237748 ns/op	8412.26 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5346	    222585 ns/op	8985.34 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    4587	    226562 ns/op	8827.59 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5388	    217533 ns/op	9193.99 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     501	   2426876 ns/op	8241.05 MB/s	 3820801 B/op	     928 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     506	   2336871 ns/op	8558.45 MB/s	 3820802 B/op	     928 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     504	   2304208 ns/op	8679.77 MB/s	 3820800 B/op	     928 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     511	   2290875 ns/op	8730.29 MB/s	 3820800 B/op	     928 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     510	   2280740 ns/op	8769.08 MB/s	 3820800 B/op	     928 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	33.528s

Result 1 parsed
Benchmark run succesful
33 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderBlocksWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderBlocksWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderBlocksWorstCase-2   	      99	  12252816 ns/op	   8.16 MB/s	   41339 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12218851 ns/op	   8.18 MB/s	   41370 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12112905 ns/op	   8.26 MB/s	   41373 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12021803 ns/op	   8.32 MB/s	   41259 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12018457 ns/op	   8.32 MB/s	   41371 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.465s

Result 1 parsed
Benchmark run succesful
34 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkSanitizeLabelName
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeLabelName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeLabelName/#00-2         	38293419	        31.13 ns/op	  32.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	38030712	        30.99 ns/op	  32.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	38761916	        30.98 ns/op	  32.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	38365608	        31.07 ns/op	  32.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	38632581	        30.98 ns/op	  32.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	33636170	        35.01 ns/op	  28.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	35678620	        35.19 ns/op	  28.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	34277223	        35.10 ns/op	  28.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	35510685	        33.83 ns/op	  29.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	35646762	        33.94 ns/op	  29.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	34245925	        35.42 ns/op	  28.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	34118506	        35.31 ns/op	  28.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	34222348	        35.31 ns/op	  28.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	34201232	        35.26 ns/op	  28.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	32641731	        35.36 ns/op	  28.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	32380590	        36.64 ns/op	  27.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	33012127	        36.48 ns/op	  27.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	33062977	        37.48 ns/op	  26.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	31070367	        36.79 ns/op	  27.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	32331382	        36.55 ns/op	  27.36 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	24.720s

Result 1 parsed
Benchmark run succesful
35 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkIsAutoMetricMiss
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIsAutoMetricMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIsAutoMetricMiss-2   	46469353	        26.06 ns/op	  38.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	45192338	        25.92 ns/op	  38.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	45158109	        25.93 ns/op	  38.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	45857817	        25.91 ns/op	  38.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	46023692	        26.01 ns/op	  38.44 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.100s

Result 1 parsed
Benchmark run succesful
36 / 193 done
### Execute Benchmark: /lib/prompbmarshal/prompbmarshal_timing_test.go::BenchmarkWriteRequestMarshalProtobuf
Changing directory to dir1: /home/benchUser/other/lib/prompbmarshal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkWriteRequestMarshalProtobuf$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/prompbmarshal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkWriteRequestMarshalProtobuf-2   	    4479	    264093 ns/op	   3.79 MB/s	     109 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4554	    263357 ns/op	   3.80 MB/s	     107 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4521	    262117 ns/op	   3.82 MB/s	     108 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4564	    264126 ns/op	   3.79 MB/s	     107 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4418	    262163 ns/op	   3.81 MB/s	     111 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/prompbmarshal	6.087s

Result 1 parsed
Benchmark run succesful
37 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapIsSetBit
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapIsSetBit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9066	    130283 ns/op	 503.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9220	    130098 ns/op	 503.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    8991	    130512 ns/op	 502.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    8733	    129820 ns/op	 504.82 MB/s	       1 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9235	    129980 ns/op	 504.20 MB/s	       1 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    9060	    130276 ns/op	 503.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    9076	    129958 ns/op	 504.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    9090	    129819 ns/op	 504.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    9056	    129780 ns/op	 504.98 MB/s	       1 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8926	    130764 ns/op	 501.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    9021	    130273 ns/op	 503.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8936	    130531 ns/op	 502.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8966	    130644 ns/op	 501.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8996	    131143 ns/op	 499.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8878	    130283 ns/op	 503.03 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	17.863s

Result 1 parsed
Benchmark run succesful
38 / 193 done
### Execute Benchmark: /lib/blockcache/blockcache_timing_test.go::BenchmarkKeyHashUint64
Changing directory to dir1: /home/benchUser/other/lib/blockcache
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkKeyHashUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkKeyHashUint64-2   	146328669	         8.213 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	146378443	         8.261 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	145594278	         8.452 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	143118562	         8.214 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	143082546	         8.398 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache	10.228s

Result 1 parsed
Benchmark run succesful
39 / 193 done
### Execute Benchmark: /lib/persistentqueue/persistentqueue_timing_test.go::BenchmarkQueueThroughputSerial
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkQueueThroughputSerial$]
Benchmark 1 done: 2025-02-08T09:24:25.526Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkQueueThroughputSerial/block-size-1-2         	   21250	     55010 ns/op	   1.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21268	     55878 ns/op	   1.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21262	     55954 ns/op	   1.79 MB/s	      50 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21175	     55081 ns/op	   1.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   17974	     56451 ns/op	   1.77 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17168	     58932 ns/op	  16.97 MB/s	      62 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17008	     59789 ns/op	  16.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   20148	     57805 ns/op	  17.30 MB/s	      26 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17574	     59169 ns/op	  16.90 MB/s	      60 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17470	     57979 ns/op	  17.25 MB/s	      60 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   12883	     85765 ns/op	 116.60 MB/s	       2 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14061	     85623 ns/op	 116.79 MB/s	      76 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   13890	     86010 ns/op	 116.27 MB/s	      76 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   12120	     85470 ns/op	 117.00 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   11841	     84984 ns/op	 117.67 MB/s	      90 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1545	    797693 ns/op	 125.36 MB/s	     694 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1494	    792356 ns/op	 126.21 MB/s	     718 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1509	    794646 ns/op	 125.84 MB/s	     703 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1717	    806543 ns/op	 123.99 MB/s	     629 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1742	    801541 ns/op	 124.76 MB/s	     620 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     160	   8537063 ns/op	 117.14 MB/s	    6887 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     169	   8111290 ns/op	 123.28 MB/s	    3271 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     169	   8105921 ns/op	 123.37 MB/s	      76 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     163	   8122902 ns/op	 123.11 MB/s	     180 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     166	   8138236 ns/op	 122.88 MB/s	    6645 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      19	  81478314 ns/op	 122.73 MB/s	    8475 B/op	      10 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      20	  83764688 ns/op	 119.38 MB/s	   66155 B/op	       9 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      19	  84040210 ns/op	 118.99 MB/s	   35176 B/op	      10 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      19	  84281261 ns/op	 118.65 MB/s	   62806 B/op	      10 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      18	  86189554 ns/op	 116.02 MB/s	    8436 B/op	      10 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 847083806 ns/op	 118.05 MB/s	 1059264 B/op	     103 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 829108739 ns/op	 120.61 MB/s	   10320 B/op	      94 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 824430777 ns/op	 121.30 MB/s	  530756 B/op	      96 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 832167000 ns/op	 120.17 MB/s	  268244 B/op	      92 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 822449810 ns/op	 121.59 MB/s	  792596 B/op	      94 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	60.203s

Result 1 parsed
Benchmark run succesful
40 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMatchOptimized-2   	148347752	         8.049 ns/op	 124.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	148488957	         8.039 ns/op	 124.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	149319554	         8.001 ns/op	 124.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	149543536	         7.990 ns/op	 125.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	149728989	         8.122 ns/op	 123.13 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.086s

Result 1 parsed
Benchmark run succesful
41 / 193 done
### Execute Benchmark: /lib/promscrape/config_timing_test.go::BenchmarkGetScrapeWork
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGetScrapeWork$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGetScrapeWork-2   	  331022	      4042 ns/op	   0.25 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  304624	      3867 ns/op	   0.26 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  320038	      3953 ns/op	   0.25 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  292394	      3790 ns/op	   0.26 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  283422	      3919 ns/op	   0.26 MB/s	     864 B/op	       6 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.232s

Result 1 parsed
Benchmark run succesful
42 / 193 done
### Execute Benchmark: /lib/protoparser/opentelemetry/stream/streamparser_timing_test.go::BenchmarkParseStream
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentelemetry/stream
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseStream$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentelemetry/stream
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParseStream-2   	  133834	      8980 ns/op	   0.11 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  133956	      9150 ns/op	   0.11 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  125863	      9095 ns/op	   0.11 MB/s	    2369 B/op	      96 allocs/op
BenchmarkParseStream-2   	  132690	      9532 ns/op	   0.10 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  134113	      9496 ns/op	   0.11 MB/s	    2368 B/op	      96 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentelemetry/stream	6.595s

Result 1 parsed
Benchmark run succesful
43 / 193 done
### Execute Benchmark: /lib/persistentqueue/fastqueue_timing_test.go::BenchmarkFastQueueThroughputConcurrent
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastQueueThroughputConcurrent$]
Benchmark 1 done: 2025-02-08T09:25:53.115Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T09:25:53.119Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:53.123Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T09:25:53.136Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:53.139Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:53.152Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:53.171Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:53.184Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:53.748Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:53.760Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:54.908Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  312549	      3711 ns/op	   2.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T09:25:54.921Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:54.924Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:54.936Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:54.939Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:54.952Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:54.980Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:54.992Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:55.692Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:55.704Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:56.874Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  313496	      3770 ns/op	   2.65 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T09:25:56.886Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:56.890Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:56.902Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:56.906Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:56.917Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:56.943Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:56.954Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:57.712Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:57.724Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:58.910Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  315895	      3791 ns/op	   2.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T09:25:58.925Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:58.929Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:58.940Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:58.944Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:58.957Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:58.981Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:58.993Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:25:59.674Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:25:59.686Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:00.854Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  314917	      3747 ns/op	   2.67 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T09:26:00.867Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:00.870Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:26:00.882Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:00.885Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:26:00.897Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:00.926Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:26:00.939Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:01.667Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T09:26:01.679Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:02.871Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  319684	      3762 ns/op	   2.66 MB/s	       3 B/op	       0 allocs/op
2025-02-08T09:26:02.884Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:02.889Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T09:26:02.903Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:02.907Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:02.919Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:02.941Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:02.953Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:03.582Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:03.595Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:04.773Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  312272	      3813 ns/op	  26.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T09:26:04.786Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:04.789Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:04.802Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:04.806Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:04.819Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:04.846Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:04.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:05.517Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:05.530Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:06.713Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  314302	      3804 ns/op	  26.29 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T09:26:06.731Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:06.734Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:06.745Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:06.749Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:06.761Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:06.789Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:06.802Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:07.536Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:07.549Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:08.713Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  309009	      3807 ns/op	  26.26 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T09:26:08.726Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:08.729Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:08.741Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:08.745Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:08.756Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:08.777Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:08.790Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:09.636Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:09.648Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:10.847Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  316602	      3824 ns/op	  26.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T09:26:10.862Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:10.865Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:10.877Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:10.881Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:10.894Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:10.917Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:10.929Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:11.598Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T09:26:11.609Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:12.785Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  315488	      3760 ns/op	  26.59 MB/s	       3 B/op	       0 allocs/op
2025-02-08T09:26:12.796Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:12.800Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T09:26:12.812Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:12.815Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:12.828Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:12.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:12.869Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:13.592Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:13.604Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:14.789Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  309986	      3860 ns/op	 259.05 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T09:26:14.800Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:14.803Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:14.813Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:14.817Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:14.828Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:14.865Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:14.877Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:15.663Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:15.675Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:16.868Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  310495	      3880 ns/op	 257.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T09:26:16.881Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:16.884Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:16.897Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:16.901Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:16.913Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:16.939Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:16.952Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:17.644Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:17.655Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:18.845Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  308222	      3896 ns/op	 256.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T09:26:18.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:18.862Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:18.873Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:18.877Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:18.888Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:18.916Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:18.927Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:19.676Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:19.688Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:20.868Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  307740	      3871 ns/op	 258.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T09:26:20.879Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:20.882Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:20.894Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:20.898Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:20.910Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:20.939Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:20.950Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:21.709Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T09:26:21.721Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:22.901Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  307528	      3873 ns/op	 258.17 MB/s	       3 B/op	       0 allocs/op
2025-02-08T09:26:22.913Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:22.916Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T09:26:22.928Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:22.931Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:22.943Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:22.972Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:22.983Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:23.840Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:23.859Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:25.039Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  275226	      4351 ns/op	2298.21 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T09:26:25.051Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:25.055Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:25.068Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:25.072Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:25.091Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:25.113Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:25.128Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:25.948Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:25.959Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:27.145Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  272228	      4396 ns/op	2275.02 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T09:26:27.158Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:27.162Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:27.174Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:27.177Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:27.191Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:27.216Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:27.229Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:28.022Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:28.036Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:29.197Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  269070	      4367 ns/op	2290.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T09:26:29.210Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:29.214Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:29.227Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:29.230Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:29.242Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:29.266Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:29.279Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:30.087Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:30.099Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:31.301Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  276348	      4393 ns/op	2276.45 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T09:26:31.315Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:31.318Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:31.331Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:31.335Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:31.346Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:31.374Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:31.386Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:32.137Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T09:26:32.149Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:33.312Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  267213	      4393 ns/op	2276.34 MB/s	       0 B/op	       0 allocs/op
2025-02-08T09:26:33.325Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:33.328Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T09:26:33.341Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:33.345Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:33.357Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:33.414Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:33.426Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:34.333Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:34.344Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:35.516Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  127896	      9245 ns/op	10816.63 MB/s	       4 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T09:26:35.528Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:35.531Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:35.542Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:35.546Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:35.557Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:35.617Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:35.630Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:36.648Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  108784	      9465 ns/op	10565.26 MB/s	       9 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T09:26:36.660Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:36.663Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:36.675Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:36.679Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:36.690Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:36.749Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:36.760Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:37.737Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:37.750Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:38.934Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  128776	      9288 ns/op	10766.99 MB/s	       8 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T09:26:38.944Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:38.947Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:38.958Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:38.962Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:38.974Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:39.050Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:39.064Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:40.053Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  106124	      9443 ns/op	10589.39 MB/s	      10 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T09:26:40.068Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:40.071Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:40.083Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:40.087Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:40.101Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:40.148Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:40.162Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:41.102Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T09:26:41.115Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:42.303Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  130160	      9221 ns/op	10845.02 MB/s	       8 B/op	       0 allocs/op
2025-02-08T09:26:42.315Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:42.319Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T09:26:42.330Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:42.344Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:42.356Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:42.774Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:42.786Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:43.952Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10800	    109048 ns/op	9170.24 MB/s	      98 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T09:26:43.964Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:43.968Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:43.980Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:43.990Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:44.003Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:44.475Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:44.486Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:45.656Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10671	    110583 ns/op	9042.99 MB/s	     101 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T09:26:45.667Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:45.671Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:45.683Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:45.697Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:45.714Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:46.127Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:46.139Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:47.314Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10718	    110761 ns/op	9028.45 MB/s	     109 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T09:26:47.327Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:47.330Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:47.342Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:47.355Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:47.366Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:47.792Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:47.803Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:49.000Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10706	    112814 ns/op	8864.19 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T09:26:49.012Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:49.016Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:49.030Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:49.041Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:49.053Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:49.496Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T09:26:49.509Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:50.663Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10470	    111455 ns/op	8972.26 MB/s	       2 B/op	       0 allocs/op
2025-02-08T09:26:50.676Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:50.686Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T09:26:50.698Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:50.864Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:50.876Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:51.940Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     370	   2906485 ns/op	3440.58 MB/s	    8351 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T09:26:51.952Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:51.958Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:51.970Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:52.177Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:52.190Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:53.253Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     373	   2883783 ns/op	3467.67 MB/s	      69 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T09:26:53.268Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:53.274Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:53.287Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:53.460Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:53.473Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:54.548Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     374	   2908178 ns/op	3438.58 MB/s	    8236 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T09:26:54.562Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:54.568Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:54.580Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:54.767Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:54.779Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:55.865Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     379	   2894195 ns/op	3455.19 MB/s	    8020 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T09:26:55.879Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:55.886Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:55.900Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:56.067Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T09:26:56.081Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:26:57.161Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     378	   2890345 ns/op	3459.79 MB/s	    8149 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	64.069s

Result 1 parsed
Benchmark run succesful
44 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalUint64-2   	792722950	         1.509 ns/op	 662.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	794957989	         1.513 ns/op	 661.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	796368390	         1.511 ns/op	 661.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	792001737	         1.514 ns/op	 660.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	790086343	         1.510 ns/op	 662.19 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.781s

Result 1 parsed
Benchmark run succesful
45 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseTimestampRFC3339Nano
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseTimestampRFC3339Nano$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseTimestampRFC3339Nano-2   	 1788855	       672.6 ns/op	   7.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1786448	       674.7 ns/op	   7.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1787481	       673.5 ns/op	   7.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1779615	       670.6 ns/op	   7.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1782907	       673.0 ns/op	   7.43 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	9.422s

Result 1 parsed
Benchmark run succesful
46 / 193 done
### Execute Benchmark: /lib/logstorage/block_timing_test.go::BenchmarkBlock_MustInitFromRows
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlock_MustInitFromRows$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4731302	       254.2 ns/op	   3.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4757726	       253.9 ns/op	   3.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4752466	       253.8 ns/op	   3.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4728165	       252.3 ns/op	   3.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4733464	       252.6 ns/op	   3.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  716427	      1681 ns/op	   5.95 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  680389	      1765 ns/op	   5.67 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  668431	      1681 ns/op	   5.95 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  673951	      1748 ns/op	   5.72 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  695860	      1742 ns/op	   5.74 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  154021	      7680 ns/op	  13.02 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  153427	      8029 ns/op	  12.46 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  155712	      8062 ns/op	  12.40 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  155890	      8071 ns/op	  12.39 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  149336	      7684 ns/op	  13.01 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17548	     69479 ns/op	  14.39 MB/s	      40 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17115	     69446 ns/op	  14.40 MB/s	      41 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   16590	     69186 ns/op	  14.45 MB/s	      42 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17418	     71444 ns/op	  14.00 MB/s	      40 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17260	     71999 ns/op	  13.89 MB/s	      40 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     933	   1150878 ns/op	   8.69 MB/s	   10887 B/op	     329 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     962	   1164109 ns/op	   8.59 MB/s	   10558 B/op	     319 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     932	   1172424 ns/op	   8.53 MB/s	   10898 B/op	     329 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     891	   1193938 ns/op	   8.38 MB/s	   11399 B/op	     345 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     891	   1228858 ns/op	   8.14 MB/s	   11400 B/op	     345 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	37.918s

Result 1 parsed
Benchmark run succesful
47 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheSimple
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheSimple$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheSimple-2   	 2258241	       530.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2261804	       530.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2266386	       534.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2255508	       529.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2254915	       529.2 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.714s

Result 1 parsed
Benchmark run succesful
48 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkCommonPrefixLen
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCommonPrefixLen$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCommonPrefixLen$]
/lib/mergeset/encoding_timing_test.go::BenchmarkCommonPrefixLen timed out after 10s
Benchmark run succesful
49 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderRowsWorstCase-2   	      74	  16622242 ns/op	   6.02 MB/s	   41984 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      79	  16662542 ns/op	   6.00 MB/s	   41871 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      79	  16694036 ns/op	   5.99 MB/s	   41869 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      76	  16616702 ns/op	   6.02 MB/s	   42044 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      79	  16568470 ns/op	   6.04 MB/s	   41867 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.829s

Result 1 parsed
Benchmark run succesful
50 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterBlocksWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterBlocksWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      49	  22588766 ns/op	   4.43 MB/s	 6183716 B/op	   20412 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      51	  21968982 ns/op	   4.55 MB/s	 5941229 B/op	   19611 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      51	  22180587 ns/op	   4.51 MB/s	 5941221 B/op	   19611 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      49	  22391351 ns/op	   4.47 MB/s	 6183719 B/op	   20412 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      50	  22664412 ns/op	   4.41 MB/s	 6060040 B/op	   20003 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	16.185s

Result 1 parsed
Benchmark run succesful
51 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutOverflow-2   	    2896	    399296 ns/op	      10 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2700	    397597 ns/op	       9 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2818	    397294 ns/op	       6 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    3008	    396282 ns/op	       7 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2991	    395578 ns/op	       7 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.059s

Result 1 parsed
Benchmark run succesful
52 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterRowsWorstCase-2   	      25	  40351262 ns/op	   2.48 MB/s	12248301 B/op	   56007 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      30	  38032553 ns/op	   2.63 MB/s	10206742 B/op	   46673 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      25	  40241088 ns/op	   2.49 MB/s	12248102 B/op	   56007 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      30	  37776611 ns/op	   2.65 MB/s	10206752 B/op	   46673 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      26	  39284936 ns/op	   2.55 MB/s	11777017 B/op	   53853 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	13.933s

Result 1 parsed
Benchmark run succesful
53 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20411577	        57.59 ns/op	  17.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20525436	        57.76 ns/op	  17.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20578606	        57.56 ns/op	  17.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20678976	        57.88 ns/op	  17.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	19922530	        58.07 ns/op	  17.22 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.225s

Result 1 parsed
Benchmark run succesful
54 / 193 done
### Execute Benchmark: /lib/protoparser/opentsdbhttp/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentsdbhttp
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdbhttp
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  566245	      2046 ns/op	 184.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  585608	      3565 ns/op	 105.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  258434	      4399 ns/op	  85.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  279838	      4435 ns/op	  85.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  262231	      4486 ns/op	  84.04 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdbhttp	7.018s

Result 1 parsed
Benchmark run succesful
55 / 193 done
### Execute Benchmark: /lib/streamaggr/dedup_timing_test.go::BenchmarkDedupAggr
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDedupAggr$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDedupAggr/samplesPerPush_1-2         	 1000000	      1271 ns/op	   1.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 1000000	      1219 ns/op	   1.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 1000000	      1218 ns/op	   1.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	  882789	      1198 ns/op	   1.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 1000000	      1205 ns/op	   1.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  304932	      3706 ns/op	   5.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  393824	      3716 ns/op	   5.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  519884	      3713 ns/op	   5.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  324255	      4376 ns/op	   4.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  785398	      1532 ns/op	  13.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  114664	     10434 ns/op	  19.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  115722	     10534 ns/op	  18.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  114936	     10392 ns/op	  19.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  116744	     10411 ns/op	  19.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  113229	     10385 ns/op	  19.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12652	     96816 ns/op	  20.66 MB/s	       6 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12477	     96525 ns/op	  20.72 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12520	     95558 ns/op	  20.93 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12577	     95917 ns/op	  20.85 MB/s	       6 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12380	     96013 ns/op	  20.83 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     886	   1229317 ns/op	  16.27 MB/s	    1171 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     901	   1264844 ns/op	  15.81 MB/s	    1151 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     879	   1276347 ns/op	  15.67 MB/s	    1181 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     873	   1283424 ns/op	  15.58 MB/s	    1189 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     860	   1273224 ns/op	  15.71 MB/s	    1206 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      38	  29442273 ns/op	   6.79 MB/s	  207939 B/op	      87 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      37	  29990019 ns/op	   6.67 MB/s	  213600 B/op	      89 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      33	  30506628 ns/op	   6.56 MB/s	  239525 B/op	     100 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      34	  29988366 ns/op	   6.67 MB/s	  232453 B/op	      97 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      37	  29733968 ns/op	   6.73 MB/s	  213280 B/op	      87 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr	52.544s

Result 1 parsed
Benchmark run succesful
56 / 193 done
### Execute Benchmark: /lib/promrelabel/graphite_timing_test.go::BenchmarkGraphiteReplaceTemplateExpand
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGraphiteReplaceTemplateExpand$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        11.15 ns/op	  89.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.88 ns/op	  91.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	123993044	        10.40 ns/op	  96.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        11.02 ns/op	  90.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	124005932	        10.26 ns/op	  97.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85287166	        14.16 ns/op	  70.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85830916	        14.04 ns/op	  71.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	84504762	        14.01 ns/op	  71.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	83998872	        14.05 ns/op	  71.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85684730	        14.04 ns/op	  71.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64216153	        18.55 ns/op	  53.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64818730	        18.45 ns/op	  54.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64989056	        18.40 ns/op	  54.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64533667	        18.38 ns/op	  54.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	62781830	        18.38 ns/op	  54.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82582741	        14.55 ns/op	  68.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82736664	        14.57 ns/op	  68.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82284355	        14.55 ns/op	  68.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82242945	        14.59 ns/op	  68.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	81396553	        14.58 ns/op	  68.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63310128	        18.91 ns/op	  52.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	62709229	        18.96 ns/op	  52.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63132036	        18.89 ns/op	  52.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63411007	        19.15 ns/op	  52.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	62212299	        18.99 ns/op	  52.67 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	32.130s

Result 1 parsed
Benchmark run succesful
57 / 193 done
### Execute Benchmark: /app/vmselect/netstorage/netstorage_timing_test.go::BenchmarkMergeSortBlocks
Changing directory to dir1: /home/benchUser/other/app/vmselect/netstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeSortBlocks$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/netstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7976	    154003 ns/op	 531.94 MB/s	    1549 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7926	    153881 ns/op	 532.36 MB/s	    1559 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7807	    149140 ns/op	 549.28 MB/s	    1583 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    8091	    150517 ns/op	 544.26 MB/s	    1527 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7807	    148583 ns/op	 551.34 MB/s	    1583 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4708	    254075 ns/op	 644.85 MB/s	    2626 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4729	    253958 ns/op	 645.15 MB/s	    2614 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    3958	    255279 ns/op	 641.81 MB/s	    3123 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4695	    254949 ns/op	 642.64 MB/s	    2633 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4676	    255618 ns/op	 640.96 MB/s	    2644 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2536	    402035 ns/op	 611.29 MB/s	    4876 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2554	    400923 ns/op	 612.98 MB/s	    4842 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2516	    400695 ns/op	 613.33 MB/s	    4915 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2618	    400210 ns/op	 614.08 MB/s	    4724 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    3020	    401215 ns/op	 612.54 MB/s	    4095 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1909	    544491 ns/op	 601.81 MB/s	    6481 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1998	    547291 ns/op	 598.73 MB/s	    6190 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1986	    547707 ns/op	 598.28 MB/s	    6228 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    2019	    550040 ns/op	 595.74 MB/s	    6127 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1990	    544004 ns/op	 602.35 MB/s	    6215 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1575	    687243 ns/op	 596.00 MB/s	    7855 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1618	    691269 ns/op	 592.53 MB/s	    7645 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1618	    685184 ns/op	 597.80 MB/s	    7646 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1618	    692869 ns/op	 591.17 MB/s	    7645 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1594	    693611 ns/op	 590.53 MB/s	    7762 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7804	    151063 ns/op	 542.29 MB/s	    1965 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    8028	    149128 ns/op	 549.33 MB/s	    1910 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7856	    156033 ns/op	 525.02 MB/s	    1952 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7772	    153308 ns/op	 534.35 MB/s	    1973 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7680	    149444 ns/op	 548.16 MB/s	    1997 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     249	   4759149 ns/op	  17.21 MB/s	   56961 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     249	   4797364 ns/op	  17.08 MB/s	   56962 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     247	   4788169 ns/op	  17.11 MB/s	   57423 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     248	   4808100 ns/op	  17.04 MB/s	   57192 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     250	   4799553 ns/op	  17.07 MB/s	   56734 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/netstorage	56.631s

Result 1 parsed
Benchmark run succesful
58 / 193 done
### Execute Benchmark: /app/vlinsert/loki/loki_protobuf_timing_test.go::BenchmarkParseProtobufRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/loki
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
/app/vlinsert/loki/loki_protobuf_timing_test.go::BenchmarkParseProtobufRequest timed out after 10s
Benchmark run succesful
59 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalConstArray-2   	  193622	      6192 ns/op	1322.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  193660	      6195 ns/op	1322.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  193414	      6209 ns/op	1319.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  194257	      6205 ns/op	1320.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  194332	      6201 ns/op	1321.18 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.342s

Result 1 parsed
Benchmark run succesful
60 / 193 done
### Execute Benchmark: /lib/storage/dedup_timing_test.go::BenchmarkDeduplicateSamples
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicateSamples$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46485	     25636 ns/op	 319.55 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46363	     25646 ns/op	 319.43 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46161	     25992 ns/op	 315.18 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   45958	     25878 ns/op	 316.56 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46171	     26245 ns/op	 312.14 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51172	     23450 ns/op	 349.33 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51314	     23288 ns/op	 351.77 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   50798	     23506 ns/op	 348.51 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   50442	     23451 ns/op	 349.32 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51590	     23463 ns/op	 349.14 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   62030	     20012 ns/op	 409.35 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   62472	     20088 ns/op	 407.81 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   59994	     20011 ns/op	 409.37 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   61735	     20039 ns/op	 408.79 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   62493	     20035 ns/op	 408.87 MB/s	       4 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	22.186s

Result 1 parsed
Benchmark run succesful
61 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddNoAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddNoAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddNoAllocs/items_1000-2         	   41689	     28843 ns/op	  34.67 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41746	     28758 ns/op	  34.77 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41299	     28657 ns/op	  34.90 MB/s	   21896 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41604	     28912 ns/op	  34.59 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   42253	     28692 ns/op	  34.85 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3643	    302867 ns/op	  33.02 MB/s	  182474 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3558	    305387 ns/op	  32.75 MB/s	  182468 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3768	    302642 ns/op	  33.04 MB/s	  182471 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3621	    305092 ns/op	  32.78 MB/s	  182479 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3823	    303813 ns/op	  32.92 MB/s	  182484 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     255	   4481713 ns/op	  22.31 MB/s	 1598068 B/op	    1673 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     266	   4373969 ns/op	  22.86 MB/s	 1598336 B/op	    1677 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     267	   4350330 ns/op	  22.99 MB/s	 1598293 B/op	    1676 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     273	   4420121 ns/op	  22.62 MB/s	 1598483 B/op	    1679 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     273	   4500651 ns/op	  22.22 MB/s	 1598441 B/op	    1678 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      12	  86410901 ns/op	  11.57 MB/s	22437094 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  85387506 ns/op	  11.71 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      14	  82925570 ns/op	  12.06 MB/s	22437046 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  84260780 ns/op	  11.87 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  85280367 ns/op	  11.73 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1413610259 ns/op	   7.07 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1331561305 ns/op	   7.51 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1336498004 ns/op	   7.48 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1311023888 ns/op	   7.63 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1319002139 ns/op	   7.58 MB/s	182754680 B/op	      39 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.482s

Result 1 parsed
Benchmark run succesful
62 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkAddMulti
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAddMulti$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAddMulti/items_1-2         	 4001770	       300.5 ns/op	   3.33 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3931881	       318.1 ns/op	   3.14 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3840696	       307.2 ns/op	   3.26 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3596038	       309.5 ns/op	   3.23 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3723021	       308.3 ns/op	   3.24 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2921858	       408.4 ns/op	  24.48 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2904157	       412.5 ns/op	  24.24 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2905273	       413.9 ns/op	  24.16 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2848279	       418.1 ns/op	  23.92 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2822427	       416.0 ns/op	  24.04 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_100-2       	  337872	      3282 ns/op	  30.47 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  348999	      3410 ns/op	  29.33 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  358916	      3428 ns/op	  29.17 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  351486	      3542 ns/op	  28.23 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  359328	      3591 ns/op	  27.85 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  178640	      6229 ns/op	 160.55 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  192594	      6345 ns/op	 157.59 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  189030	      6212 ns/op	 160.97 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  190134	      6324 ns/op	 158.13 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  198650	      6202 ns/op	 161.23 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33927	     35232 ns/op	 283.83 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33662	     35239 ns/op	 283.78 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33696	     35262 ns/op	 283.59 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33487	     35276 ns/op	 283.48 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33469	     35456 ns/op	 282.04 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100000-2    	    3501	    343047 ns/op	 291.51 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3418	    343653 ns/op	 290.99 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3496	    343445 ns/op	 291.17 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3368	    343259 ns/op	 291.32 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3478	    344573 ns/op	 290.21 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_1000000-2   	     340	   3477754 ns/op	 287.54 MB/s	  142160 B/op	      45 allocs/op
BenchmarkAddMulti/items_1000000-2   	     338	   3448287 ns/op	 290.00 MB/s	  142160 B/op	      45 allocs/op
BenchmarkAddMulti/items_1000000-2   	     346	   3441849 ns/op	 290.54 MB/s	  142160 B/op	      45 allocs/op
BenchmarkAddMulti/items_1000000-2   	     346	   3471993 ns/op	 288.02 MB/s	  142160 B/op	      45 allocs/op
BenchmarkAddMulti/items_1000000-2   	     344	   3467234 ns/op	 288.41 MB/s	  142160 B/op	      45 allocs/op
BenchmarkAddMulti/items_10000000-2  	      32	  35558392 ns/op	 281.23 MB/s	 1286871 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  35716408 ns/op	 279.98 MB/s	 1286871 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  35460643 ns/op	 282.00 MB/s	 1286871 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  35061427 ns/op	 285.21 MB/s	 1286871 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  35290831 ns/op	 283.36 MB/s	 1286871 B/op	     325 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	60.542s

Result 1 parsed
Benchmark run succesful
63 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150980136	         7.986 ns/op	 125.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	151202746	         7.951 ns/op	 125.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150745630	         7.948 ns/op	 125.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150617695	         7.987 ns/op	 125.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	151029476	         7.946 ns/op	 125.85 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.051s

Result 1 parsed
Benchmark run succesful
64 / 193 done
### Execute Benchmark: /app/vlinsert/loki/loki_json_timing_test.go::BenchmarkParseJSONRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/loki
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseJSONRequest$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseJSONRequest$]
/app/vlinsert/loki/loki_json_timing_test.go::BenchmarkParseJSONRequest timed out after 10s
Benchmark run succesful
65 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9076275	       130.7 ns/op	   7.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9209172	       130.8 ns/op	   7.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9093843	       130.2 ns/op	   7.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9111819	       130.4 ns/op	   7.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9200082	       130.7 ns/op	   7.65 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.649s

Result 1 parsed
Benchmark run succesful
66 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarUint64/small-ints-2         	53048164	        22.38 ns/op	 312.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53759762	        22.44 ns/op	 311.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53200657	        22.48 ns/op	 311.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53963035	        22.48 ns/op	 311.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53998724	        22.42 ns/op	 312.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19835214	        60.98 ns/op	 114.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19564479	        61.11 ns/op	 114.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19692898	        60.84 ns/op	 115.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19837701	        60.92 ns/op	 114.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19844239	        61.28 ns/op	 114.23 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	12.492s

Result 1 parsed
Benchmark run succesful
67 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkApplyRelabelConfigs
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkApplyRelabelConfigs$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkApplyRelabelConfigs$]
/lib/promrelabel/relabel_timing_test.go::BenchmarkApplyRelabelConfigs timed out after 10s
Benchmark run succesful
68 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	186177222	         6.423 ns/op	 155.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	186601171	         6.464 ns/op	 154.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	186027078	         6.659 ns/op	 150.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	176802228	         6.442 ns/op	 155.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	178893981	         6.901 ns/op	 144.90 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.359s

Result 1 parsed
Benchmark run succesful
69 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddWithAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddWithAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddWithAllocs/items_1000-2         	   15886	     74805 ns/op	  13.37 MB/s	   47732 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   16030	     74870 ns/op	  13.36 MB/s	   47735 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   15986	     74969 ns/op	  13.34 MB/s	   47739 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   15981	     74658 ns/op	  13.39 MB/s	   47732 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   16006	     74579 ns/op	  13.41 MB/s	   47732 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1813	    641684 ns/op	  15.58 MB/s	  389459 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1821	    644084 ns/op	  15.53 MB/s	  389419 B/op	     254 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1880	    641234 ns/op	  15.59 MB/s	  389482 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1802	    640572 ns/op	  15.61 MB/s	  389402 B/op	     254 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1855	    645441 ns/op	  15.49 MB/s	  389423 B/op	     254 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     147	   8343452 ns/op	  11.99 MB/s	 3267622 B/op	    3940 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     146	   7992637 ns/op	  12.51 MB/s	 3266966 B/op	    3932 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     146	   8220901 ns/op	  12.16 MB/s	 3266931 B/op	    3932 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     145	   8172999 ns/op	  12.24 MB/s	 3266953 B/op	    3932 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     147	   8157884 ns/op	  12.26 MB/s	 3267523 B/op	    3939 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 168799689 ns/op	   5.92 MB/s	49623345 B/op	   38337 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 162597904 ns/op	   6.15 MB/s	49623555 B/op	   38337 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 163172748 ns/op	   6.13 MB/s	49618993 B/op	   38281 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 165855573 ns/op	   6.03 MB/s	49627544 B/op	   38390 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 181278080 ns/op	   5.52 MB/s	49626609 B/op	   38377 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	3131925899 ns/op	   3.19 MB/s	403146504 B/op	  306735 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2742009430 ns/op	   3.65 MB/s	403144472 B/op	  306707 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2737574440 ns/op	   3.65 MB/s	403157208 B/op	  306867 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2786031950 ns/op	   3.59 MB/s	403201736 B/op	  307423 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2762980938 ns/op	   3.62 MB/s	403176792 B/op	  307108 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	54.184s

Result 1 parsed
Benchmark run succesful
70 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7222394	       162.3 ns/op	   6.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7408125	       163.0 ns/op	   6.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7301172	       162.9 ns/op	   6.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7289217	       162.3 ns/op	   6.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7404660	       162.4 ns/op	   6.16 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.809s

Result 1 parsed
Benchmark run succesful
71 / 193 done
### Execute Benchmark: /lib/protoparser/vmimport/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/vmimport
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/vmimport
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  343875	      3522 ns/op	 172.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  339038	      3518 ns/op	 173.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  339728	      3517 ns/op	 173.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  338978	      3537 ns/op	 172.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  338048	      3515 ns/op	 173.27 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/vmimport	6.193s

Result 1 parsed
Benchmark run succesful
72 / 193 done
### Execute Benchmark: /app/vmselect/promql/rollup_timing_test.go::BenchmarkRollupAvg
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRollupAvg$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRollupAvg-2   	 1588251	       751.7 ns/op	1330.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1594246	       754.3 ns/op	1325.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1589637	       750.3 ns/op	1332.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1596369	       753.2 ns/op	1327.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1591458	       751.0 ns/op	1331.63 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	9.826s

Result 1 parsed
Benchmark run succesful
73 / 193 done
### Execute Benchmark: /lib/logstorage/hash_tokenizer_timing_test.go::BenchmarkTokenizeHashes
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTokenizeHashes$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTokenizeHashes-2   	   74955	     16010 ns/op	 209.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   74895	     16065 ns/op	 208.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   75784	     16043 ns/op	 208.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   74650	     16045 ns/op	 208.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   74767	     16043 ns/op	 208.69 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.844s

Result 1 parsed
Benchmark run succesful
74 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsFourSourcesWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsFourSourcesWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     349	   3377211 ns/op	   4.85 MB/s	    8604 B/op	      63 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     340	   3307564 ns/op	   4.95 MB/s	    7935 B/op	      64 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     334	   3236079 ns/op	   5.06 MB/s	    8491 B/op	      65 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     360	   3355831 ns/op	   4.88 MB/s	    8078 B/op	      62 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     344	   3268527 ns/op	   5.01 MB/s	   10660 B/op	      64 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	7.840s

Result 1 parsed
Benchmark run succesful
75 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkIsAutoMetricHit
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIsAutoMetricHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIsAutoMetricHit-2   	38053774	        31.52 ns/op	  31.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	37578504	        31.60 ns/op	  31.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	37566264	        31.55 ns/op	  31.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	37763044	        31.35 ns/op	  31.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	37803428	        31.55 ns/op	  31.69 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.136s

Result 1 parsed
Benchmark run succesful
76 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHit
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetHasHit/items_1000-2         	  130027	      9220 ns/op	 108.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  130232	      9225 ns/op	 108.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  129090	      9188 ns/op	 108.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  129996	      9158 ns/op	 109.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  130970	      9162 ns/op	 109.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13135	     91559 ns/op	 109.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13105	     91532 ns/op	 109.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13105	     92512 ns/op	 108.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   12962	     91950 ns/op	 108.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13104	     91745 ns/op	 109.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1134	   1041880 ns/op	  95.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1166	   1063799 ns/op	  94.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1122	   1092414 ns/op	  91.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1125	   1028270 ns/op	  97.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1150	   1066878 ns/op	  93.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      82	  13009371 ns/op	  76.87 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      82	  13014317 ns/op	  76.84 MB/s	       8 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      84	  13163848 ns/op	  75.97 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      84	  12985674 ns/op	  77.01 MB/s	       8 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      80	  13016955 ns/op	  76.82 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158623021 ns/op	  63.04 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 157994111 ns/op	  63.29 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 157237094 ns/op	  63.60 MB/s	      45 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 157196659 ns/op	  63.61 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 157671620 ns/op	  63.42 MB/s	      32 B/op	       1 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.376s

Result 1 parsed
Benchmark run succesful
77 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMatchOptimized-2   	210169981	         5.700 ns/op	 175.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	208963381	         5.721 ns/op	 174.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	209738091	         5.712 ns/op	 175.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	210569412	         5.712 ns/op	 175.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	211058215	         5.695 ns/op	 175.60 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	8.905s

Result 1 parsed
Benchmark run succesful
78 / 193 done
### Execute Benchmark: /app/vmselect/prometheus/federate_timing_test.go::BenchmarkFederate
Changing directory to dir1: /home/benchUser/other/app/vmselect/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFederate$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFederate-2   	 2361374	       509.2 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2356510	       507.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2350587	       508.2 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2354445	       508.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2366212	       509.0 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/prometheus	8.597s

Result 1 parsed
Benchmark run succesful
79 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	12858691	        91.61 ns/op	  10.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	12982536	        91.95 ns/op	  10.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13120718	        91.47 ns/op	  10.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13168030	        91.12 ns/op	  10.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	12994884	        91.40 ns/op	  10.94 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.447s

Result 1 parsed
Benchmark run succesful
80 / 193 done
### Execute Benchmark: /app/vmagent/remotewrite/pendingseries_timing_test.go::BenchmarkCompressWriteRequestSnappy
Changing directory to dir1: /home/benchUser/other/app/vmagent/remotewrite
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCompressWriteRequestSnappy$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCompressWriteRequestSnappy$]
/app/vmagent/remotewrite/pendingseries_timing_test.go::BenchmarkCompressWriteRequestSnappy timed out after 10s
Benchmark run succesful
81 / 193 done
### Execute Benchmark: /lib/logstorage/pattern_timing_test.go::BenchmarkPatternApply
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPatternApply$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPatternApply$]
/lib/logstorage/pattern_timing_test.go::BenchmarkPatternApply timed out after 10s
Benchmark run succesful
82 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutGetNoOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutGetNoOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutGetNoOverflow-2   	    1669	    706747 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1675	    704207 ns/op	       1 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1700	    693776 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1582	    705800 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1694	    715151 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.285s

Result 1 parsed
Benchmark run succesful
83 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutNoOverFlow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutNoOverFlow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutNoOverFlow-2   	    3276	    353918 ns/op	       1 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3314	    349522 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3364	    347855 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3355	    350960 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3432	    348280 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.098s

Result 1 parsed
Benchmark run succesful
84 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHit
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapHasHit/items_1000-2         	   83427	     14804 ns/op	  67.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   85544	     14492 ns/op	  69.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   87148	     14779 ns/op	  67.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   85878	     14497 ns/op	  68.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   82815	     14313 ns/op	  69.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6661	    180763 ns/op	  55.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6724	    182445 ns/op	  54.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6471	    182282 ns/op	  54.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6560	    185720 ns/op	  53.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6549	    188256 ns/op	  53.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     508	   2464907 ns/op	  40.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     493	   2430670 ns/op	  41.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     513	   2372656 ns/op	  42.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     490	   2366899 ns/op	  42.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     510	   2347478 ns/op	  42.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60401279 ns/op	  16.56 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60243009 ns/op	  16.60 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  59499080 ns/op	  16.81 MB/s	      16 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  61727837 ns/op	  16.20 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60239249 ns/op	  16.60 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1064381976 ns/op	   9.40 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1047244603 ns/op	   9.55 MB/s	     672 B/op	       9 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1040391516 ns/op	   9.61 MB/s	    1120 B/op	      10 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1046671268 ns/op	   9.55 MB/s	     672 B/op	       9 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1048686782 ns/op	   9.54 MB/s	     672 B/op	       9 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	43.556s

Result 1 parsed
Benchmark run succesful
85 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseUint64
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseUint64-2   	18750127	        63.84 ns/op	  78.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18764760	        63.94 ns/op	  78.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18870469	        63.91 ns/op	  78.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18881242	        63.60 ns/op	  78.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18905268	        63.84 ns/op	  78.32 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.358s

Result 1 parsed
Benchmark run succesful
86 / 193 done
### Execute Benchmark: /lib/bytesutil/bytesutil_timing_test.go::BenchmarkToUnsafeBytes
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkToUnsafeBytes$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkToUnsafeBytes-2   	  931764	      1233 ns/op	 811.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  955537	      1236 ns/op	 808.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  975760	      1233 ns/op	 810.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  977269	      1235 ns/op	 809.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  957979	      1230 ns/op	 812.83 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	6.002s

Result 1 parsed
Benchmark run succesful
87 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20727946	        57.46 ns/op	  17.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20825322	        57.43 ns/op	  17.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20781178	        57.53 ns/op	  17.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20902986	        57.47 ns/op	  17.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20818696	        57.50 ns/op	  17.39 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.292s

Result 1 parsed
Benchmark run succesful
88 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterHasHit
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterHasHit/maxItems=1000-2         	    2214	    525470 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2211	    525234 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2204	    526628 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2233	    526397 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2186	    529273 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2166	    531951 ns/op	      19 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2206	    534588 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2193	    537708 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2173	    530118 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2218	    534648 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2071	    553540 ns/op	     197 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2073	    550711 ns/op	     197 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2071	    551741 ns/op	     197 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2104	    555315 ns/op	     194 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2143	    558529 ns/op	     191 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1342	    978735 ns/op	    2991 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1224	   1037264 ns/op	    3279 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1202	    998518 ns/op	    3340 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1082	    999477 ns/op	    3710 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1303	    933403 ns/op	    3080 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     513	   2405985 ns/op	   77992 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     451	   2359695 ns/op	   88713 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     466	   2494352 ns/op	   85858 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     496	   2502574 ns/op	   80665 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     452	   2521198 ns/op	   88517 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	32.737s

Result 1 parsed
Benchmark run succesful
89 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarInt64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarInt64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143178	      8321 ns/op	 961.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  142836	      8318 ns/op	 961.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  144126	      8338 ns/op	 959.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143102	      8350 ns/op	 958.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143822	      8410 ns/op	 951.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68923	     17419 ns/op	 459.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68811	     17493 ns/op	 457.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   69284	     17358 ns/op	 460.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68967	     17403 ns/op	 459.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   69025	     17417 ns/op	 459.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31632	     38020 ns/op	 210.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31568	     38143 ns/op	 209.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31717	     37935 ns/op	 210.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31696	     37871 ns/op	 211.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31664	     37970 ns/op	 210.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14640	     82019 ns/op	  97.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14617	     82098 ns/op	  97.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14634	     81909 ns/op	  97.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14616	     81866 ns/op	  97.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14643	     81855 ns/op	  97.73 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	31.427s

Result 1 parsed
Benchmark run succesful
90 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapForEachSetBitReadonly
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapForEachSetBitReadonly$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9702	    108156 ns/op	 605.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	   10000	    121307 ns/op	 540.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	   10000	    107924 ns/op	 607.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	   10000	    121227 ns/op	 540.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9903	    107963 ns/op	 607.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100040 ns/op	 655.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100127 ns/op	 654.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   12033	     99810 ns/op	 656.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100496 ns/op	 652.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100103 ns/op	 654.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1460344	       816.5 ns/op	80260.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1477695	       815.0 ns/op	80411.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1466353	       817.2 ns/op	80195.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1468612	       817.0 ns/op	80210.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1468994	       821.4 ns/op	79789.29 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	22.118s

Result 1 parsed
Benchmark run succesful
91 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39723	     30412 ns/op	 263.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39488	     41114 ns/op	 194.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   28172	     48269 ns/op	 165.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   27117	     46767 ns/op	 171.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   25075	     47676 ns/op	 167.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   20824	     57512 ns/op	 139.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   18517	     57415 ns/op	 139.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   21848	     51746 ns/op	 154.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   22363	     57166 ns/op	 139.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   32702	     36321 ns/op	 220.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13188	     91154 ns/op	  87.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13182	     90853 ns/op	  88.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13243	     90850 ns/op	  88.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13203	     91038 ns/op	  87.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13238	     90840 ns/op	  88.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6807	    176290 ns/op	  45.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6747	    176112 ns/op	  45.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6846	    175764 ns/op	  45.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6829	    176234 ns/op	  45.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6769	    175726 ns/op	  45.53 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	35.064s

Result 1 parsed
Benchmark run succesful
92 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarUint64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarUint64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  197888	      6055 ns/op	1321.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  196414	      6044 ns/op	1323.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  197827	      6084 ns/op	1314.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  199093	      6043 ns/op	1323.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  198325	      6060 ns/op	1320.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79770	     15130 ns/op	 528.73 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79228	     15133 ns/op	 528.64 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79494	     15356 ns/op	 520.96 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79244	     15190 ns/op	 526.66 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79130	     15215 ns/op	 525.80 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49260	     24377 ns/op	 328.18 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49278	     24353 ns/op	 328.50 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49322	     24251 ns/op	 329.89 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49454	     24331 ns/op	 328.79 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49369	     24369 ns/op	 328.29 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30279	     39883 ns/op	 200.58 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30078	     39653 ns/op	 201.75 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30157	     39550 ns/op	 202.28 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30168	     39635 ns/op	 201.84 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30392	     39581 ns/op	 202.12 MB/s	      25 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	28.400s

Result 1 parsed
Benchmark run succesful
93 / 193 done
### Execute Benchmark: /lib/logstorage/encoding_timing_test.go::BenchmarkStringsBlockUnmarshaler_Unmarshal
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStringsBlockUnmarshaler_Unmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  215677	      5617 ns/op	 596.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  194893	      5587 ns/op	 599.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  222267	      5713 ns/op	 586.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  197182	      5508 ns/op	 607.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  198667	      5762 ns/op	 581.07 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.124s

Result 1 parsed
Benchmark run succesful
94 / 193 done
### Execute Benchmark: /lib/storage/part_search_timing_test.go::BenchmarkPartSearch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPartSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPartSearch$]
/lib/storage/part_search_timing_test.go::BenchmarkPartSearch timed out after 10s
Benchmark run succesful
95 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta2_timing_test.go::BenchmarkUnmarshalInt64NearestDelta2
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64NearestDelta2$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64NearestDelta2-2   	   39769	     30076 ns/op	 272.37 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39612	     30335 ns/op	 270.05 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39646	     31110 ns/op	 263.32 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39741	     30193 ns/op	 271.32 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39352	     30257 ns/op	 270.75 MB/s	       3 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.573s

Result 1 parsed
Benchmark run succesful
96 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheComplex
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheComplex$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheComplex-2   	 1494678	       801.4 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1492989	       801.1 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1491274	       800.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1495478	       798.8 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1498170	       800.8 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	10.073s

Result 1 parsed
Benchmark run succesful
97 / 193 done
### Execute Benchmark: /lib/fasttime/fasttime_timing_test.go::BenchmarkUnixTimestamp
Changing directory to dir1: /home/benchUser/other/lib/fasttime
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnixTimestamp$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnixTimestamp-2   	797411930	         1.397 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	797356332	         1.395 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	798858058	         1.403 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	857775349	         1.404 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	798926269	         1.402 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime	6.441s

Result 1 parsed
Benchmark run succesful
98 / 193 done
### Execute Benchmark: /lib/protoparser/influx/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/influx
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/influx
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 1000000	      1111 ns/op	 253.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1107 ns/op	 254.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1107 ns/op	 254.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1108 ns/op	 254.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1110 ns/op	 254.11 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/influx	5.616s

Result 1 parsed
Benchmark run succesful
99 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasMiss
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetHasMiss/items_1000-2         	  122958	      9692 ns/op	 103.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  122941	      9682 ns/op	 103.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  124338	      9639 ns/op	 103.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  124238	      9663 ns/op	 103.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  123306	      9649 ns/op	 103.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   10000	    107707 ns/op	  92.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   15165	     96762 ns/op	 103.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12400	     96557 ns/op	 103.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   10000	    109956 ns/op	  90.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12421	     90865 ns/op	 110.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1633	    713809 ns/op	 140.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1936	    752355 ns/op	 132.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1921	    694570 ns/op	 143.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1447	    807538 ns/op	 123.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1478	    720743 ns/op	 138.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     195	   6161712 ns/op	 162.29 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     186	   6143020 ns/op	 162.79 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     184	   6189455 ns/op	 161.57 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     192	   6107908 ns/op	 163.72 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     198	   6074525 ns/op	 164.62 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60750889 ns/op	 164.61 MB/s	      11 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60603672 ns/op	 165.01 MB/s	      11 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  61007677 ns/op	 163.91 MB/s	      11 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60856595 ns/op	 164.32 MB/s	      64 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60553595 ns/op	 165.14 MB/s	      40 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	40.026s

Result 1 parsed
Benchmark run succesful
100 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectPartialOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectPartialOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectPartialOverlap/items_1000-2         	  153487	      7659 ns/op	 261.13 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  139782	      8533 ns/op	 234.39 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  154618	      8248 ns/op	 242.50 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  163245	      8367 ns/op	 239.02 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  148498	      8460 ns/op	 236.42 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  145896	      8543 ns/op	2341.15 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  140494	      8528 ns/op	2345.08 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  132294	      8591 ns/op	2328.01 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  137301	      8697 ns/op	2299.55 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  128853	      8366 ns/op	2390.61 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   49838	     22632 ns/op	8837.23 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   51255	     23263 ns/op	8597.22 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   45951	     23746 ns/op	8422.60 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   46690	     23258 ns/op	8599.23 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   47692	     24177 ns/op	8272.20 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    8754	    134540 ns/op	14865.45 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    9074	    136359 ns/op	14667.22 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    9945	    134610 ns/op	14857.74 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    9200	    135116 ns/op	14802.15 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    7765	    136899 ns/op	14609.35 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     874	   1387367 ns/op	14415.80 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     805	   1373306 ns/op	14563.40 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     870	   1401935 ns/op	14265.99 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     850	   1379054 ns/op	14502.69 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     808	   1366254 ns/op	14638.57 MB/s	 2557824 B/op	     622 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	32.789s

Result 1 parsed
Benchmark run succesful
101 / 193 done
### Execute Benchmark: /lib/persistentqueue/fastqueue_timing_test.go::BenchmarkFastQueueThroughputSerial
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastQueueThroughputSerial$]
Benchmark 1 done: 2025-02-08T09:51:41.197Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T09:51:41.200Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:41.203Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T09:51:41.215Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:41.219Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:41.231Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:41.245Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:41.257Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:41.654Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:41.666Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:42.816Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  628794	      1847 ns/op	   5.41 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T09:51:42.829Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:42.832Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:42.843Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:42.846Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:42.859Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:42.875Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:42.887Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:43.456Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:43.467Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:44.545Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  590068	      1846 ns/op	   5.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T09:51:44.558Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:44.562Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:44.574Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:44.577Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:44.590Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:44.607Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:44.619Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:45.060Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:45.072Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:46.336Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  636489	      2004 ns/op	   4.99 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T09:51:46.347Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:46.351Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:46.362Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:46.365Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:46.377Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:46.398Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:46.409Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:46.914Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:46.926Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:48.194Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  637484	      2008 ns/op	   4.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T09:51:48.207Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:48.211Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:48.224Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:48.228Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:48.239Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:48.254Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:48.265Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:48.778Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T09:51:48.789Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:49.861Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  582985	      1858 ns/op	   5.38 MB/s	       0 B/op	       0 allocs/op
2025-02-08T09:51:49.874Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:49.878Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T09:51:49.892Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:49.896Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:49.910Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:49.924Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:49.939Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:50.334Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:50.347Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:51.493Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  620540	      1867 ns/op	  53.57 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T09:51:51.506Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:51.509Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:51.522Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:51.525Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:51.537Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:51.552Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:51.564Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:52.058Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:52.070Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:53.238Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  631934	      1866 ns/op	  53.58 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T09:51:53.251Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:53.254Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:53.265Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:53.268Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:53.281Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:53.297Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:53.308Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:53.847Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:53.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:55.020Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  631546	      1856 ns/op	  53.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T09:51:55.031Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:55.035Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:55.049Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:55.052Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:55.065Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:55.079Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:55.092Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:55.582Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:55.595Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:56.749Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  623960	      1869 ns/op	  53.49 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T09:51:56.762Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:56.765Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:56.776Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:56.779Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:56.791Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:56.807Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:56.820Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:57.378Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T09:51:57.391Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:58.559Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  629805	      1874 ns/op	  53.38 MB/s	       1 B/op	       0 allocs/op
2025-02-08T09:51:58.572Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:58.575Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T09:51:58.588Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:58.591Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:51:58.603Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:58.618Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:51:58.629Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:51:59.138Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:51:59.151Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:00.321Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  610870	      1935 ns/op	 516.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T09:52:00.335Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:00.339Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:00.352Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:00.355Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:00.366Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:00.380Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:00.392Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:00.892Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:00.903Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:02.062Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  608635	      1922 ns/op	 520.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T09:52:02.074Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:02.077Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:02.089Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:02.092Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:02.104Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:02.121Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:02.132Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:02.695Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:02.705Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:03.881Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  617284	      1922 ns/op	 520.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T09:52:03.893Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:03.896Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:03.908Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:03.912Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:03.926Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:03.942Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:03.955Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:04.465Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:04.476Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:05.639Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  612891	      1915 ns/op	 522.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T09:52:05.650Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:05.654Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:05.674Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:05.678Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:05.689Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:05.704Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:05.715Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:06.263Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T09:52:06.273Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:07.446Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  618229	      1912 ns/op	 522.91 MB/s	       0 B/op	       0 allocs/op
2025-02-08T09:52:07.459Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:07.462Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T09:52:07.473Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:07.476Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:07.488Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:07.507Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:07.519Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:08.094Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:08.108Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:09.287Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  538527	      2213 ns/op	4517.91 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T09:52:09.298Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:09.302Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:09.315Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:09.319Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:09.329Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:09.347Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:09.359Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:09.947Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:09.959Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:11.137Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  537996	      2211 ns/op	4523.11 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T09:52:11.152Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:11.155Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:11.167Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:11.170Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:11.183Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:11.199Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:11.213Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:11.738Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:11.750Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:12.919Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  532869	      2216 ns/op	4512.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T09:52:12.931Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:12.935Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:12.946Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:12.950Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:12.961Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:12.979Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:12.990Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:13.584Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:13.596Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:14.775Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  537279	      2217 ns/op	4511.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T09:52:14.788Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:14.791Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:14.804Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:14.808Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:14.819Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:14.836Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:14.847Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:15.403Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T09:52:15.416Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:16.570Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  528776	      2207 ns/op	4531.05 MB/s	       2 B/op	       0 allocs/op
2025-02-08T09:52:16.582Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:16.585Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T09:52:16.597Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:16.600Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:16.612Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:16.658Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:16.668Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:17.572Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:17.586Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:18.767Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  187872	      6362 ns/op	15718.75 MB/s	       5 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T09:52:18.780Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:18.783Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:18.797Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:18.802Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:18.816Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:18.852Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:18.865Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:19.664Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:19.676Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:20.864Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  188488	      6362 ns/op	15717.12 MB/s	       5 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T09:52:20.878Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:20.881Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:20.895Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:20.899Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:20.912Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:20.949Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:20.961Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:21.759Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:21.772Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:22.931Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  185101	      6331 ns/op	15794.22 MB/s	       5 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T09:52:22.943Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:22.945Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:22.958Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:22.962Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:22.975Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:23.020Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:23.035Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:23.894Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:23.907Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:25.090Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  185661	      6438 ns/op	15531.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T09:52:25.102Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:25.106Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:25.124Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:25.130Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:25.150Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:25.180Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:25.195Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:25.797Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T09:52:25.810Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:26.956Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  182116	      6362 ns/op	15718.13 MB/s	       0 B/op	       0 allocs/op
2025-02-08T09:52:26.969Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:26.972Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T09:52:26.987Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:26.996Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:27.008Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:27.324Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:27.338Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:28.450Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14695	     76566 ns/op	13060.60 MB/s	      80 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T09:52:28.463Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:28.466Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:28.482Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:28.494Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:28.510Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:28.760Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:28.772Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:29.902Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14857	     76790 ns/op	13022.55 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T09:52:29.914Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:29.917Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:29.930Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:29.941Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:29.952Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:30.278Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:30.289Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:31.426Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14928	     76903 ns/op	13003.32 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T09:52:31.439Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:31.443Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:31.455Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:31.464Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:31.478Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:31.805Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:31.818Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:32.947Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   15000	     76057 ns/op	13148.04 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T09:52:32.958Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:32.962Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:32.973Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:32.984Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:32.996Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:33.346Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T09:52:33.358Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:34.515Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   15210	     76878 ns/op	13007.57 MB/s	      70 B/op	       0 allocs/op
2025-02-08T09:52:34.530Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:34.540Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T09:52:34.553Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:34.663Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:34.675Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:35.729Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     498	   2137909 ns/op	4677.47 MB/s	    8205 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T09:52:35.742Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:35.749Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:35.761Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:35.895Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:35.906Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:36.978Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     510	   2122786 ns/op	4710.79 MB/s	   10007 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T09:52:36.991Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:36.998Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:37.011Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:37.140Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:37.153Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:38.229Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     523	   2079657 ns/op	4808.49 MB/s	    1972 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T09:52:38.245Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:38.252Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:38.264Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:38.385Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:38.398Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:39.384Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:39.398Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:40.521Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     561	   2025338 ns/op	4937.45 MB/s	    3709 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T09:52:40.535Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:40.541Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:40.554Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:40.686Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T09:52:40.698Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T09:52:41.702Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     513	   1979012 ns/op	5053.03 MB/s	    7965 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	60.528s

Result 1 parsed
Benchmark run succesful
102 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalInt64Array
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64Array$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64Array-2   	    4873	    264368 ns/op	  30.99 MB/s	      20 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4585	    263848 ns/op	  31.05 MB/s	      20 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4465	    268253 ns/op	  30.54 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4274	    266073 ns/op	  30.79 MB/s	      21 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4600	    264179 ns/op	  31.01 MB/s	      20 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.127s

Result 1 parsed
Benchmark run succesful
103 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterHasMiss
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterHasMiss/maxItems=1000-2         	    7845	    147983 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8110	    147829 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    7983	    148096 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8126	    147671 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8095	    150781 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7808	    152792 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7758	    153658 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7611	    151399 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7965	    150961 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7795	    151719 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    6798	    165442 ns/op	      60 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7252	    163258 ns/op	      56 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7184	    163656 ns/op	      57 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7526	    163307 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7353	    163814 ns/op	      55 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    4813	    208899 ns/op	     834 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5053	    203872 ns/op	     794 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5138	    203983 ns/op	     781 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5398	    203798 ns/op	     743 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5666	    201716 ns/op	     708 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3934	    307476 ns/op	   10170 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3895	    306243 ns/op	   10272 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3900	    309173 ns/op	   10258 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3876	    310509 ns/op	   10322 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3866	    304728 ns/op	   10349 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	34.089s

Result 1 parsed
Benchmark run succesful
104 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalGaugeArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalGaugeArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalGaugeArray-2   	    3758	    308474 ns/op	  26.56 MB/s	      26 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3788	    310111 ns/op	  26.42 MB/s	      26 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3928	    313288 ns/op	  26.15 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3793	    309698 ns/op	  26.45 MB/s	      26 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3788	    306020 ns/op	  26.77 MB/s	      26 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.078s

Result 1 parsed
Benchmark run succesful
105 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkRegexpFilterMatch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexpFilterMatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRegexpFilterMatch-2   	  801224	      1389 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  877447	      1378 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  853581	      1372 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  857286	      1375 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  850887	      1379 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.293s

Result 1 parsed
Benchmark run succesful
106 / 193 done
### Execute Benchmark: /lib/prompb/prompb_timing_test.go::BenchmarkWriteRequestUnmarshalProtobuf
Changing directory to dir1: /home/benchUser/other/lib/prompb
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkWriteRequestUnmarshalProtobuf$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/prompb
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkWriteRequestUnmarshalProtobuf-2   	     288	   3785823 ns/op	   2.64 MB/s	  127128 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     292	   3990185 ns/op	   2.51 MB/s	  125386 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     296	   3984380 ns/op	   2.51 MB/s	  123691 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     316	   3887440 ns/op	   2.57 MB/s	  115863 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     289	   3761522 ns/op	   2.66 MB/s	  126689 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/prompb	10.900s

Result 1 parsed
Benchmark run succesful
107 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149535558	         8.047 ns/op	 124.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	150082611	         8.017 ns/op	 124.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149866522	         8.000 ns/op	 125.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149843360	         7.996 ns/op	 125.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	150014473	         7.985 ns/op	 125.23 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.072s

Result 1 parsed
Benchmark run succesful
108 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseIPv4
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseIPv4$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseIPv4-2   	 4824672	       246.3 ns/op	  20.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4893570	       246.1 ns/op	  20.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4822262	       246.7 ns/op	  20.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4791272	       247.2 ns/op	  20.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4875146	       247.3 ns/op	  20.22 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	7.243s

Result 1 parsed
Benchmark run succesful
109 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsTwoSourcesWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsTwoSourcesWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     568	   2033990 ns/op	   4.03 MB/s	    3884 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     589	   2037584 ns/op	   4.02 MB/s	    3623 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     592	   1980290 ns/op	   4.14 MB/s	    3987 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     572	   2006518 ns/op	   4.08 MB/s	    5199 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     523	   2075823 ns/op	   3.95 MB/s	    5393 B/op	      37 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	7.188s

Result 1 parsed
Benchmark run succesful
110 / 193 done
### Execute Benchmark: /lib/protoparser/datadogv2/parser_timing_test.go::BenchmarkRequestUnmarshalJSON
Changing directory to dir1: /home/benchUser/other/lib/protoparser/datadogv2
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRequestUnmarshalJSON$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv2
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRequestUnmarshalJSON-2   	  190426	      6097 ns/op	  53.96 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  192496	      6099 ns/op	  53.95 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  190399	      6077 ns/op	  54.14 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  192684	      6095 ns/op	  53.98 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  190160	      6123 ns/op	  53.73 MB/s	     480 B/op	      13 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv2	6.168s

Result 1 parsed
Benchmark run succesful
111 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkAdd
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAdd/items_1000-2         	  113643	     10493 ns/op	  95.30 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  114997	     10489 ns/op	  95.34 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  115672	     10463 ns/op	  95.57 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  113536	     10511 ns/op	  95.14 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  111147	     10448 ns/op	  95.71 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15850	     76029 ns/op	 131.53 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15877	     75712 ns/op	 132.08 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15795	     75929 ns/op	 131.70 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15729	     76106 ns/op	 131.40 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15861	     77222 ns/op	 129.50 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_100000-2       	    1612	    735084 ns/op	 136.04 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1621	    735100 ns/op	 136.04 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1591	    735742 ns/op	 135.92 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1615	    737306 ns/op	 135.63 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1616	    736691 ns/op	 135.74 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_1000000-2      	     160	   7333710 ns/op	 136.36 MB/s	  142161 B/op	      45 allocs/op
BenchmarkAdd/items_1000000-2      	     162	   7330958 ns/op	 136.41 MB/s	  142161 B/op	      45 allocs/op
BenchmarkAdd/items_1000000-2      	     162	   7347710 ns/op	 136.10 MB/s	  142161 B/op	      45 allocs/op
BenchmarkAdd/items_1000000-2      	     162	   7346982 ns/op	 136.11 MB/s	  142161 B/op	      45 allocs/op
BenchmarkAdd/items_1000000-2      	     160	   7370362 ns/op	 135.68 MB/s	  142161 B/op	      45 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73659969 ns/op	 135.76 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      15	  74097448 ns/op	 134.96 MB/s	 1286939 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73834140 ns/op	 135.44 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73539722 ns/op	 135.98 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73717031 ns/op	 135.65 MB/s	 1286881 B/op	     325 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.185s

Result 1 parsed
Benchmark run succesful
112 / 193 done
### Execute Benchmark: /lib/storage/inmemory_part_timing_test.go::BenchmarkInmemoryPartInitFromRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPartInitFromRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      24	  48203423 ns/op	   2.07 MB/s	 1744442 B/op	       5 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      25	  48657079 ns/op	   2.06 MB/s	 1674726 B/op	       5 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      21	  48358056 ns/op	   2.07 MB/s	 2034626 B/op	      10 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      21	  49222238 ns/op	   2.03 MB/s	 2034601 B/op	      10 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      24	  48783598 ns/op	   2.05 MB/s	 1744464 B/op	       5 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	9.128s

Result 1 parsed
Benchmark run succesful
113 / 193 done
### Execute Benchmark: /lib/promutils/labels_timing_test.go::BenchmarkLabelsInternStrings
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsInternStrings$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsInternStrings-2   	13767055	        86.50 ns/op	  11.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13829746	        86.48 ns/op	  11.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13805938	        86.98 ns/op	  11.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13113104	        87.21 ns/op	  11.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13702831	        86.87 ns/op	  11.51 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	6.385s

Result 1 parsed
Benchmark run succesful
114 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalZeroConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalZeroConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalZeroConstArray-2   	  833602	      1413 ns/op	5797.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  844323	      1406 ns/op	5827.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  859464	      1407 ns/op	5823.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  859426	      1408 ns/op	5818.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  771038	      1411 ns/op	5804.31 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	5.969s

Result 1 parsed
Benchmark run succesful
115 / 193 done
### Execute Benchmark: /lib/logstorage/stream_id_timing_test.go::BenchmarkStreamIDMarshalString
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStreamIDMarshalString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStreamIDMarshalString-2   	31201375	        37.93 ns/op	  26.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31245318	        37.87 ns/op	  26.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31498160	        37.88 ns/op	  26.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31505787	        37.85 ns/op	  26.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31410499	        37.82 ns/op	  26.44 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.154s

Result 1 parsed
Benchmark run succesful
116 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheSimpleParallel
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheSimpleParallel$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2966481	       409.2 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2929036	       407.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2971390	       405.2 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2982646	       406.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2957836	       404.4 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.104s

Result 1 parsed
Benchmark run succesful
117 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalGaugeArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalGaugeArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalGaugeArray-2   	   19683	     61579 ns/op	 133.03 MB/s	       7 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19071	     62285 ns/op	 131.52 MB/s	      10 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19144	     61833 ns/op	 132.49 MB/s	       6 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19298	     62997 ns/op	 130.04 MB/s	       6 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19302	     60959 ns/op	 134.38 MB/s	      10 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	9.142s

Result 1 parsed
Benchmark run succesful
118 / 193 done
### Execute Benchmark: /lib/bytesutil/fast_string_matcher_timing_test.go::BenchmarkFastStringMatcher
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastStringMatcher$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastStringMatcher/#00-2         	38145104	        30.88 ns/op	  32.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	38848522	        31.32 ns/op	  31.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	37836757	        30.95 ns/op	  32.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	39195270	        31.29 ns/op	  31.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	37601478	        30.99 ns/op	  32.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35066712	        35.18 ns/op	  28.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35745301	        33.50 ns/op	  29.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35715754	        33.41 ns/op	  29.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	34532008	        33.42 ns/op	  29.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	36011376	        33.39 ns/op	  29.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	35443394	        33.94 ns/op	  29.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34899924	        33.87 ns/op	  29.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	33422055	        34.29 ns/op	  29.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34795044	        35.07 ns/op	  28.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34121818	        34.46 ns/op	  29.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33538086	        36.32 ns/op	  27.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	32869825	        35.96 ns/op	  27.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33276976	        36.36 ns/op	  27.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	32468227	        36.06 ns/op	  27.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33522242	        36.39 ns/op	  27.48 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	24.625s

Result 1 parsed
Benchmark run succesful
119 / 193 done
### Execute Benchmark: /lib/storage/tag_filters_timing_test.go::BenchmarkOptimizedReMatchCost
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkOptimizedReMatchCost$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkOptimizedReMatchCost$]
/lib/storage/tag_filters_timing_test.go::BenchmarkOptimizedReMatchCost timed out after 10s
Benchmark run succesful
120 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseFloat64
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseFloat64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseFloat64-2   	 7215722	       166.6 ns/op	  30.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7216038	       166.6 ns/op	  30.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7122766	       168.6 ns/op	  29.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 6967066	       168.6 ns/op	  29.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7169613	       167.6 ns/op	  29.84 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.858s

Result 1 parsed
Benchmark run succesful
121 / 193 done
### Execute Benchmark: /lib/protoparser/graphite/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/graphite
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/graphite
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2557942	       467.7 ns/op	 286.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2556926	       468.3 ns/op	 286.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2557437	       467.8 ns/op	 286.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2554533	       467.6 ns/op	 286.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2552046	       469.5 ns/op	 285.39 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/graphite	8.373s

Result 1 parsed
Benchmark run succesful
122 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderBlocksBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderBlocksBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderBlocksBestCase-2   	  429382	      2949 ns/op	33911.75 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  419532	      2951 ns/op	33884.05 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  417530	      2934 ns/op	34086.31 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  389083	      2934 ns/op	34077.47 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  426264	      2978 ns/op	33579.12 MB/s	     704 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.670s

Result 1 parsed
Benchmark run succesful
123 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	184928983	         6.480 ns/op	 154.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185211766	         6.479 ns/op	 154.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185810388	         6.456 ns/op	 154.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185940229	         6.468 ns/op	 154.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185257890	         6.460 ns/op	 154.81 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.291s

Result 1 parsed
Benchmark run succesful
124 / 193 done
### Execute Benchmark: /lib/bytesutil/bytesutil_timing_test.go::BenchmarkToUnsafeString
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkToUnsafeString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkToUnsafeString-2   	  931814	      1241 ns/op	 806.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  954556	      1240 ns/op	 806.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  956101	      1239 ns/op	 807.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  962370	      1234 ns/op	 810.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  971532	      1235 ns/op	 809.84 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	5.996s

Result 1 parsed
Benchmark run succesful
125 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta_timing_test.go::BenchmarkUnmarshalInt64NearestDelta
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64NearestDelta$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64NearestDelta-2   	   61245	     19635 ns/op	 417.22 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61194	     19692 ns/op	 416.02 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61282	     19677 ns/op	 416.32 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   60201	     19697 ns/op	 415.90 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61152	     19691 ns/op	 416.03 MB/s	       8 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.034s

Result 1 parsed
Benchmark run succesful
126 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	20871894	        55.84 ns/op	  17.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21617026	        55.93 ns/op	  17.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21291920	        55.94 ns/op	  17.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21506745	        56.25 ns/op	  17.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21388755	        55.97 ns/op	  17.87 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.276s

Result 1 parsed
Benchmark run succesful
127 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta2_timing_test.go::BenchmarkMarshalInt64NearestDelta2
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64NearestDelta2$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15333	     78490 ns/op	 104.37 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15255	     78208 ns/op	 104.75 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15274	     78399 ns/op	 104.49 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15276	     78527 ns/op	 104.32 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15278	     78255 ns/op	 104.68 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43609	     27585 ns/op	 296.98 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43488	     27511 ns/op	 297.77 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43528	     27469 ns/op	 298.23 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43566	     27533 ns/op	 297.53 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43588	     27462 ns/op	 298.31 MB/s	       2 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	17.375s

Result 1 parsed
Benchmark run succesful
128 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkSanitizeMetricName
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeMetricName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeMetricName/#00-2         	35784394	        33.17 ns/op	  30.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	36664164	        31.96 ns/op	  31.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	37188993	        32.19 ns/op	  31.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	36014311	        33.59 ns/op	  29.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	36563733	        32.60 ns/op	  30.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32782399	        36.20 ns/op	  27.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32611986	        38.76 ns/op	  25.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32425212	        37.01 ns/op	  27.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32454464	        36.70 ns/op	  27.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32554732	        38.49 ns/op	  25.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	32870421	        36.63 ns/op	  27.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	33256069	        36.55 ns/op	  27.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	32725628	        35.65 ns/op	  28.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	33094730	        36.43 ns/op	  27.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	32845484	        35.84 ns/op	  27.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31362475	        38.56 ns/op	  25.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31090648	        38.54 ns/op	  25.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31547034	        38.65 ns/op	  25.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31352644	        38.40 ns/op	  26.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	30778608	        38.46 ns/op	  26.00 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	24.823s

Result 1 parsed
Benchmark run succesful
129 / 193 done
### Execute Benchmark: /lib/tenantmetrics/counter_map_timing_test.go::BenchmarkCounterMapGrowth
Changing directory to dir1: /home/benchUser/other/lib/tenantmetrics
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCounterMapGrowth$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/tenantmetrics
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    5396	    185576 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6830	    181690 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6432	    188692 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6253	    184939 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6300	    179580 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    5974	    184348 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6777	    181382 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6993	    187628 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    5806	    185152 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6217	    186527 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     588	   2036219 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     591	   2052443 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     614	   2051387 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     602	   2020352 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     594	   2024965 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      44	  27122190 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      46	  27318639 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      48	  26591565 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      42	  26568763 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      48	  26888189 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/tenantmetrics	29.564s

Result 1 parsed
Benchmark run succesful
130 / 193 done
### Execute Benchmark: /lib/storage/storage_timing_test.go::BenchmarkStorageAddRows
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStorageAddRows$]
Benchmark 1 done: 2025-02-08T09:59:45.872Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T09:59:45.922Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:45.926Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T09:59:46.042Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:46.046Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:46.160Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:46.164Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:46.302Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:46.306Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:47.235Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:47.239Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  636288	      1903 ns/op	   0.53 MB/s	      54 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T09:59:48.654Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:48.658Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:48.766Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:48.769Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:48.884Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:48.887Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:49.020Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:49.023Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:49.974Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:49.978Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  629730	      1859 ns/op	   0.54 MB/s	      54 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T09:59:51.363Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:51.366Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:51.482Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:51.485Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:51.606Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:51.609Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:51.758Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:51.762Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:52.646Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:52.650Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  630424	      1845 ns/op	   0.54 MB/s	      54 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T09:59:54.007Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:54.010Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:54.137Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:54.141Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:54.267Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:54.270Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:54.423Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:54.427Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:55.327Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:55.331Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  625141	      1872 ns/op	   0.53 MB/s	      54 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T09:59:56.703Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:56.707Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:56.834Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:56.838Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:56.965Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:56.969Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:57.117Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:57.121Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:58.186Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T09:59:58.190Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  628554	      1903 ns/op	   0.53 MB/s	      54 B/op	       0 allocs/op
2025-02-08T09:59:59.595Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T09:59:59.598Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T09:59:59.735Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T09:59:59.738Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T09:59:59.863Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T09:59:59.867Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:00.083Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:00.087Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  280603	      5542 ns/op	   1.80 MB/s	     564 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T10:00:01.842Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:01.846Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:01.983Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:01.988Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:02.130Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:02.134Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:02.337Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:02.341Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  258349	      4132 ns/op	   2.42 MB/s	     522 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T10:00:03.879Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:03.883Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:04.018Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:04.022Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:04.169Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:04.174Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:04.365Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:04.369Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  273970	      4232 ns/op	   2.36 MB/s	     492 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T10:00:06.030Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:06.033Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:06.178Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:06.181Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:06.331Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:06.334Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:06.538Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:06.541Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  271962	      4171 ns/op	   2.40 MB/s	     496 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T10:00:08.168Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:08.172Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:08.318Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:08.322Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:08.470Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:08.474Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:08.676Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T10:00:08.679Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  271060	      4384 ns/op	   2.28 MB/s	     499 B/op	       0 allocs/op
2025-02-08T10:00:10.351Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:10.355Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T10:00:10.500Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:10.503Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:10.650Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:10.654Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:11.286Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:11.289Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   44647	     36710 ns/op	   2.72 MB/s	    5059 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T10:00:13.374Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:13.377Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:13.522Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:13.525Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:13.669Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:13.673Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:14.205Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:14.209Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   45122	     34712 ns/op	   2.88 MB/s	    5004 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T10:00:16.190Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:16.193Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:16.343Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:16.347Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:16.502Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:16.506Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:17.032Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:17.035Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   45205	     37602 ns/op	   2.66 MB/s	    4972 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T10:00:19.157Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:19.161Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:19.315Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:19.319Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:19.479Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:19.482Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:20.031Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:20.035Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   44384	     35202 ns/op	   2.84 MB/s	    5022 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T10:00:22.034Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:22.038Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:22.213Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:22.217Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:22.390Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:22.394Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:23.066Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T10:00:23.070Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   44590	     37381 ns/op	   2.68 MB/s	    5021 B/op	       0 allocs/op
2025-02-08T10:00:25.156Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:25.160Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T10:00:25.324Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:25.329Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:25.531Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:25.535Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3709	    328669 ns/op	   3.04 MB/s	   51857 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T10:00:27.027Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:27.031Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:27.203Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:27.206Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:27.410Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:27.414Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3858	    330778 ns/op	   3.02 MB/s	   54334 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T10:00:28.962Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:28.966Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:29.135Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:29.139Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:29.342Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:29.346Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3793	    331114 ns/op	   3.02 MB/s	   50664 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T10:00:30.890Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:30.894Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:31.071Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:31.075Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:31.285Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:31.289Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3772	    358608 ns/op	   2.79 MB/s	   50882 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T10:00:32.938Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:32.942Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:33.117Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:33.120Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T10:00:33.332Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T10:00:33.336Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3745	    341802 ns/op	   2.93 MB/s	   51624 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	49.246s

Result 1 parsed
Benchmark run succesful
131 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionNoOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionNoOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionNoOverlap/items_1000-2         	  146109	      7783 ns/op	 256.98 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  148462	      7981 ns/op	 250.60 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  143344	      8616 ns/op	 232.12 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  141712	      8664 ns/op	 230.85 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  134612	      8467 ns/op	 236.22 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  129260	      8551 ns/op	2339.00 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  144570	      8694 ns/op	2300.33 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  144120	      8759 ns/op	2283.25 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  146761	      8903 ns/op	2246.41 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  143852	      8799 ns/op	2272.87 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   37034	     33311 ns/op	6003.94 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   37252	     33410 ns/op	5986.20 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   34736	     33175 ns/op	6028.64 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   32961	     32956 ns/op	6068.62 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   36219	     33374 ns/op	5992.65 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4010	    278282 ns/op	7186.96 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4251	    288102 ns/op	6941.99 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    3691	    287719 ns/op	6951.23 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    3878	    284826 ns/op	7021.84 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4008	    279013 ns/op	7168.13 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     432	   2842873 ns/op	7035.14 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     424	   2843297 ns/op	7034.09 MB/s	 5102081 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     418	   2848465 ns/op	7021.32 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     416	   2858400 ns/op	6996.92 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     426	   2780809 ns/op	7192.15 MB/s	 5102080 B/op	    1236 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	35.028s

Result 1 parsed
Benchmark run succesful
132 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalConstArray-2   	  189744	      6249 ns/op	1310.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  192645	      6246 ns/op	1311.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  190425	      6248 ns/op	1311.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  192608	      6245 ns/op	1311.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  191512	      6279 ns/op	1304.69 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.320s

Result 1 parsed
Benchmark run succesful
133 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapForEachSetBit
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapForEachSetBit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4790	    245884 ns/op	 266.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4602	    243322 ns/op	 269.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4945	    243309 ns/op	 269.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4885	    243428 ns/op	 269.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4953	    242872 ns/op	 269.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4796	    243151 ns/op	 269.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4928	    243952 ns/op	 268.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4819	    243601 ns/op	 269.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4929	    243234 ns/op	 269.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4941	    243714 ns/op	 268.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8589	    137728 ns/op	 475.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8560	    137799 ns/op	 475.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8557	    137578 ns/op	 476.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8563	    137571 ns/op	 476.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8494	    137579 ns/op	 476.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8463	    138489 ns/op	 473.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8394	    138690 ns/op	 472.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8486	    138937 ns/op	 471.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8432	    138603 ns/op	 472.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8461	    138473 ns/op	 473.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1514464	       789.9 ns/op	82967.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1495338	       800.3 ns/op	81888.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1501879	       801.2 ns/op	81794.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1501434	       791.9 ns/op	82755.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1511164	       793.5 ns/op	82596.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  845002	      1401 ns/op	46791.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  831468	      1394 ns/op	47004.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  815614	      1405 ns/op	46628.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  846889	      1402 ns/op	46731.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  843218	      1403 ns/op	46713.93 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	39.991s

Result 1 parsed
Benchmark run succesful
134 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkIndexDBGetTSIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIndexDBGetTSIDs$]
Benchmark 1 done: 2025-02-08T10:02:00.610Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIndexDBGetTSIDs-2   	    3787	    311792 ns/op	   3.21 MB/s	     183 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3747	    312600 ns/op	   3.20 MB/s	     185 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3783	    311457 ns/op	   3.21 MB/s	     183 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3711	    312269 ns/op	   3.20 MB/s	     187 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3775	    313354 ns/op	   3.19 MB/s	     175 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	20.979s

Result 1 parsed
Benchmark run succesful
135 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasMiss
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapHasMiss/items_1000-2         	   87422	     13366 ns/op	  74.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   88150	     13347 ns/op	  74.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   87926	     13615 ns/op	  73.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   87794	     13592 ns/op	  73.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   89130	     13801 ns/op	  72.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8032	    148302 ns/op	  67.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8008	    146378 ns/op	  68.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8211	    147089 ns/op	  67.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8181	    145953 ns/op	  68.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    7921	    146277 ns/op	  68.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     582	   2100830 ns/op	  47.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     574	   2095558 ns/op	  47.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     566	   2091451 ns/op	  47.81 MB/s	       1 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     571	   2097749 ns/op	  47.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     567	   2086298 ns/op	  47.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  68595599 ns/op	  14.58 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  69638524 ns/op	  14.36 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  69958759 ns/op	  14.29 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  69410481 ns/op	  14.41 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  68964919 ns/op	  14.50 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 815396600 ns/op	  12.26 MB/s	     336 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 821091574 ns/op	  12.18 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 813283398 ns/op	  12.30 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 813254704 ns/op	  12.30 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 819196124 ns/op	  12.21 MB/s	     112 B/op	       4 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	57.444s

Result 1 parsed
Benchmark run succesful
136 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCacheGetNoOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCacheGetNoOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCacheGetNoOverflow-2   	    4158	    278705 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4321	    278187 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4334	    280244 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4368	    281667 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4323	    278687 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.219s

Result 1 parsed
Benchmark run succesful
137 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalDeltaConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalDeltaConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalDeltaConstArray-2   	  191652	      6271 ns/op	1306.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  190982	      6288 ns/op	1302.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  189932	      6286 ns/op	1303.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  189588	      6260 ns/op	1308.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  190726	      6272 ns/op	1306.14 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.319s

Result 1 parsed
Benchmark run succesful
138 / 193 done
### Execute Benchmark: /lib/promscrape/discovery/kubernetes/pod_timing_test.go::BenchmarkPodGetTargetLabels
Changing directory to dir1: /home/benchUser/other/lib/promscrape/discovery/kubernetes
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPodGetTargetLabels$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discovery/kubernetes
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkPodGetTargetLabels-2   	  684634	      1749 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  689914	      1754 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  680611	      1758 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  687446	      1758 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  661171	      1755 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discovery/kubernetes	6.095s

Result 1 parsed
Benchmark run succesful
139 / 193 done
### Execute Benchmark: /lib/storage/table_search_timing_test.go::BenchmarkTableSearch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
/lib/storage/table_search_timing_test.go::BenchmarkTableSearch timed out after 10s
Benchmark run succesful
140 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalZeroConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalZeroConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalZeroConstArray-2   	  884138	      1316 ns/op	6226.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  890672	      1318 ns/op	6217.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  905470	      1318 ns/op	6215.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  913564	      1319 ns/op	6208.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  911118	      1320 ns/op	6206.02 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.027s

Result 1 parsed
Benchmark run succesful
141 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterBlocksBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterBlocksBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterBlocksBestCase-2   	  218661	      5303 ns/op	18856.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  212097	      5236 ns/op	19098.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  208848	      5283 ns/op	18928.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  208404	      5191 ns/op	19265.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  230320	      5366 ns/op	18636.05 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.358s

Result 1 parsed
Benchmark run succesful
142 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarInt64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarInt64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  130936	      9106 ns/op	 878.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131851	      9119 ns/op	 877.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131838	      9131 ns/op	 876.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131907	      9112 ns/op	 877.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  132424	      9089 ns/op	 880.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78008	     15246 ns/op	 524.72 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78802	     15487 ns/op	 516.55 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   77113	     15492 ns/op	 516.40 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   76392	     15722 ns/op	 508.84 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   77344	     15473 ns/op	 517.03 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43578	     27433 ns/op	 291.62 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43402	     27617 ns/op	 289.67 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43564	     27335 ns/op	 292.66 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43842	     27492 ns/op	 290.99 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43779	     27417 ns/op	 291.79 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28045	     42729 ns/op	 187.23 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28131	     42499 ns/op	 188.24 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28182	     42578 ns/op	 187.89 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28256	     42558 ns/op	 187.98 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28177	     42490 ns/op	 188.28 MB/s	      27 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	28.841s

Result 1 parsed
Benchmark run succesful
143 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheComplexParallel
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheComplexParallel$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2113233	       568.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2121729	       574.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2110849	       567.4 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2105990	       565.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2125606	       565.7 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.913s

Result 1 parsed
Benchmark run succesful
144 / 193 done
### Execute Benchmark: /lib/regexutil/regex_timing_test.go::BenchmarkRegexMatchString
Changing directory to dir1: /home/benchUser/other/lib/regexutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexMatchString$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexMatchString$]
/lib/regexutil/regex_timing_test.go::BenchmarkRegexMatchString timed out after 10s
Benchmark run succesful
145 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutGetOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutGetOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutGetOverflow-2   	    1437	    837708 ns/op	      16 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1393	    829100 ns/op	      13 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1450	    824136 ns/op	      18 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1440	    827400 ns/op	      15 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1430	    839835 ns/op	      20 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.494s

Result 1 parsed
Benchmark run succesful
146 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64-2   	703010656	         1.701 ns/op	 587.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	706504945	         1.700 ns/op	 588.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	701508841	         1.702 ns/op	 587.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	700177707	         1.700 ns/op	 588.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	707783292	         1.699 ns/op	 588.72 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.867s

Result 1 parsed
Benchmark run succesful
147 / 193 done
### Execute Benchmark: /lib/promrelabel/graphite_timing_test.go::BenchmarkGraphiteMatchTemplateMatch
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGraphiteMatchTemplateMatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	39645546	        29.78 ns/op	  33.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40451617	        29.84 ns/op	  33.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40101984	        29.85 ns/op	  33.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40286343	        29.99 ns/op	  33.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40179852	        29.89 ns/op	  33.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	187156730	         6.404 ns/op	 156.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	187211078	         6.427 ns/op	 155.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	187178355	         6.406 ns/op	 156.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	186763993	         6.414 ns/op	 155.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	186171373	         6.422 ns/op	 155.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15859316	        75.83 ns/op	  13.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15886360	        75.61 ns/op	  13.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15835226	        75.72 ns/op	  13.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15841353	        75.83 ns/op	  13.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15921079	        75.89 ns/op	  13.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        10.99 ns/op	  90.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        10.99 ns/op	  91.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.00 ns/op	  90.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        10.98 ns/op	  91.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.01 ns/op	  90.82 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	27.391s

Result 1 parsed
Benchmark run succesful
148 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetAddWithAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetAddWithAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetAddWithAllocs/items_1000-2         	  110169	     10371 ns/op	  96.42 MB/s	    8554 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  113612	     10458 ns/op	  95.63 MB/s	    8549 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  112503	     10548 ns/op	  94.80 MB/s	    8547 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  111480	     10590 ns/op	  94.43 MB/s	    8553 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  112543	     10562 ns/op	  94.68 MB/s	    8549 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15862	     76302 ns/op	 131.06 MB/s	    9844 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15804	     76019 ns/op	 131.55 MB/s	    9836 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15768	     75908 ns/op	 131.74 MB/s	    9825 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15765	     76129 ns/op	 131.36 MB/s	    9810 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15789	     76076 ns/op	 131.45 MB/s	    9802 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1627	    730727 ns/op	 136.85 MB/s	   21332 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1612	    729613 ns/op	 137.06 MB/s	   21431 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1627	    727583 ns/op	 137.44 MB/s	   21573 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1618	    729448 ns/op	 137.09 MB/s	   21605 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1628	    730649 ns/op	 136.86 MB/s	   21457 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     163	   7297614 ns/op	 137.03 MB/s	  135800 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     164	   7298006 ns/op	 137.02 MB/s	  135681 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     164	   7269318 ns/op	 137.56 MB/s	  135892 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     164	   7278604 ns/op	 137.39 MB/s	  135631 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     163	   7283670 ns/op	 137.29 MB/s	  135535 B/op	      41 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73111780 ns/op	 136.78 MB/s	 1283001 B/op	     324 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73339680 ns/op	 136.35 MB/s	 1282446 B/op	     324 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  72954641 ns/op	 137.07 MB/s	 1285219 B/op	     325 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73138822 ns/op	 136.73 MB/s	 1284110 B/op	     324 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  72965305 ns/op	 137.05 MB/s	 1284110 B/op	     324 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.884s

Result 1 parsed
Benchmark run succesful
149 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7924032	       151.6 ns/op	   6.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7854066	       152.1 ns/op	   6.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7903418	       151.5 ns/op	   6.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7895653	       153.1 ns/op	   6.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7827558	       152.0 ns/op	   6.58 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.789s

Result 1 parsed
Benchmark run succesful
150 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterAdd
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterAdd/maxItems=1000-2         	    1687	    704777 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1706	    706497 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1704	    702577 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1641	    703879 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1712	    706422 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1611	    724360 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1665	    728333 ns/op	      24 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1628	    726462 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1641	    729068 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1624	    725056 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1562	    768805 ns/op	     262 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1566	    766775 ns/op	     261 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1542	    777784 ns/op	     265 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1542	    772652 ns/op	     265 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1560	    788419 ns/op	     262 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     772	   1492650 ns/op	    5199 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     807	   1497826 ns/op	    4974 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     856	   1494368 ns/op	    4689 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     786	   1517838 ns/op	    5107 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     823	   1544291 ns/op	    4877 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     217	   5898072 ns/op	  184377 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     222	   5736165 ns/op	  180224 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     206	   5690475 ns/op	  194222 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     205	   5741001 ns/op	  195170 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     208	   5635404 ns/op	  192355 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	34.402s

Result 1 parsed
Benchmark run succesful
151 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterRowsBestCase-2   	    4136	    277256 ns/op	 360.68 MB/s	     781 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4246	    278922 ns/op	 358.52 MB/s	     760 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4298	    279174 ns/op	 358.20 MB/s	     751 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4273	    276741 ns/op	 361.35 MB/s	     756 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4257	    278611 ns/op	 358.92 MB/s	     759 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.396s

Result 1 parsed
Benchmark run succesful
152 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsFourSourcesBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsFourSourcesBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   95629	     11556 ns/op	2835.70 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	  105639	     11942 ns/op	2743.98 MB/s	    2824 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   96427	     11661 ns/op	2810.10 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   98899	     11590 ns/op	2827.28 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   93218	     11695 ns/op	2801.82 MB/s	    2826 B/op	      28 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.749s

Result 1 parsed
Benchmark run succesful
153 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15226336	        78.06 ns/op	  12.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15363843	        78.13 ns/op	  12.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15381249	        78.23 ns/op	  12.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15184257	        78.44 ns/op	  12.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15252249	        78.92 ns/op	  12.67 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.412s

Result 1 parsed
Benchmark run succesful
154 / 193 done
### Execute Benchmark: /lib/stringsutil/less_natural_timing_test.go::BenchmarkLessNatural
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLessNatural$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLessNatural/distinct_string_prefixes-2         	15061447	        79.15 ns/op	 164.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15012367	        78.61 ns/op	 165.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15215173	        78.38 ns/op	 165.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15207346	        78.41 ns/op	 165.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15286320	        78.11 ns/op	 166.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7576059	       157.6 ns/op	  82.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7647466	       156.4 ns/op	  83.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7653998	       156.9 ns/op	  82.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7639032	       156.9 ns/op	  82.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7674732	       157.1 ns/op	  82.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9847676	       122.5 ns/op	 106.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9801214	       122.4 ns/op	 106.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9843651	       122.3 ns/op	 106.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9801427	       122.4 ns/op	 106.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9763544	       122.4 ns/op	 106.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5957664	       202.8 ns/op	  64.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5950038	       202.5 ns/op	  64.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5873364	       203.0 ns/op	  64.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5965076	       202.1 ns/op	  64.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5975439	       202.8 ns/op	  64.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7323823	       164.2 ns/op	  79.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7337727	       164.4 ns/op	  79.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7278583	       164.8 ns/op	  78.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7266440	       164.4 ns/op	  79.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7260039	       169.2 ns/op	  76.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 4906160	       238.5 ns/op	  54.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5112686	       236.1 ns/op	  55.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5094205	       235.0 ns/op	  55.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5099064	       235.2 ns/op	  55.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5106326	       236.2 ns/op	  55.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4063980	       294.7 ns/op	  44.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4051874	       294.5 ns/op	  44.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4069557	       294.3 ns/op	  44.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4078033	       294.4 ns/op	  44.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4090851	       294.3 ns/op	  44.18 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	48.409s

Result 1 parsed
Benchmark run succesful
155 / 193 done
### Execute Benchmark: /lib/logstorage/log_rows_timing_test.go::BenchmarkLogRowsMustAdd
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLogRowsMustAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLogRowsMustAdd-2   	   88398	     14133 ns/op	   0.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   85914	     13830 ns/op	   0.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   83557	     13821 ns/op	   0.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   85659	     13705 ns/op	   0.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   89529	     14082 ns/op	   0.36 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.767s

Result 1 parsed
Benchmark run succesful
156 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockUnmarshal$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockUnmarshal$]
/lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockUnmarshal timed out after 10s
Benchmark run succesful
157 / 193 done
### Execute Benchmark: /lib/storage/inmemory_part_timing_test.go::BenchmarkInmemoryPartInitFromRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPartInitFromRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1154	   1045253 ns/op	  95.67 MB/s	      34 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1213	   1047823 ns/op	  95.44 MB/s	      33 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1152	   1017537 ns/op	  98.28 MB/s	     148 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1192	   1038155 ns/op	  96.32 MB/s	     144 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1144	   1022119 ns/op	  97.84 MB/s	      33 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.946s

Result 1 parsed
Benchmark run succesful
158 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHitRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHitRandomLastBits$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHitRandomLastBits$]
/lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHitRandomLastBits timed out after 10s
Benchmark run succesful
159 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64-2   	801658502	         1.494 ns/op	 669.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	801056882	         1.495 ns/op	 668.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	804403923	         1.494 ns/op	 669.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	805808628	         1.492 ns/op	 670.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	800347622	         1.492 ns/op	 670.05 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.773s

Result 1 parsed
Benchmark run succesful
160 / 193 done
### Execute Benchmark: /lib/stringsutil/stringsutil_timing_test.go::BenchmarkAppendLowercase
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendLowercase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23434420	        49.82 ns/op	 883.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23948278	        49.88 ns/op	 882.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23987010	        50.04 ns/op	 879.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	24005065	        49.88 ns/op	 882.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	24087832	        50.14 ns/op	 877.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23579910	        50.83 ns/op	 865.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23595247	        50.96 ns/op	 863.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23814526	        50.64 ns/op	 868.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23717108	        50.69 ns/op	 868.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23596885	        50.61 ns/op	 869.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22852027	        52.70 ns/op	 834.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22589626	        52.73 ns/op	 834.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22569972	        52.79 ns/op	 833.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22505922	        53.06 ns/op	 829.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22387854	        53.11 ns/op	 828.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1091 ns/op	  69.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1090 ns/op	  69.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1096 ns/op	  69.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1093 ns/op	  69.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1094 ns/op	  69.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1053 ns/op	  72.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1054 ns/op	  72.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1055 ns/op	  72.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1052 ns/op	  72.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1051 ns/op	  72.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1394000	       862.0 ns/op	  88.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1391433	       862.3 ns/op	  88.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1393774	       863.7 ns/op	  87.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1390504	       865.0 ns/op	  87.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1386810	       865.6 ns/op	  87.80 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	39.979s

Result 1 parsed
Benchmark run succesful
161 / 193 done
### Execute Benchmark: /lib/streamaggr/deduplicator_timing_test.go::BenchmarkDeduplicatorPush
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicatorPush$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicatorPush-2   	      64	  18178536 ns/op	   0.55 MB/s	   16735 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      64	  18143180 ns/op	   0.55 MB/s	   16730 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      55	  18220537 ns/op	   0.55 MB/s	   77085 B/op	      45 allocs/op
BenchmarkDeduplicatorPush-2   	      64	  18271706 ns/op	   0.55 MB/s	   16730 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      55	  18278099 ns/op	   0.55 MB/s	   77105 B/op	      45 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr	8.239s

Result 1 parsed
Benchmark run succesful
162 / 193 done
### Execute Benchmark: /lib/streamaggr/streamaggr_timing_test.go::BenchmarkAggregatorsPush
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAggregatorsPush$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAggregatorsPush$]
/lib/streamaggr/streamaggr_timing_test.go::BenchmarkAggregatorsPush timed out after 10s
Benchmark run succesful
163 / 193 done
### Execute Benchmark: /lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePrefix
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePrefix$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePrefix$]
/lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePrefix timed out after 10s
Benchmark run succesful
164 / 193 done
### Execute Benchmark: /lib/bytesutil/internstring_timing_test.go::BenchmarkInternString
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInternString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInternString-2   	    2598	    412159 ns/op	  24.26 MB/s	     154 B/op	       7 allocs/op
BenchmarkInternString-2   	    2764	    414263 ns/op	  24.14 MB/s	     145 B/op	       7 allocs/op
BenchmarkInternString-2   	    2698	    415469 ns/op	  24.07 MB/s	     149 B/op	       7 allocs/op
BenchmarkInternString-2   	    2761	    421628 ns/op	  23.72 MB/s	     145 B/op	       7 allocs/op
BenchmarkInternString-2   	    2800	    420389 ns/op	  23.79 MB/s	     143 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	5.940s

Result 1 parsed
Benchmark run succesful
165 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHitRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHitRandomLastBits$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHitRandomLastBits$]
/lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHitRandomLastBits timed out after 10s
Benchmark run succesful
166 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkAppendDecimalToFloat
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendDecimalToFloat$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48208	     24806 ns/op	 330.24 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48585	     24800 ns/op	 330.33 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48343	     24858 ns/op	 329.55 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48146	     24797 ns/op	 330.36 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48154	     24850 ns/op	 329.66 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64231	     18691 ns/op	 438.29 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   63969	     18648 ns/op	 439.30 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64272	     18656 ns/op	 439.11 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64392	     18622 ns/op	 439.91 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64275	     18669 ns/op	 438.80 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  502762	      2410 ns/op	3399.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  505036	      2402 ns/op	3411.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  492529	      2440 ns/op	3357.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  456240	      2443 ns/op	3352.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  496208	      2424 ns/op	3379.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  370899	      3229 ns/op	2536.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  378246	      3214 ns/op	2548.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  373093	      3209 ns/op	2552.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  378183	      3226 ns/op	2539.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  377929	      3235 ns/op	2532.27 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	26.508s

Result 1 parsed
Benchmark run succesful
167 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionFullOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionFullOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionFullOverlap/items_1000-2         	  151039	      7681 ns/op	 260.39 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  169564	      7634 ns/op	 261.97 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  167217	      8009 ns/op	 249.72 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  143899	      8095 ns/op	 247.06 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  147549	      7867 ns/op	 254.24 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  153730	      8202 ns/op	2438.41 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  144084	      8784 ns/op	2276.99 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  127813	      8746 ns/op	2286.78 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  142004	      8794 ns/op	2274.27 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  142699	      8697 ns/op	2299.76 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   47276	     25135 ns/op	7956.92 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   46788	     25379 ns/op	7880.49 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   46333	     27475 ns/op	7279.24 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   42763	     26802 ns/op	7462.14 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   43870	     25667 ns/op	7792.11 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    7869	    154427 ns/op	12951.07 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    6523	    157938 ns/op	12663.16 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    8053	    153904 ns/op	12995.08 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    7810	    162255 ns/op	12326.30 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    6916	    159554 ns/op	12534.90 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     724	   1775224 ns/op	11266.18 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     661	   1762525 ns/op	11347.36 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     634	   1758050 ns/op	11376.24 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     651	   1794534 ns/op	11144.95 MB/s	 2566145 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     662	   1761459 ns/op	11354.22 MB/s	 2566145 B/op	     624 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	35.320s

Result 1 parsed
Benchmark run succesful
168 / 193 done
### Execute Benchmark: /lib/promutils/labelscompressor_timing_test.go::BenchmarkLabelsCompressorCompress
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsCompressorCompress$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsCompressorCompress-2   	   14092	     85689 ns/op	   1.17 MB/s	      33 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13842	     87078 ns/op	   1.15 MB/s	      36 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13786	     86638 ns/op	   1.15 MB/s	      32 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13891	     86319 ns/op	   1.16 MB/s	      33 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13862	     85757 ns/op	   1.17 MB/s	      32 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	10.372s

Result 1 parsed
Benchmark run succesful
169 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddRandomLastBits$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     446	   2510499 ns/op	  39.83 MB/s	  142968 B/op	     121 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     472	   2512470 ns/op	  39.80 MB/s	  138898 B/op	     122 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     469	   2551335 ns/op	  39.20 MB/s	  152553 B/op	     124 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     460	   2520597 ns/op	  39.67 MB/s	  138678 B/op	     115 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     471	   2491727 ns/op	  40.13 MB/s	  129008 B/op	     111 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     397	   3152798 ns/op	  31.72 MB/s	  521968 B/op	     401 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     369	   3115248 ns/op	  32.10 MB/s	  490801 B/op	     408 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     357	   3227068 ns/op	  30.99 MB/s	  546827 B/op	     432 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     360	   3144953 ns/op	  31.80 MB/s	  489866 B/op	     401 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     372	   3025624 ns/op	  33.05 MB/s	  443563 B/op	     352 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     286	   4579093 ns/op	  21.84 MB/s	 1235776 B/op	    1050 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     294	   4302011 ns/op	  23.24 MB/s	 1132650 B/op	     960 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     290	   4225263 ns/op	  23.67 MB/s	 1068694 B/op	     902 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     295	   4061188 ns/op	  24.62 MB/s	  982777 B/op	     812 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     243	   4501231 ns/op	  22.22 MB/s	 1159076 B/op	     987 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     192	   5387979 ns/op	  18.56 MB/s	 1654410 B/op	    1472 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     248	   6266601 ns/op	  15.96 MB/s	 2099825 B/op	    1943 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     222	   5964035 ns/op	  16.77 MB/s	 1940625 B/op	    1724 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     238	   5974436 ns/op	  16.74 MB/s	 1959341 B/op	    1787 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     195	   5778666 ns/op	  17.31 MB/s	 1854492 B/op	    1649 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	32.146s

Result 1 parsed
Benchmark run succesful
170 / 193 done
### Execute Benchmark: /lib/promutils/labelscompressor_timing_test.go::BenchmarkLabelsCompressorDecompress
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsCompressorDecompress$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsCompressorDecompress-2   	   97868	     11916 ns/op	   8.39 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	  100777	     11884 ns/op	   8.41 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   99322	     11898 ns/op	   8.40 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   98023	     11825 ns/op	   8.46 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	  101344	     11934 ns/op	   8.38 MB/s	       4 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	6.564s

Result 1 parsed
Benchmark run succesful
171 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddReuse
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddReuse$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddReuse/items_1000-2         	   47004	     25494 ns/op	  39.22 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46837	     25621 ns/op	  39.03 MB/s	     113 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46800	     25635 ns/op	  39.01 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46574	     25613 ns/op	  39.04 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   47276	     25559 ns/op	  39.13 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4328	    271283 ns/op	  36.86 MB/s	    2317 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4177	    271129 ns/op	  36.88 MB/s	    2317 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4341	    271146 ns/op	  36.88 MB/s	    2311 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4316	    271028 ns/op	  36.90 MB/s	    2316 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4191	    271667 ns/op	  36.81 MB/s	    2315 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     308	   3835651 ns/op	  26.07 MB/s	  214686 B/op	    1674 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     309	   3849640 ns/op	  25.98 MB/s	  214616 B/op	    1674 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     313	   3822335 ns/op	  26.16 MB/s	  214610 B/op	    1675 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     312	   3826235 ns/op	  26.14 MB/s	  214608 B/op	    1675 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     318	   3965302 ns/op	  25.22 MB/s	  214391 B/op	    1674 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  87318552 ns/op	  11.45 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  86903887 ns/op	  11.51 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  86574772 ns/op	  11.55 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  86125036 ns/op	  11.61 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  87307024 ns/op	  11.45 MB/s	 3582859 B/op	      18 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1708969860 ns/op	   5.85 MB/s	361013520 B/op	      43 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1315259216 ns/op	   7.60 MB/s	361013072 B/op	      42 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1334920949 ns/op	   7.49 MB/s	361013072 B/op	      42 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1318072344 ns/op	   7.59 MB/s	361013616 B/op	      44 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1322654543 ns/op	   7.56 MB/s	361013616 B/op	      44 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.525s

Result 1 parsed
Benchmark run succesful
172 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalInt64Array
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64Array$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64Array-2   	   24004	     49726 ns/op	 164.74 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23688	     49760 ns/op	 164.63 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23095	     49459 ns/op	 165.63 MB/s	       5 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   24092	     50493 ns/op	 162.24 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23731	     50622 ns/op	 161.83 MB/s	       5 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	8.516s

Result 1 parsed
Benchmark run succesful
173 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkScrapeWorkScrapeInternal
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkScrapeWorkScrapeInternal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkScrapeWorkScrapeInternal-2   	  163468	      7262 ns/op	 179.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  164571	      7251 ns/op	 180.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  165458	      7257 ns/op	 179.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  164427	      7295 ns/op	 179.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  166359	      7308 ns/op	 178.70 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.387s

Result 1 parsed
Benchmark run succesful
174 / 193 done
### Execute Benchmark: /lib/logstorage/inmemory_part_timing_test.go::BenchmarkInmemoryPart_MustInitFromRows
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPart_MustInitFromRows$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPart_MustInitFromRows$]
/lib/logstorage/inmemory_part_timing_test.go::BenchmarkInmemoryPart_MustInitFromRows timed out after 10s
Benchmark run succesful
175 / 193 done
### Execute Benchmark: /lib/regexutil/promregex_timing_test.go::BenchmarkPromRegexMatchString
Changing directory to dir1: /home/benchUser/other/lib/regexutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromRegexMatchString$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromRegexMatchString$]
/lib/regexutil/promregex_timing_test.go::BenchmarkPromRegexMatchString timed out after 10s
Benchmark run succesful
176 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	186186205	         6.451 ns/op	 155.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	185684382	         6.478 ns/op	 154.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	184669448	         6.472 ns/op	 154.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	185050651	         6.455 ns/op	 154.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	185191633	         6.451 ns/op	 155.02 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.286s

Result 1 parsed
Benchmark run succesful
177 / 193 done
### Execute Benchmark: /lib/fs/reader_at_timing_test.go::BenchmarkReaderAtMustReadAt
Changing directory to dir1: /home/benchUser/other/lib/fs
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReaderAtMustReadAt$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReaderAtMustReadAt$]
/lib/fs/reader_at_timing_test.go::BenchmarkReaderAtMustReadAt timed out after 10s
Benchmark run succesful
178 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta_timing_test.go::BenchmarkMarshalInt64NearestDelta
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64NearestDelta$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18361	     65516 ns/op	 125.04 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18348	     65668 ns/op	 124.75 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18421	     65292 ns/op	 125.47 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18450	     65184 ns/op	 125.68 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18439	     64941 ns/op	 126.14 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42979	     28013 ns/op	 292.43 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42843	     27980 ns/op	 292.78 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42702	     28028 ns/op	 292.28 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42615	     28096 ns/op	 291.57 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42722	     28057 ns/op	 291.97 MB/s	       5 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	16.755s

Result 1 parsed
Benchmark run succesful
179 / 193 done
### Execute Benchmark: /app/vmalert/datasource/vm_prom_api_timing_test.go::BenchmarkPromInstantUnmarshal
Changing directory to dir1: /home/benchUser/other/app/vmalert/datasource
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromInstantUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmalert/datasource
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     812	   1453341 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     823	   1444165 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     823	   1445466 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     819	   1442503 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     817	   1442883 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmalert/datasource	6.679s

Result 1 parsed
Benchmark run succesful
180 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkRegexpFilterMismatch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexpFilterMismatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRegexpFilterMismatch-2   	  720826	      1661 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  749116	      1659 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  746551	      1596 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  731418	      1607 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  741366	      1625 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.458s

Result 1 parsed
Benchmark run succesful
181 / 193 done
### Execute Benchmark: /lib/blockcache/blockcache_timing_test.go::BenchmarkCacheGet
Changing directory to dir1: /home/benchUser/other/lib/blockcache
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCacheGet$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCacheGet-2   	    1070	   1091435 ns/op	   9.16 MB/s	    1587 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1054	   1081735 ns/op	   9.24 MB/s	    1610 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1093	   1089196 ns/op	   9.18 MB/s	    1559 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1071	   1086876 ns/op	   9.20 MB/s	    1588 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1078	   1083282 ns/op	   9.23 MB/s	    1579 B/op	       9 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache	6.435s

Result 1 parsed
Benchmark run succesful
182 / 193 done
### Execute Benchmark: /lib/persistentqueue/persistentqueue_timing_test.go::BenchmarkQueueThroughputConcurrent
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkQueueThroughputConcurrent$]
Benchmark 1 done: 2025-02-08T10:24:45.853Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12104	     88520 ns/op	   1.13 MB/s	      88 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12082	     89061 ns/op	   1.12 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12430	     89604 ns/op	   1.12 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12792	     87499 ns/op	   1.14 MB/s	      83 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12338	     88387 ns/op	   1.13 MB/s	      86 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11797	     91660 ns/op	  10.91 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   12218	     90264 ns/op	  11.08 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   12379	     91119 ns/op	  10.97 MB/s	      86 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11857	     91715 ns/op	  10.90 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   12254	     89510 ns/op	  11.17 MB/s	       2 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9631	    110112 ns/op	  90.82 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9862	    110920 ns/op	  90.16 MB/s	     107 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	   10310	    109527 ns/op	  91.30 MB/s	     102 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	   10171	    110090 ns/op	  90.83 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9912	    108889 ns/op	  91.84 MB/s	      54 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1659	    777475 ns/op	 128.62 MB/s	      14 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1562	    800184 ns/op	 124.97 MB/s	     692 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1562	    803203 ns/op	 124.50 MB/s	       8 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1636	    819079 ns/op	 122.09 MB/s	       9 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1515	    797006 ns/op	 125.47 MB/s	      13 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     159	   8134379 ns/op	 122.94 MB/s	      85 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     163	   8129843 ns/op	 123.00 MB/s	    6511 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     140	   8126563 ns/op	 123.05 MB/s	    3834 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     159	   8159403 ns/op	 122.56 MB/s	    6933 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     162	   8406597 ns/op	 118.95 MB/s	    6659 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      16	  83714709 ns/op	 119.45 MB/s	   74528 B/op	      12 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      16	  83437897 ns/op	 119.85 MB/s	   82773 B/op	      12 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      16	  84370244 ns/op	 118.53 MB/s	    1313 B/op	      12 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      18	  83631717 ns/op	 119.57 MB/s	   15741 B/op	      11 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      16	  82877063 ns/op	 120.66 MB/s	   82751 B/op	      12 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 817558974 ns/op	 122.32 MB/s	  797552 B/op	     108 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 835162164 ns/op	 119.74 MB/s	 1054972 B/op	      98 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 837064846 ns/op	 119.47 MB/s	 1055344 B/op	     103 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 834190814 ns/op	 119.88 MB/s	 1321660 B/op	     104 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 836818689 ns/op	 119.50 MB/s	 1581156 B/op	     120 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	55.465s

Result 1 parsed
Benchmark run succesful
183 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkAppendFloatToDecimal
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendFloatToDecimal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1630	    730462 ns/op	  11.21 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1654	    727327 ns/op	  11.26 MB/s	      79 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1644	    725561 ns/op	  11.29 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1658	    724458 ns/op	  11.31 MB/s	      79 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1639	    726689 ns/op	  11.27 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5947	    200845 ns/op	  40.79 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5949	    200202 ns/op	  40.92 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    6000	    200198 ns/op	  40.92 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    6013	    199994 ns/op	  40.96 MB/s	      21 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5955	    200379 ns/op	  40.88 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  487845	      2400 ns/op	3413.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  505214	      2397 ns/op	3417.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  485164	      2410 ns/op	3399.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  505879	      2408 ns/op	3401.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  492412	      2400 ns/op	3412.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  364870	      3208 ns/op	2553.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  370078	      3209 ns/op	2553.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  378555	      3208 ns/op	2553.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  377392	      3198 ns/op	2561.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  373183	      3195 ns/op	2564.36 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	24.676s

Result 1 parsed
Benchmark run succesful
184 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkIndexDBAddTSIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIndexDBAddTSIDs$]
Benchmark 1 done: 2025-02-08T10:26:07.836Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIndexDBAddTSIDs-2   	     522	  13076176 ns/op	   0.08 MB/s	 1857488 B/op	      66 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     554	  14846664 ns/op	   0.07 MB/s	 2007155 B/op	      69 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     442	  12848963 ns/op	   0.08 MB/s	 1839557 B/op	      65 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     546	  15090108 ns/op	   0.07 MB/s	 2055437 B/op	      70 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     532	  12798606 ns/op	   0.08 MB/s	 1811298 B/op	      65 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	58.258s

Result 1 parsed
Benchmark run succesful
185 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkAreIdenticalSeriesFast
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAreIdenticalSeriesFast$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1282786	       935.9 ns/op	2161.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1281925	       934.9 ns/op	2163.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1282772	       934.8 ns/op	2164.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1282713	       933.6 ns/op	2166.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1276322	       935.9 ns/op	2161.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1212206	       995.2 ns/op	2032.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1202595	       992.4 ns/op	2038.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1208713	       986.7 ns/op	2050.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1205335	       991.9 ns/op	2039.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1205322	       992.7 ns/op	2037.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  615132	      1876 ns/op	3532.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  640225	      1876 ns/op	3532.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  639289	      1874 ns/op	3536.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  646394	      1878 ns/op	3529.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  633075	      1882 ns/op	3520.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  573648	      2089 ns/op	3171.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  529910	      2078 ns/op	3187.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  545631	      2091 ns/op	3168.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  579187	      2102 ns/op	3152.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  570836	      2096 ns/op	3161.61 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	33.796s

Result 1 parsed
Benchmark run succesful
186 / 193 done
### Execute Benchmark: /lib/storage/table_timing_test.go::BenchmarkTableAddRows
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableAddRows$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableAddRows$]
/lib/storage/table_timing_test.go::BenchmarkTableAddRows timed out after 10s
Benchmark run succesful
187 / 193 done
### Execute Benchmark: /lib/logstorage/encoding_timing_test.go::BenchmarkMarshalStringsBlock
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalStringsBlock$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalStringsBlock-2   	   81961	     13472 ns/op	 248.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   81426	     13816 ns/op	 242.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   86173	     13369 ns/op	 250.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   76309	     13494 ns/op	 248.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   82849	     13483 ns/op	 248.32 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.294s

Result 1 parsed
Benchmark run succesful
188 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24909	     48384 ns/op	 165.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24865	     48386 ns/op	 165.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24814	     48453 ns/op	 165.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24877	     48354 ns/op	 165.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24759	     48410 ns/op	 165.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18907	     63910 ns/op	 125.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18847	     63732 ns/op	 125.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18826	     63579 ns/op	 125.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18888	     63609 ns/op	 125.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18912	     63749 ns/op	 125.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13180	     91334 ns/op	  87.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13179	     91033 ns/op	  87.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13160	     91131 ns/op	  87.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13190	     90662 ns/op	  88.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13206	     90817 ns/op	  88.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6679	    178599 ns/op	  44.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6687	    178898 ns/op	  44.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6676	    179236 ns/op	  44.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6616	    179078 ns/op	  44.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6700	    178924 ns/op	  44.71 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	34.393s

Result 1 parsed
Benchmark run succesful
189 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectFullOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectFullOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectFullOverlap/items_1000-2         	  147156	      7792 ns/op	 256.67 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  150510	      8117 ns/op	 246.38 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  148608	      8346 ns/op	 239.63 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  157599	      8628 ns/op	 231.80 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  141516	      8307 ns/op	 240.75 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   76417	     16542 ns/op	1209.08 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   68877	     17282 ns/op	1157.24 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   69004	     17572 ns/op	1138.14 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   70803	     17166 ns/op	1165.07 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   68491	     16898 ns/op	1183.54 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   60045	     18137 ns/op	11027.38 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   61620	     18838 ns/op	10616.94 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   63760	     18153 ns/op	11017.30 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   65286	     18260 ns/op	10952.91 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   61623	     18507 ns/op	10806.98 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    6582	    161279 ns/op	12400.88 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7812	    158400 ns/op	12626.30 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    6498	    159515 ns/op	12538.03 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7669	    169925 ns/op	11769.92 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    6174	    162721 ns/op	12291.01 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     674	   1777125 ns/op	11254.13 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     675	   1728055 ns/op	11573.71 MB/s	 2549505 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     696	   1730736 ns/op	11555.78 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     675	   1732780 ns/op	11542.14 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     718	   1736610 ns/op	11516.69 MB/s	 2549504 B/op	     620 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.004s

Result 1 parsed
Benchmark run succesful
190 / 193 done
### Execute Benchmark: /lib/mergeset/table_search_timing_test.go::BenchmarkTableSearch
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
/lib/mergeset/table_search_timing_test.go::BenchmarkTableSearch timed out after 10s
Benchmark run succesful
191 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	126984447	         9.512 ns/op	 105.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	126656242	         9.496 ns/op	 105.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	127296439	         9.434 ns/op	 106.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	127033579	         9.461 ns/op	 105.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	126744253	         9.472 ns/op	 105.57 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.817s

Result 1 parsed
Benchmark run succesful
192 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockMarshal
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockMarshal$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockMarshal$]
/lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockMarshal timed out after 10s
Benchmark run succesful
193 / 193 done
--- Run #0 of Baseline executed 193 which took 5100014764148ns
---------- Run #1 ----------
--- Run #1 of Baseline
# Collect Benchmarks in Dir: /lib/regexutil
## Collect Benchmarks in File: promregex_timing_test.go
## Collect Benchmarks in File: regex_timing_test.go
# Collect Benchmarks in Dir: /lib/storage
## Collect Benchmarks in File: part_search_timing_test.go
## Collect Benchmarks in File: table_timing_test.go
## Collect Benchmarks in File: tag_filters_timing_test.go
## Collect Benchmarks in File: block_stream_reader_timing_test.go
## Collect Benchmarks in File: inmemory_part_timing_test.go
## Collect Benchmarks in File: index_db_timing_test.go
## Collect Benchmarks in File: merge_timing_test.go
## Collect Benchmarks in File: storage_timing_test.go
## Collect Benchmarks in File: table_search_timing_test.go
## Collect Benchmarks in File: block_stream_writer_timing_test.go
## Collect Benchmarks in File: dedup_timing_test.go
# Collect Benchmarks in Dir: /app/vmalert/datasource
## Collect Benchmarks in File: vm_prom_api_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/newrelic
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/logstorage
## Collect Benchmarks in File: hash_tokenizer_timing_test.go
## Collect Benchmarks in File: pattern_timing_test.go
## Collect Benchmarks in File: tokenizer_timing_test.go
## Collect Benchmarks in File: bitmap_timing_test.go
## Collect Benchmarks in File: block_timing_test.go
## Collect Benchmarks in File: hash128_timing_test.go
## Collect Benchmarks in File: inmemory_part_timing_test.go
## Collect Benchmarks in File: log_rows_timing_test.go
## Collect Benchmarks in File: stream_id_timing_test.go
## Collect Benchmarks in File: values_encoder_timing_test.go
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: filter_timing_test.go
# Collect Benchmarks in Dir: /lib/persistentqueue
## Collect Benchmarks in File: fastqueue_timing_test.go
## Collect Benchmarks in File: persistentqueue_timing_test.go
# Collect Benchmarks in Dir: /lib/prompbmarshal
## Collect Benchmarks in File: prompbmarshal_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentsdb
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/decimal
## Collect Benchmarks in File: decimal_timing_test.go
# Collect Benchmarks in Dir: /lib/fasttime
## Collect Benchmarks in File: fasttime_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape/discovery/kubernetes
## Collect Benchmarks in File: pod_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/loki
## Collect Benchmarks in File: loki_json_timing_test.go
## Collect Benchmarks in File: loki_protobuf_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/promql
## Collect Benchmarks in File: parse_cache_timing_test.go
## Collect Benchmarks in File: rollup_timing_test.go
# Collect Benchmarks in Dir: /lib/promutils
## Collect Benchmarks in File: labels_timing_test.go
## Collect Benchmarks in File: labelscompressor_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/datadogv1
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/datadogv2
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/influx
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/elasticsearch
## Collect Benchmarks in File: elasticsearch_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/netstorage
## Collect Benchmarks in File: netstorage_timing_test.go
# Collect Benchmarks in Dir: /lib/fs
## Collect Benchmarks in File: reader_at_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/csvimport
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/graphite
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/prometheus
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/stringsutil
## Collect Benchmarks in File: less_natural_timing_test.go
## Collect Benchmarks in File: stringsutil_timing_test.go
# Collect Benchmarks in Dir: /lib/tenantmetrics
## Collect Benchmarks in File: counter_map_timing_test.go
# Collect Benchmarks in Dir: /app/vmagent/remotewrite
## Collect Benchmarks in File: pendingseries_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/prometheus
## Collect Benchmarks in File: federate_timing_test.go
# Collect Benchmarks in Dir: /lib/mergeset
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: table_search_timing_test.go
# Collect Benchmarks in Dir: /lib/prompb
## Collect Benchmarks in File: prompb_timing_test.go
# Collect Benchmarks in Dir: /lib/promrelabel
## Collect Benchmarks in File: graphite_timing_test.go
## Collect Benchmarks in File: if_expression_timing_test.go
## Collect Benchmarks in File: relabel_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape
## Collect Benchmarks in File: config_timing_test.go
## Collect Benchmarks in File: scrapework_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentelemetry/stream
## Collect Benchmarks in File: streamparser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/vmimport
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/blockcache
## Collect Benchmarks in File: blockcache_timing_test.go
# Collect Benchmarks in Dir: /lib/encoding
## Collect Benchmarks in File: nearest_delta2_timing_test.go
## Collect Benchmarks in File: nearest_delta_timing_test.go
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: int_timing_test.go
# Collect Benchmarks in Dir: /lib/uint64set
## Collect Benchmarks in File: uint64set_timing_test.go
# Collect Benchmarks in Dir: /lib/bytesutil
## Collect Benchmarks in File: bytesutil_timing_test.go
## Collect Benchmarks in File: fast_string_matcher_timing_test.go
## Collect Benchmarks in File: fast_string_transformer_timing_test.go
## Collect Benchmarks in File: internstring_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape/discoveryutils
## Collect Benchmarks in File: utils_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentsdbhttp
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/streamaggr
## Collect Benchmarks in File: deduplicator_timing_test.go
## Collect Benchmarks in File: streamaggr_timing_test.go
## Collect Benchmarks in File: dedup_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/opentelemetry
## Collect Benchmarks in File: opentelemetry_timing_test.go
# Collect Benchmarks in Dir: /lib/bloomfilter
## Collect Benchmarks in File: filter_timing_test.go
#####################
## Shuffle Benchmarks
#####################
### Execute Benchmark: /lib/protoparser/newrelic/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/newrelic
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/newrelic
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  244056	      4879 ns/op	 309.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  244896	      4883 ns/op	 309.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  244902	      4876 ns/op	 309.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  245613	      4896 ns/op	 308.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  246176	      4904 ns/op	 307.72 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/newrelic	6.254s

Result 1 parsed
Benchmark run succesful
1 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterHasMiss
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterHasMiss/maxItems=1000-2         	    8140	    147606 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8082	    149289 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    7987	    147260 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8066	    149494 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    7944	    147167 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7894	    151593 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7924	    150397 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7844	    151803 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7890	    150230 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7999	    151538 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7556	    158735 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7570	    161907 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7476	    159386 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7544	    161976 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7050	    161419 ns/op	      58 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5988	    199103 ns/op	     670 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5708	    198534 ns/op	     703 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5863	    196648 ns/op	     684 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5859	    199201 ns/op	     685 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5403	    199009 ns/op	     742 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3884	    308381 ns/op	   10301 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3854	    311436 ns/op	   10381 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3866	    311302 ns/op	   10349 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3888	    287199 ns/op	   10290 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3868	    305726 ns/op	   10343 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	36.509s

Result 1 parsed
Benchmark run succesful
2 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockUnmarshal$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockUnmarshal$]
/lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockUnmarshal timed out after 10s
Benchmark run succesful
3 / 193 done
### Execute Benchmark: /lib/logstorage/stream_id_timing_test.go::BenchmarkStreamIDMarshalString
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStreamIDMarshalString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStreamIDMarshalString-2   	31455559	        37.96 ns/op	  26.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31813186	        37.91 ns/op	  26.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31426652	        38.30 ns/op	  26.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31657557	        37.82 ns/op	  26.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31884802	        37.81 ns/op	  26.45 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.221s

Result 1 parsed
Benchmark run succesful
4 / 193 done
### Execute Benchmark: /lib/logstorage/log_rows_timing_test.go::BenchmarkLogRowsMustAdd
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLogRowsMustAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLogRowsMustAdd-2   	   81960	     13782 ns/op	   0.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   85934	     14495 ns/op	   0.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   87579	     14289 ns/op	   0.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   84853	     14589 ns/op	   0.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   88364	     14604 ns/op	   0.34 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.886s

Result 1 parsed
Benchmark run succesful
5 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150820412	         7.966 ns/op	 125.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150473949	         7.973 ns/op	 125.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150912111	         7.978 ns/op	 125.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150611984	         7.966 ns/op	 125.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150736118	         7.953 ns/op	 125.74 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.056s

Result 1 parsed
Benchmark run succesful
6 / 193 done
### Execute Benchmark: /app/vlinsert/loki/loki_json_timing_test.go::BenchmarkParseJSONRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/loki
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseJSONRequest$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseJSONRequest$]
/app/vlinsert/loki/loki_json_timing_test.go::BenchmarkParseJSONRequest timed out after 10s
Benchmark run succesful
7 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkSanitizeLabelName
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeLabelName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeLabelName/#00-2         	35353177	        31.59 ns/op	  31.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	37193802	        31.64 ns/op	  31.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	37516119	        32.30 ns/op	  30.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	38195589	        31.76 ns/op	  31.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	37964653	        31.56 ns/op	  31.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	33924548	        35.51 ns/op	  28.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	33164190	        35.79 ns/op	  27.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	33145028	        36.06 ns/op	  27.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	33254934	        35.97 ns/op	  27.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	32879049	        36.50 ns/op	  27.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	31915374	        36.08 ns/op	  27.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	32002554	        37.62 ns/op	  26.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	32597670	        37.00 ns/op	  27.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	33279723	        37.72 ns/op	  26.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	33273380	        36.35 ns/op	  27.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	30980342	        39.43 ns/op	  25.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	30863418	        38.68 ns/op	  25.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	30257004	        38.13 ns/op	  26.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	31083751	        38.52 ns/op	  25.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	30525895	        39.41 ns/op	  25.38 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	24.695s

Result 1 parsed
Benchmark run succesful
8 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalInt64Array
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64Array$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64Array-2   	    4454	    259889 ns/op	  31.52 MB/s	      22 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4496	    265202 ns/op	  30.89 MB/s	      20 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4809	    260115 ns/op	  31.49 MB/s	      19 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4430	    263371 ns/op	  31.10 MB/s	      21 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4665	    265881 ns/op	  30.81 MB/s	      30 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.078s

Result 1 parsed
Benchmark run succesful
9 / 193 done
### Execute Benchmark: /lib/stringsutil/stringsutil_timing_test.go::BenchmarkAppendLowercase
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendLowercase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23850322	        49.82 ns/op	 883.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23560198	        49.79 ns/op	 883.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	24257505	        49.82 ns/op	 883.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23944525	        50.00 ns/op	 879.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23291368	        49.90 ns/op	 881.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23499613	        50.72 ns/op	 867.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23711390	        50.65 ns/op	 868.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23555907	        50.64 ns/op	 868.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23525566	        50.63 ns/op	 869.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23571055	        50.45 ns/op	 872.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22868356	        52.69 ns/op	 835.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22920009	        52.63 ns/op	 835.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22708256	        52.74 ns/op	 834.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22866871	        52.79 ns/op	 833.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22722402	        52.83 ns/op	 832.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1089 ns/op	  69.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1087 ns/op	  69.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1089 ns/op	  69.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1086 ns/op	  70.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1087 ns/op	  69.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1047 ns/op	  72.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1050 ns/op	  72.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1049 ns/op	  72.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1051 ns/op	  72.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1057 ns/op	  71.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1383390	       862.0 ns/op	  88.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1397838	       860.0 ns/op	  88.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1382634	       861.0 ns/op	  88.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1392069	       863.7 ns/op	  88.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1391112	       865.0 ns/op	  87.86 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	39.903s

Result 1 parsed
Benchmark run succesful
10 / 193 done
### Execute Benchmark: /lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePrefix
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePrefix$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePrefix$]
/lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePrefix timed out after 10s
Benchmark run succesful
11 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetAddWithAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetAddWithAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetAddWithAllocs/items_1000-2         	  109130	     10523 ns/op	  95.03 MB/s	    8552 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  113272	     10479 ns/op	  95.43 MB/s	    8552 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  110319	     10545 ns/op	  94.83 MB/s	    8551 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  109857	     10492 ns/op	  95.31 MB/s	    8549 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  115408	     10539 ns/op	  94.89 MB/s	    8550 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15692	     76131 ns/op	 131.35 MB/s	    9829 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15668	     76103 ns/op	 131.40 MB/s	    9835 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15830	     75904 ns/op	 131.75 MB/s	    9844 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   10000	    179144 ns/op	  55.82 MB/s	    9782 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	    6668	    173893 ns/op	  57.51 MB/s	    9697 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	     693	   1578913 ns/op	  63.33 MB/s	   21191 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	     806	   1553242 ns/op	  64.38 MB/s	   21224 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	     812	   1562846 ns/op	  63.99 MB/s	   21150 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	     784	   1587292 ns/op	  63.00 MB/s	   21317 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	     777	   1613460 ns/op	  61.98 MB/s	   21014 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	      75	  16651310 ns/op	  60.06 MB/s	  134675 B/op	      41 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	      70	  15434181 ns/op	  64.79 MB/s	  135991 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	      78	  16031092 ns/op	  62.38 MB/s	  136181 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	      81	  15108963 ns/op	  66.19 MB/s	  135549 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     100	  14788475 ns/op	  67.62 MB/s	  135941 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      10	 154059472 ns/op	  64.91 MB/s	 1283558 B/op	     325 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	       8	 157936344 ns/op	  63.32 MB/s	 1284814 B/op	     325 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	       9	 160280880 ns/op	  62.39 MB/s	 1282271 B/op	     324 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	       9	 165385578 ns/op	  60.46 MB/s	 1283243 B/op	     325 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73184064 ns/op	 136.64 MB/s	 1284665 B/op	     325 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.564s

Result 1 parsed
Benchmark run succesful
12 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsTwoSourcesBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsTwoSourcesBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  158328	      7645 ns/op	2143.19 MB/s	    1413 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  158950	      7735 ns/op	2118.24 MB/s	    1413 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  158788	      7461 ns/op	2196.09 MB/s	    1413 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  160443	      7614 ns/op	2151.74 MB/s	    1413 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  163903	      7625 ns/op	2148.62 MB/s	    1413 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.877s

Result 1 parsed
Benchmark run succesful
13 / 193 done
### Execute Benchmark: /lib/protoparser/csvimport/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/csvimport
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/csvimport
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 1290432	       933.0 ns/op	 187.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1290368	       931.0 ns/op	 187.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1290937	       930.7 ns/op	 188.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1279212	       933.0 ns/op	 187.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1280911	       933.4 ns/op	 187.48 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/csvimport	10.726s

Result 1 parsed
Benchmark run succesful
14 / 193 done
### Execute Benchmark: /lib/promutils/labels_timing_test.go::BenchmarkLabelsInternStrings
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsInternStrings$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsInternStrings-2   	13598476	        86.53 ns/op	  11.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13865890	        86.89 ns/op	  11.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13792904	        86.92 ns/op	  11.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13842180	        86.65 ns/op	  11.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13730215	        87.04 ns/op	  11.49 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	6.441s

Result 1 parsed
Benchmark run succesful
15 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheComplex
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheComplex$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheComplex-2   	 1482366	       804.8 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1487449	       803.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1493839	       809.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1489724	       802.8 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1498760	       802.0 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	10.098s

Result 1 parsed
Benchmark run succesful
16 / 193 done
### Execute Benchmark: /lib/protoparser/graphite/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/graphite
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/graphite
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2491491	       475.6 ns/op	 281.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2543522	       468.1 ns/op	 286.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2568387	       468.1 ns/op	 286.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2552151	       468.3 ns/op	 286.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2567601	       467.5 ns/op	 286.64 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/graphite	8.373s

Result 1 parsed
Benchmark run succesful
17 / 193 done
### Execute Benchmark: /lib/storage/inmemory_part_timing_test.go::BenchmarkInmemoryPartInitFromRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPartInitFromRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1158	   1032456 ns/op	  96.86 MB/s	      34 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1158	   1002680 ns/op	  99.73 MB/s	     147 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1184	   1002142 ns/op	  99.79 MB/s	     145 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1214	    988513 ns/op	 101.16 MB/s	     142 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1096	   1012376 ns/op	  98.78 MB/s	      33 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.714s

Result 1 parsed
Benchmark run succesful
18 / 193 done
### Execute Benchmark: /lib/promscrape/config_timing_test.go::BenchmarkGetScrapeWork
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGetScrapeWork$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGetScrapeWork-2   	  325920	      3925 ns/op	   0.25 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  299778	      3965 ns/op	   0.25 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  295124	      4213 ns/op	   0.24 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  252222	      4192 ns/op	   0.24 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  285302	      4403 ns/op	   0.23 MB/s	     864 B/op	       6 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.262s

Result 1 parsed
Benchmark run succesful
19 / 193 done
### Execute Benchmark: /lib/storage/table_timing_test.go::BenchmarkTableAddRows
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableAddRows$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableAddRows$]
/lib/storage/table_timing_test.go::BenchmarkTableAddRows timed out after 10s
Benchmark run succesful
20 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarUint64/small-ints-2         	53641274	        22.44 ns/op	 311.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53291131	        22.45 ns/op	 311.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53677042	        22.42 ns/op	 312.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	48294837	        22.33 ns/op	 313.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	52649112	        22.38 ns/op	 312.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19675592	        60.84 ns/op	 115.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19335772	        60.98 ns/op	 114.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19664386	        61.03 ns/op	 114.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19653729	        61.05 ns/op	 114.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19527470	        61.20 ns/op	 114.39 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	12.296s

Result 1 parsed
Benchmark run succesful
21 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectNoOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectNoOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectNoOverlap/items_1000-2         	  161246	      7657 ns/op	 261.19 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  147531	      7898 ns/op	 253.24 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  151466	      8367 ns/op	 239.03 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  138823	      8242 ns/op	 242.65 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  150598	      8517 ns/op	 234.82 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  141844	      8394 ns/op	2382.54 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  142182	      8789 ns/op	2275.55 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  134520	      8773 ns/op	2279.85 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  147438	      8638 ns/op	2315.33 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  141973	      8643 ns/op	2314.14 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   68526	     18021 ns/op	11098.18 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   65289	     18436 ns/op	10848.20 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   69376	     18421 ns/op	10857.34 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   68515	     18369 ns/op	10887.81 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   60703	     18503 ns/op	10808.98 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    114193 ns/op	17514.25 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	    9259	    111902 ns/op	17872.81 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10800	    114061 ns/op	17534.49 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    113311 ns/op	17650.56 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    112087 ns/op	17843.28 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1116	   1072094 ns/op	18655.09 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1148	   1054578 ns/op	18964.93 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1131	   1080148 ns/op	18515.97 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1080	   1088153 ns/op	18379.78 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1136	   1114802 ns/op	17940.41 MB/s	 2557824 B/op	     622 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	33.556s

Result 1 parsed
Benchmark run succesful
22 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	186651988	         6.452 ns/op	 154.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	186440043	         6.466 ns/op	 154.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	184748043	         6.442 ns/op	 155.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	185880427	         6.461 ns/op	 154.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	185712283	         6.443 ns/op	 155.21 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.283s

Result 1 parsed
Benchmark run succesful
23 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta_timing_test.go::BenchmarkMarshalInt64NearestDelta
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64NearestDelta$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18412	     65048 ns/op	 125.94 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18480	     64905 ns/op	 126.22 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18448	     65110 ns/op	 125.82 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18433	     65101 ns/op	 125.83 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18451	     65056 ns/op	 125.92 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42877	     27939 ns/op	 293.21 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42997	     27941 ns/op	 293.19 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42806	     27988 ns/op	 292.70 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42834	     28111 ns/op	 291.41 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42830	     28443 ns/op	 288.02 MB/s	       5 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	16.752s

Result 1 parsed
Benchmark run succesful
24 / 193 done
### Execute Benchmark: /lib/promrelabel/graphite_timing_test.go::BenchmarkGraphiteMatchTemplateMatch
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGraphiteMatchTemplateMatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	39749254	        29.77 ns/op	  33.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40522941	        29.77 ns/op	  33.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40489006	        29.77 ns/op	  33.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40411486	        29.78 ns/op	  33.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40410156	        29.87 ns/op	  33.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	187228242	         6.435 ns/op	 155.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	187228412	         6.424 ns/op	 155.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	186150290	         6.413 ns/op	 155.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	186417890	         6.424 ns/op	 155.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	186680919	         6.422 ns/op	 155.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15888224	        75.79 ns/op	  13.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15800242	        75.85 ns/op	  13.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15770887	        75.84 ns/op	  13.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15731559	        75.68 ns/op	  13.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15650376	        75.73 ns/op	  13.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        10.94 ns/op	  91.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        10.94 ns/op	  91.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        10.99 ns/op	  90.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        10.99 ns/op	  90.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.00 ns/op	  90.91 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	27.362s

Result 1 parsed
Benchmark run succesful
25 / 193 done
### Execute Benchmark: /lib/logstorage/hash_tokenizer_timing_test.go::BenchmarkTokenizeHashes
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTokenizeHashes$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTokenizeHashes-2   	   73935	     16157 ns/op	 207.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   75632	     15817 ns/op	 211.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   75159	     15960 ns/op	 209.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   74648	     15905 ns/op	 210.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   75543	     15943 ns/op	 210.00 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.822s

Result 1 parsed
Benchmark run succesful
26 / 193 done
### Execute Benchmark: /lib/promrelabel/if_expression_timing_test.go::BenchmarkIfExpression
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIfExpression$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIfExpression/equal_label:_last-2         	 2587614	       460.1 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2594122	       461.5 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2599402	       460.3 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2602753	       460.8 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2600734	       458.4 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 4986740	       239.7 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5018728	       239.3 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5027155	       240.2 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 4942860	       237.0 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5009527	       238.3 ns/op
BenchmarkIfExpression/equal_label:_first-2        	65372469	        18.16 ns/op
BenchmarkIfExpression/equal_label:_first-2        	65874394	        18.23 ns/op
BenchmarkIfExpression/equal_label:_first-2        	65505007	        18.30 ns/op
BenchmarkIfExpression/equal_label:_first-2        	64507274	        18.33 ns/op
BenchmarkIfExpression/equal_label:_first-2        	63954457	        18.22 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9200880	       129.9 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9251443	       130.0 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9277903	       129.7 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9226659	       129.7 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9221232	       130.1 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16128763	        74.57 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16143064	        74.41 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16219200	        74.13 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16180492	        74.21 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	15892606	        74.12 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	79094317	        15.21 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	78063016	        15.17 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	78612339	        15.19 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	75260282	        15.22 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	76185972	        15.24 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	40.592s

Result 1 parsed
Benchmark run succesful
27 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkCommonPrefixLen
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCommonPrefixLen$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCommonPrefixLen$]
/lib/mergeset/encoding_timing_test.go::BenchmarkCommonPrefixLen timed out after 10s
Benchmark run succesful
28 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta_timing_test.go::BenchmarkUnmarshalInt64NearestDelta
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64NearestDelta$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64NearestDelta-2   	   61321	     19565 ns/op	 418.70 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61249	     19565 ns/op	 418.71 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61275	     19625 ns/op	 417.44 MB/s	       9 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61396	     19587 ns/op	 418.24 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61466	     19984 ns/op	 409.94 MB/s	       8 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.048s

Result 1 parsed
Benchmark run succesful
29 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheSimple
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheSimple$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheSimple-2   	 2240515	       532.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2249154	       529.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2269812	       531.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2272698	       532.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2261936	       530.5 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.720s

Result 1 parsed
Benchmark run succesful
30 / 193 done
### Execute Benchmark: /lib/promutils/labelscompressor_timing_test.go::BenchmarkLabelsCompressorCompress
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsCompressorCompress$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsCompressorCompress-2   	   13837	     85721 ns/op	   1.17 MB/s	      33 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13960	     86172 ns/op	   1.16 MB/s	      33 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   14038	     85202 ns/op	   1.17 MB/s	      32 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13982	     85746 ns/op	   1.17 MB/s	      33 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   14053	     86501 ns/op	   1.16 MB/s	      32 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	10.352s

Result 1 parsed
Benchmark run succesful
31 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheSimpleParallel
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheSimpleParallel$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2980857	       399.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2994856	       400.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2995266	       399.4 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 3002138	       402.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2974038	       400.2 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.053s

Result 1 parsed
Benchmark run succesful
32 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20867743	        57.70 ns/op	  17.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20888685	        57.68 ns/op	  17.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20891773	        57.77 ns/op	  17.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20828653	        57.68 ns/op	  17.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20665732	        57.68 ns/op	  17.34 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.330s

Result 1 parsed
Benchmark run succesful
33 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsFourSourcesWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsFourSourcesWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     345	   3350098 ns/op	   4.89 MB/s	    9184 B/op	      64 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     358	   3290400 ns/op	   4.98 MB/s	    8113 B/op	      62 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     350	   3311541 ns/op	   4.95 MB/s	    8064 B/op	      63 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     345	   3301981 ns/op	   4.96 MB/s	    8314 B/op	      64 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     361	   3261646 ns/op	   5.02 MB/s	    8072 B/op	      62 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	7.904s

Result 1 parsed
Benchmark run succesful
34 / 193 done
### Execute Benchmark: /lib/fasttime/fasttime_timing_test.go::BenchmarkUnixTimestamp
Changing directory to dir1: /home/benchUser/other/lib/fasttime
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnixTimestamp$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnixTimestamp-2   	849048158	         1.411 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	852390892	         1.412 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	847419540	         1.419 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	844580173	         1.414 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	844732041	         1.414 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime	6.724s

Result 1 parsed
Benchmark run succesful
35 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkAppendDecimalToFloat
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendDecimalToFloat$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48306	     24774 ns/op	 330.66 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48312	     24844 ns/op	 329.74 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48379	     24808 ns/op	 330.22 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48188	     24859 ns/op	 329.54 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48357	     25007 ns/op	 327.59 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64060	     18695 ns/op	 438.19 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   63806	     18693 ns/op	 438.25 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64381	     18696 ns/op	 438.16 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64108	     18677 ns/op	 438.60 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64153	     18700 ns/op	 438.07 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  504140	      2420 ns/op	3384.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  485691	      2437 ns/op	3360.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  499390	      2436 ns/op	3363.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  505051	      2407 ns/op	3402.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  481077	      2425 ns/op	3378.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  366789	      3182 ns/op	2574.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  374844	      3188 ns/op	2569.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  372370	      3210 ns/op	2551.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  375604	      3225 ns/op	2540.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  365812	      3228 ns/op	2537.43 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	26.472s

Result 1 parsed
Benchmark run succesful
36 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetAddRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetAddRandomLastBits$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     506	   2214173 ns/op	  45.16 MB/s	   40638 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     525	   2250236 ns/op	  44.44 MB/s	   39408 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     534	   2303668 ns/op	  43.41 MB/s	   40459 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     540	   2267277 ns/op	  44.11 MB/s	   38167 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     524	   2266347 ns/op	  44.12 MB/s	   39797 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     360	   3498318 ns/op	  28.59 MB/s	  238134 B/op	      69 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     358	   3381015 ns/op	  29.58 MB/s	  227786 B/op	      65 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     343	   3342157 ns/op	  29.92 MB/s	  206416 B/op	      60 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     367	   3452781 ns/op	  28.96 MB/s	  238079 B/op	      69 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     364	   3331903 ns/op	  30.01 MB/s	  200293 B/op	      60 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     226	   4862723 ns/op	  20.56 MB/s	  789275 B/op	     225 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     246	   4936529 ns/op	  20.26 MB/s	  829084 B/op	     242 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     246	   4996895 ns/op	  20.01 MB/s	  891376 B/op	     247 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     248	   4811853 ns/op	  20.78 MB/s	  721414 B/op	     222 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     232	   4873859 ns/op	  20.52 MB/s	  775261 B/op	     226 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     172	   6790308 ns/op	  14.73 MB/s	 1673913 B/op	     767 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     142	   7489616 ns/op	  13.35 MB/s	 2221082 B/op	     809 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     160	   6347286 ns/op	  15.75 MB/s	 1650571 B/op	     507 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     138	   8194886 ns/op	  12.20 MB/s	 2502269 B/op	    1022 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     159	   6603638 ns/op	  15.14 MB/s	 1515988 B/op	     542 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	32.649s

Result 1 parsed
Benchmark run succesful
37 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkIsAutoMetricHit
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIsAutoMetricHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIsAutoMetricHit-2   	38002376	        31.32 ns/op	  31.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	38423095	        31.27 ns/op	  31.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	38492534	        31.29 ns/op	  31.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	38411234	        31.35 ns/op	  31.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	38487567	        31.28 ns/op	  31.97 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.189s

Result 1 parsed
Benchmark run succesful
38 / 193 done
### Execute Benchmark: /lib/prompbmarshal/prompbmarshal_timing_test.go::BenchmarkWriteRequestMarshalProtobuf
Changing directory to dir1: /home/benchUser/other/lib/prompbmarshal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkWriteRequestMarshalProtobuf$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/prompbmarshal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkWriteRequestMarshalProtobuf-2   	    4610	    260642 ns/op	   3.84 MB/s	     106 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4483	    261625 ns/op	   3.82 MB/s	     109 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4503	    261438 ns/op	   3.82 MB/s	     109 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4488	    261905 ns/op	   3.82 MB/s	     109 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4621	    260468 ns/op	   3.84 MB/s	     106 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/prompbmarshal	6.092s

Result 1 parsed
Benchmark run succesful
39 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkIndexDBGetTSIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIndexDBGetTSIDs$]
Benchmark 1 done: 2025-02-08T10:47:37.463Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIndexDBGetTSIDs-2   	    3760	    310555 ns/op	   3.22 MB/s	     171 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3766	    311241 ns/op	   3.21 MB/s	     184 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3721	    315569 ns/op	   3.17 MB/s	     172 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3789	    312471 ns/op	   3.20 MB/s	     183 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3705	    313008 ns/op	   3.19 MB/s	     187 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	20.962s

Result 1 parsed
Benchmark run succesful
40 / 193 done
### Execute Benchmark: /lib/logstorage/tokenizer_timing_test.go::BenchmarkTokenizeStrings
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTokenizeStrings$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTokenizeStrings-2   	   40914	     29306 ns/op	 114.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40873	     29203 ns/op	 114.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40729	     29460 ns/op	 113.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40994	     29396 ns/op	 113.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40904	     29312 ns/op	 114.22 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	7.505s

Result 1 parsed
Benchmark run succesful
41 / 193 done
### Execute Benchmark: /lib/persistentqueue/fastqueue_timing_test.go::BenchmarkFastQueueThroughputSerial
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastQueueThroughputSerial$]
Benchmark 1 done: 2025-02-08T10:48:08.212Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T10:48:08.216Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:08.219Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T10:48:08.230Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:08.233Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:08.244Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:08.256Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:08.269Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:08.710Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:08.722Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:09.887Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  629830	      1868 ns/op	   5.35 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T10:48:09.899Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:09.903Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:09.916Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:09.919Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:09.931Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:09.946Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:09.957Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:10.460Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:10.472Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:11.639Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  638281	      1847 ns/op	   5.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T10:48:11.651Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:11.654Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:11.667Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:11.671Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:11.683Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:11.699Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:11.710Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:12.215Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:12.227Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:13.393Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  638319	      1845 ns/op	   5.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T10:48:13.404Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:13.407Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:13.418Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:13.421Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:13.432Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:13.449Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:13.462Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:14.077Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:14.088Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:15.255Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  640044	      1840 ns/op	   5.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T10:48:15.268Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:15.271Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:15.282Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:15.286Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:15.298Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:15.315Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:15.328Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:15.846Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T10:48:15.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:17.027Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  634736	      1860 ns/op	   5.38 MB/s	       1 B/op	       0 allocs/op
2025-02-08T10:48:17.040Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:17.043Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T10:48:17.055Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:17.058Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:17.071Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:17.086Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:17.097Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:17.613Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:17.624Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:18.792Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  634885	      1857 ns/op	  53.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T10:48:18.804Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:18.807Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:18.819Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:18.822Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:18.834Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:18.850Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:18.861Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:19.409Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:19.421Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:20.600Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  637533	      1868 ns/op	  53.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T10:48:20.612Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:20.615Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:20.627Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:20.630Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:20.642Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:20.659Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:20.671Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:21.222Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:21.233Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:22.399Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  630256	      1867 ns/op	  53.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T10:48:22.411Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:22.414Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:22.426Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:22.430Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:22.442Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:22.457Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:22.469Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:23.000Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:23.013Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:24.184Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  634209	      1866 ns/op	  53.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T10:48:24.197Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:24.200Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:24.213Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:24.216Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:24.230Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:24.245Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:24.259Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:24.736Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T10:48:24.751Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:25.900Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  621818	      1871 ns/op	  53.44 MB/s	       0 B/op	       0 allocs/op
2025-02-08T10:48:25.912Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:25.915Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T10:48:25.926Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:25.930Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:25.941Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:25.959Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:25.972Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:26.510Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:26.522Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:27.709Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  613153	      1954 ns/op	 511.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T10:48:27.723Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:27.726Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:27.737Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:27.740Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:27.752Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:27.768Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:27.779Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:28.319Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:28.330Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:29.498Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  609597	      1933 ns/op	 517.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T10:48:29.513Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:29.516Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:29.529Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:29.532Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:29.543Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:29.557Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:29.571Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:30.049Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:30.061Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:31.218Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  605630	      1929 ns/op	 518.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T10:48:31.230Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:31.233Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:31.245Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:31.248Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:31.258Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:31.275Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:31.286Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:31.892Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:31.904Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:33.091Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  615038	      1950 ns/op	 512.93 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T10:48:33.106Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:33.110Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:33.127Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:33.132Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:33.149Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:33.161Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:33.178Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:33.475Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T10:48:33.488Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:34.617Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  586395	      1946 ns/op	 513.93 MB/s	       0 B/op	       0 allocs/op
2025-02-08T10:48:34.629Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:34.632Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T10:48:34.643Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:34.646Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:34.657Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:34.676Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:34.688Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:35.326Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:35.340Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:36.527Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  537723	      2231 ns/op	4482.05 MB/s	       2 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T10:48:36.537Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:36.540Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:36.553Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:36.556Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:36.568Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:36.588Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:36.599Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:37.221Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:37.233Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:38.416Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  535603	      2229 ns/op	4485.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T10:48:38.428Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:38.431Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:38.442Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:38.445Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:38.457Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:38.476Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:38.491Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:39.106Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:39.117Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:40.289Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  531373	      2226 ns/op	4493.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T10:48:40.301Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:40.304Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:40.316Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:40.319Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:40.331Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:40.349Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:40.360Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:40.962Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:40.974Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:42.152Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  536754	      2216 ns/op	4511.63 MB/s	       2 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T10:48:42.165Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:42.169Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:42.181Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:42.184Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:42.196Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:42.213Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:42.224Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:42.778Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T10:48:42.788Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:43.948Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  532423	      2197 ns/op	4550.75 MB/s	       0 B/op	       0 allocs/op
2025-02-08T10:48:43.958Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:43.961Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T10:48:43.972Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:43.975Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:43.986Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:44.042Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:44.052Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:44.998Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:45.009Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:46.210Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  192604	      6294 ns/op	15888.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T10:48:46.224Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:46.228Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:46.245Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:46.249Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:46.260Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:46.302Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:46.313Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:47.189Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:47.203Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:48.394Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  190659	      6320 ns/op	15823.47 MB/s	       5 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T10:48:48.407Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:48.411Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:48.424Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:48.428Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:48.440Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:48.479Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:48.496Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:49.316Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:49.327Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:50.491Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  188016	      6249 ns/op	16001.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T10:48:50.504Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:50.507Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:50.519Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:50.523Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:50.534Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:50.577Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:50.588Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:51.470Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:51.481Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:52.653Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  187542	      6305 ns/op	15859.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T10:48:52.667Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:52.670Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:52.682Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:52.686Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:52.697Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:52.737Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:52.749Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:53.601Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T10:48:53.614Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:54.795Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  189972	      6282 ns/op	15918.97 MB/s	       5 B/op	       0 allocs/op
2025-02-08T10:48:54.806Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:54.810Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T10:48:54.822Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:54.833Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:54.844Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:55.187Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:55.197Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:56.342Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14960	     77167 ns/op	12958.99 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T10:48:56.354Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:56.357Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:56.368Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:56.378Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:56.389Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:56.744Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:56.754Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:57.911Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   15152	     77032 ns/op	12981.61 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T10:48:57.923Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:57.926Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:57.937Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:57.947Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:57.959Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:58.332Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:58.344Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:59.464Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14768	     76585 ns/op	13057.40 MB/s	      80 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T10:48:59.475Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:59.478Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:59.490Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:59.501Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:59.511Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:48:59.863Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:48:59.875Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:01.032Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   15306	     76363 ns/op	13095.31 MB/s	      69 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T10:49:01.044Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:01.047Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:49:01.058Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:01.068Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:49:01.081Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:01.442Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T10:49:01.453Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:02.599Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   15127	     76488 ns/op	13073.89 MB/s	       1 B/op	       0 allocs/op
2025-02-08T10:49:02.610Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:02.620Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T10:49:02.630Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:02.763Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:02.773Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:03.802Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     504	   2060258 ns/op	4853.76 MB/s	    6108 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T10:49:03.814Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:03.820Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:03.834Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:03.986Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:03.997Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:05.001Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     480	   2113423 ns/op	4731.66 MB/s	    4230 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T10:49:05.012Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:05.018Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:05.029Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:05.183Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:05.194Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:06.301Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     511	   2185665 ns/op	4575.27 MB/s	    2001 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T10:49:06.311Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:06.318Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:06.329Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:06.484Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:06.496Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:07.542Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     507	   2084884 ns/op	4796.43 MB/s	    4103 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T10:49:07.554Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:07.560Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:07.573Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:07.709Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T10:49:07.721Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T10:49:08.771Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     532	   1994080 ns/op	5014.84 MB/s	    3832 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	60.591s

Result 1 parsed
Benchmark run succesful
42 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsFourSourcesBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsFourSourcesBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   92528	     11676 ns/op	2806.55 MB/s	    2826 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	  104386	     11764 ns/op	2785.49 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	  102914	     11808 ns/op	2775.18 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	  105026	     11792 ns/op	2778.79 MB/s	    2824 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   99462	     11652 ns/op	2812.31 MB/s	    2825 B/op	      28 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.931s

Result 1 parsed
Benchmark run succesful
43 / 193 done
### Execute Benchmark: /lib/protoparser/datadogv2/parser_timing_test.go::BenchmarkRequestUnmarshalJSON
Changing directory to dir1: /home/benchUser/other/lib/protoparser/datadogv2
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRequestUnmarshalJSON$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv2
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRequestUnmarshalJSON-2   	  194977	      6083 ns/op	  54.08 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  189849	      6115 ns/op	  53.81 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  194432	      6153 ns/op	  53.47 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  190992	      6131 ns/op	  53.66 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  189661	      6128 ns/op	  53.69 MB/s	     480 B/op	      13 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv2	6.221s

Result 1 parsed
Benchmark run succesful
44 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarInt64/small-ints-2         	44889237	        26.54 ns/op	 263.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	44977252	        26.38 ns/op	 265.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	44718422	        26.48 ns/op	 264.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	45346270	        26.43 ns/op	 264.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	43202491	        26.53 ns/op	 263.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18108582	        66.02 ns/op	 106.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18040395	        65.98 ns/op	 106.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18305563	        66.26 ns/op	 105.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18106203	        65.87 ns/op	 106.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18047088	        65.96 ns/op	 106.12 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	12.394s

Result 1 parsed
Benchmark run succesful
45 / 193 done
### Execute Benchmark: /lib/protoparser/vmimport/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/vmimport
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/vmimport
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  343137	      3512 ns/op	 173.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  339288	      3516 ns/op	 173.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  343650	      3528 ns/op	 172.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  338502	      3513 ns/op	 173.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  340340	      3507 ns/op	 173.65 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/vmimport	7.177s

Result 1 parsed
Benchmark run succesful
46 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterHasHit
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterHasHit/maxItems=1000-2         	    2199	    530304 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2181	    527871 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2202	    527552 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2188	    530124 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2192	    532504 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2182	    534693 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2156	    533537 ns/op	      19 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2160	    535942 ns/op	      19 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2170	    537426 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2179	    531854 ns/op	      19 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2046	    559736 ns/op	     200 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2091	    564149 ns/op	     195 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2076	    562766 ns/op	     197 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2060	    569196 ns/op	     198 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2112	    560268 ns/op	     194 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1047	   1029837 ns/op	    3834 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1252	    984582 ns/op	    3206 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1178	   1036736 ns/op	    3407 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1051	    962695 ns/op	    3819 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1245	   1005875 ns/op	    3224 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     471	   2499055 ns/op	   84946 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     454	   2496252 ns/op	   88127 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     446	   2540943 ns/op	   89708 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     478	   2484893 ns/op	   83702 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     454	   2507218 ns/op	   88127 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	34.281s

Result 1 parsed
Benchmark run succesful
47 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkMarshalUnmarshalMetricIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUnmarshalMetricIDs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	32257682	        33.91 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	32877070	        33.70 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	33152731	        33.77 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	34381923	        33.79 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	34444653	        33.78 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	 1000000	      1144 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	  993475	      1151 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	  969259	      1155 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	  974438	      1150 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	 1000000	      1146 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  397077	      2641 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  389912	      2652 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  459106	      3089 ns/op	         1.404 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  429603	      2656 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  445069	      2663 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	  139471	     12788 ns/op	         5.755 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	   79773	     13941 ns/op	         4.082 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	   84400	     16692 ns/op	         3.902 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	  130677	     13772 ns/op	         4.372 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	  135000	     16773 ns/op	         4.020 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   16113	     74477 ns/op	         8.520 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   15786	     73904 ns/op	         8.602 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   15474	     73179 ns/op	         8.611 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   16074	     75277 ns/op	         8.484 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   15632	     74297 ns/op	         8.511 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    1975	    566266 ns/op	         9.398 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    1980	    560989 ns/op	         9.405 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2044	    564071 ns/op	         9.393 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2133	    564277 ns/op	         9.396 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2096	    563100 ns/op	         9.411 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     211	   5707026 ns/op	         6.113 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     211	   5541787 ns/op	         9.461 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     211	   5534036 ns/op	         9.459 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     211	   5529064 ns/op	         9.474 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     208	   5681689 ns/op	         6.149 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      22	  54721887 ns/op	         9.467 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      22	  56379358 ns/op	         6.064 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      21	  55702507 ns/op	         9.468 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      22	  55689412 ns/op	         9.465 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      21	  57325997 ns/op	         9.465 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 539431910 ns/op	         7.346 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 533757705 ns/op	         8.581 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 540133280 ns/op	         6.237 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 534647470 ns/op	         6.859 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 528165566 ns/op	         9.473 compression-rate
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	69.492s

Result 1 parsed
Benchmark run succesful
48 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkFromFloat
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFromFloat$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFromFloat/0-2 	395949201	         3.036 ns/op	 329.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	395600022	         3.029 ns/op	 330.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	394205052	         3.028 ns/op	 330.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	396036489	         3.030 ns/op	 330.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	397198890	         3.031 ns/op	 329.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	149915480	         7.954 ns/op	 125.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151073598	         7.918 ns/op	 126.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151721448	         7.910 ns/op	 126.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151658110	         7.909 ns/op	 126.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151659037	         7.928 ns/op	 126.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151306068	         7.946 ns/op	 125.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	150712971	         7.933 ns/op	 126.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	150935192	         7.923 ns/op	 126.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151009743	         7.934 ns/op	 126.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151533343	         7.948 ns/op	 125.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43208762	        27.63 ns/op	  36.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43585238	        27.64 ns/op	  36.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	42816730	        27.67 ns/op	  36.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43202566	        27.61 ns/op	  36.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43474767	        27.62 ns/op	  36.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	76476400	        15.50 ns/op	  64.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	77075720	        15.56 ns/op	  64.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	75772998	        15.57 ns/op	  64.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	75925734	        15.52 ns/op	  64.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	76231180	        15.58 ns/op	  64.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24545559	        48.86 ns/op	  20.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24428634	        48.88 ns/op	  20.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24661539	        48.90 ns/op	  20.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24681993	        48.92 ns/op	  20.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24062132	        48.77 ns/op	  20.50 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	45.957s

Result 1 parsed
Benchmark run succesful
49 / 193 done
### Execute Benchmark: /lib/tenantmetrics/counter_map_timing_test.go::BenchmarkCounterMapGrowth
Changing directory to dir1: /home/benchUser/other/lib/tenantmetrics
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCounterMapGrowth$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/tenantmetrics
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    5812	    179030 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6645	    179280 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    5662	    179117 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6024	    181435 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6732	    179234 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6043	    175180 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    5803	    178039 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6339	    178835 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6259	    181938 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6650	    182464 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     588	   2017277 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     590	   1971625 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     600	   1997772 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     619	   1949801 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     604	   1998530 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      44	  26312024 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      48	  26911868 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      44	  26464021 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      44	  26340227 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      43	  26238235 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/tenantmetrics	26.859s

Result 1 parsed
Benchmark run succesful
50 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalConstArray-2   	  190144	      6184 ns/op	1324.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  192885	      6185 ns/op	1324.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  193718	      6194 ns/op	1322.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  192970	      6209 ns/op	1319.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  192397	      6201 ns/op	1321.18 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.294s

Result 1 parsed
Benchmark run succesful
51 / 193 done
### Execute Benchmark: /lib/streamaggr/deduplicator_timing_test.go::BenchmarkDeduplicatorPush
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicatorPush$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicatorPush-2   	      64	  18086434 ns/op	   0.55 MB/s	   16738 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      56	  18152784 ns/op	   0.55 MB/s	   88876 B/op	      44 allocs/op
BenchmarkDeduplicatorPush-2   	      66	  18140737 ns/op	   0.55 MB/s	   16220 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      66	  18137294 ns/op	   0.55 MB/s	   16219 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      56	  18074291 ns/op	   0.55 MB/s	  114247 B/op	      45 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr	8.327s

Result 1 parsed
Benchmark run succesful
52 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectPartialOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectPartialOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectPartialOverlap/items_1000-2         	  161755	      7742 ns/op	 258.32 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  143038	      8397 ns/op	 238.19 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  151166	      8494 ns/op	 235.46 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  151131	      8269 ns/op	 241.87 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  130506	      8412 ns/op	 237.76 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	   76672	     16447 ns/op	1216.00 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	   75980	     15841 ns/op	1262.59 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	   75334	     17152 ns/op	1166.02 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	   71886	     16547 ns/op	1208.70 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	   71571	     16089 ns/op	1243.12 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   52724	     22718 ns/op	8803.58 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   52690	     23192 ns/op	8623.78 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   52687	     23212 ns/op	8616.21 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   49687	     23356 ns/op	8563.29 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   50178	     23871 ns/op	8378.36 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    7596	    140785 ns/op	14206.08 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    8364	    134988 ns/op	14816.14 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    8611	    134746 ns/op	14842.76 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    8667	    136047 ns/op	14700.84 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    7581	    139801 ns/op	14306.01 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     858	   1443631 ns/op	13853.96 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     834	   1420951 ns/op	14075.08 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     861	   1384625 ns/op	14444.35 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     810	   1373724 ns/op	14558.96 MB/s	 2566145 B/op	     624 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     853	   1408290 ns/op	14201.62 MB/s	 2566145 B/op	     624 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.111s

Result 1 parsed
Benchmark run succesful
53 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMatchOptimized-2   	209689315	         5.680 ns/op	 176.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	210411471	         5.695 ns/op	 175.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	210543399	         5.689 ns/op	 175.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	211716008	         5.684 ns/op	 175.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	211213414	         5.697 ns/op	 175.54 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	8.894s

Result 1 parsed
Benchmark run succesful
54 / 193 done
### Execute Benchmark: /lib/stringsutil/less_natural_timing_test.go::BenchmarkLessNatural
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLessNatural$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLessNatural/distinct_string_prefixes-2         	15214752	        78.43 ns/op	 165.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15294728	        78.57 ns/op	 165.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15255573	        78.45 ns/op	 165.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15308578	        78.49 ns/op	 165.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15046011	        78.69 ns/op	 165.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7604748	       157.4 ns/op	  82.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7562619	       156.8 ns/op	  82.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7591212	       157.8 ns/op	  82.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7638889	       157.5 ns/op	  82.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7642708	       157.8 ns/op	  82.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9655327	       123.4 ns/op	 105.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9771756	       122.8 ns/op	 105.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9664036	       123.1 ns/op	 105.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9765169	       122.8 ns/op	 105.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9788460	       122.7 ns/op	 105.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5971273	       202.9 ns/op	  64.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5922798	       202.3 ns/op	  64.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5894444	       202.5 ns/op	  64.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5898336	       203.4 ns/op	  63.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5890759	       202.5 ns/op	  64.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7308703	       164.1 ns/op	  79.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7331980	       164.3 ns/op	  79.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7310810	       164.4 ns/op	  79.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7290426	       164.5 ns/op	  79.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7259738	       164.6 ns/op	  78.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5061072	       236.5 ns/op	  54.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5043559	       236.0 ns/op	  55.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5091829	       236.0 ns/op	  55.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5058116	       235.0 ns/op	  55.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5099979	       235.7 ns/op	  55.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4071613	       294.4 ns/op	  44.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4046733	       295.1 ns/op	  44.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4081443	       294.3 ns/op	  44.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4064085	       294.0 ns/op	  44.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4055884	       294.3 ns/op	  44.18 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	48.343s

Result 1 parsed
Benchmark run succesful
55 / 193 done
### Execute Benchmark: /lib/bytesutil/bytesutil_timing_test.go::BenchmarkToUnsafeString
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkToUnsafeString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkToUnsafeString-2   	  928512	      1233 ns/op	 811.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  976620	      1233 ns/op	 811.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  973705	      1234 ns/op	 810.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  965047	      1233 ns/op	 810.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  972679	      1234 ns/op	 810.19 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	6.022s

Result 1 parsed
Benchmark run succesful
56 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarUint64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarUint64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  198123	      6059 ns/op	1320.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  198261	      6044 ns/op	1323.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  197586	      6046 ns/op	1323.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  199291	      6046 ns/op	1323.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  198552	      6033 ns/op	1326.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79194	     15196 ns/op	 526.46 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   78846	     15180 ns/op	 527.01 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79314	     15173 ns/op	 527.24 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79532	     15125 ns/op	 528.93 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79653	     15134 ns/op	 528.61 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49513	     24304 ns/op	 329.16 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49364	     24304 ns/op	 329.17 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49333	     24406 ns/op	 327.78 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49039	     24329 ns/op	 328.83 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49474	     24309 ns/op	 329.09 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30254	     39553 ns/op	 202.26 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30369	     39624 ns/op	 201.90 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30348	     39511 ns/op	 202.48 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30288	     39617 ns/op	 201.94 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30289	     39668 ns/op	 201.67 MB/s	      25 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	28.378s

Result 1 parsed
Benchmark run succesful
57 / 193 done
### Execute Benchmark: /lib/bytesutil/fast_string_matcher_timing_test.go::BenchmarkFastStringMatcher
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastStringMatcher$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastStringMatcher/#00-2         	38071357	        31.59 ns/op	  31.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	39129999	        31.27 ns/op	  31.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	39019029	        30.63 ns/op	  32.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	39039715	        31.25 ns/op	  32.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	39118411	        30.68 ns/op	  32.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35864506	        34.51 ns/op	  28.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	36187894	        33.91 ns/op	  29.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	34408080	        33.32 ns/op	  30.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35454345	        34.70 ns/op	  28.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35324281	        34.16 ns/op	  29.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	35169382	        35.19 ns/op	  28.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	35059209	        34.22 ns/op	  29.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34726382	        34.86 ns/op	  28.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34351070	        34.24 ns/op	  29.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	35151632	        35.13 ns/op	  28.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	32892240	        36.15 ns/op	  27.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	32540035	        36.03 ns/op	  27.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	32808520	        36.39 ns/op	  27.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33472600	        36.04 ns/op	  27.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	32944972	        36.38 ns/op	  27.49 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	24.858s

Result 1 parsed
Benchmark run succesful
58 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalDeltaConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalDeltaConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalDeltaConstArray-2   	  191715	      6306 ns/op	1299.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  190910	      6290 ns/op	1302.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  190990	      6319 ns/op	1296.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  190238	      6305 ns/op	1299.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  187825	      6289 ns/op	1302.64 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.343s

Result 1 parsed
Benchmark run succesful
59 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkHeadPostingForMatchers
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHeadPostingForMatchers$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHeadPostingForMatchers$]
/lib/storage/index_db_timing_test.go::BenchmarkHeadPostingForMatchers timed out after 10s
Benchmark run succesful
60 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7905517	       151.7 ns/op	   6.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7888920	       152.2 ns/op	   6.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7867165	       152.1 ns/op	   6.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7887459	       151.9 ns/op	   6.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7878739	       151.6 ns/op	   6.60 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.785s

Result 1 parsed
Benchmark run succesful
61 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	127093789	         9.486 ns/op	 105.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	126850646	         9.469 ns/op	 105.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	127846600	         9.409 ns/op	 106.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	127310985	         9.442 ns/op	 105.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	127636466	         9.477 ns/op	 105.52 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.807s

Result 1 parsed
Benchmark run succesful
62 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkAreIdenticalSeriesFast
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAreIdenticalSeriesFast$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1281663	       937.7 ns/op	2157.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1285698	       937.9 ns/op	2156.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1282172	       939.1 ns/op	2154.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1266690	       935.5 ns/op	2162.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1282268	       937.2 ns/op	2158.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1209868	       988.6 ns/op	2046.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1208446	       987.5 ns/op	2048.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1214259	       992.3 ns/op	2038.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1214722	       986.1 ns/op	2051.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1214658	       990.0 ns/op	2043.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  644907	      1874 ns/op	3535.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  640250	      1875 ns/op	3533.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  644992	      1874 ns/op	3536.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  644113	      1875 ns/op	3533.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  630090	      1864 ns/op	3555.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  569325	      2077 ns/op	3190.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  568647	      2071 ns/op	3199.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  581901	      2075 ns/op	3193.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  581548	      2075 ns/op	3192.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  581697	      2079 ns/op	3186.80 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	33.962s

Result 1 parsed
Benchmark run succesful
63 / 193 done
### Execute Benchmark: /lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePhrase
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePhrase$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePhrase$]
/lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePhrase timed out after 10s
Benchmark run succesful
64 / 193 done
### Execute Benchmark: /lib/prompb/prompb_timing_test.go::BenchmarkWriteRequestUnmarshalProtobuf
Changing directory to dir1: /home/benchUser/other/lib/prompb
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkWriteRequestUnmarshalProtobuf$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/prompb
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkWriteRequestUnmarshalProtobuf-2   	     315	   3719515 ns/op	   2.69 MB/s	  116232 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     316	   3842400 ns/op	   2.60 MB/s	  115862 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     303	   3863338 ns/op	   2.59 MB/s	  120835 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     303	   3907287 ns/op	   2.56 MB/s	  120833 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     313	   3875133 ns/op	   2.58 MB/s	  116973 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/prompb	10.977s

Result 1 parsed
Benchmark run succesful
65 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCacheGetNoOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCacheGetNoOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCacheGetNoOverflow-2   	    4369	    276546 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4314	    276799 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4300	    274417 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4224	    275359 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4204	    278612 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.121s

Result 1 parsed
Benchmark run succesful
66 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHitRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHitRandomLastBits$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHitRandomLastBits$]
/lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHitRandomLastBits timed out after 10s
Benchmark run succesful
67 / 193 done
### Execute Benchmark: /lib/logstorage/encoding_timing_test.go::BenchmarkStringsBlockUnmarshaler_Unmarshal
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStringsBlockUnmarshaler_Unmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  209130	      5523 ns/op	 606.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  206810	      5646 ns/op	 593.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  198208	      5628 ns/op	 594.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  195996	      5484 ns/op	 610.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  195518	      5648 ns/op	 592.83 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	5.946s

Result 1 parsed
Benchmark run succesful
68 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkRowsDiff
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsDiff$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsDiff-2   	   34202	     35099 ns/op	 188.75 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   34112	     35348 ns/op	 187.42 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   33984	     35634 ns/op	 185.92 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   34039	     35100 ns/op	 188.75 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   34092	     34946 ns/op	 189.58 MB/s	     560 B/op	       4 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	7.803s

Result 1 parsed
Benchmark run succesful
69 / 193 done
### Execute Benchmark: /lib/logstorage/pattern_timing_test.go::BenchmarkPatternApply
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPatternApply$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPatternApply$]
/lib/logstorage/pattern_timing_test.go::BenchmarkPatternApply timed out after 10s
Benchmark run succesful
70 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalInt64Array
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64Array$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64Array-2   	   23842	     49841 ns/op	 164.36 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23709	     49928 ns/op	 164.08 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23448	     50440 ns/op	 162.41 MB/s	       5 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23929	     50329 ns/op	 162.77 MB/s	       5 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   24031	     49956 ns/op	 163.99 MB/s	       5 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	8.528s

Result 1 parsed
Benchmark run succesful
71 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkSanitizeMetricName
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeMetricName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeMetricName/#00-2         	37425135	        32.13 ns/op	  31.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	37931227	        31.50 ns/op	  31.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	38071179	        31.75 ns/op	  31.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	37055193	        31.62 ns/op	  31.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	37108429	        31.70 ns/op	  31.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32667061	        37.11 ns/op	  26.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	31900658	        37.17 ns/op	  26.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32115872	        36.77 ns/op	  27.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	32460944	        36.83 ns/op	  27.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	31814362	        37.19 ns/op	  26.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	34482913	        34.41 ns/op	  29.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	34749308	        34.62 ns/op	  28.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	34869583	        34.26 ns/op	  29.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	35220816	        34.39 ns/op	  29.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	35048722	        34.29 ns/op	  29.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31224626	        37.72 ns/op	  26.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31714220	        37.96 ns/op	  26.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31771454	        37.77 ns/op	  26.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31739205	        37.74 ns/op	  26.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31535179	        37.68 ns/op	  26.54 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	24.659s

Result 1 parsed
Benchmark run succesful
72 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionPartialOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionPartialOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionPartialOverlap/items_1000-2         	  156957	      7695 ns/op	 259.89 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  149284	      8437 ns/op	 237.06 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  159146	      8006 ns/op	 249.83 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  146433	      8020 ns/op	 249.37 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  166942	      8112 ns/op	 246.55 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  136321	      8335 ns/op	2399.60 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  147021	      8532 ns/op	2343.99 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  142322	      8654 ns/op	2311.07 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  124870	      8231 ns/op	2429.84 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  143983	      8379 ns/op	2386.83 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   48913	     24923 ns/op	8024.77 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   46552	     25961 ns/op	7703.82 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   47229	     25771 ns/op	7760.78 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   46050	     26479 ns/op	7553.03 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   45838	     25323 ns/op	7898.05 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5545	    232313 ns/op	8609.06 MB/s	  400704 B/op	     107 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    4996	    220854 ns/op	9055.76 MB/s	  400704 B/op	     107 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    4984	    224245 ns/op	8918.83 MB/s	  400704 B/op	     107 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5356	    225958 ns/op	8851.22 MB/s	  400704 B/op	     107 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5913	    224142 ns/op	8922.93 MB/s	  400704 B/op	     107 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     531	   2298723 ns/op	8700.48 MB/s	 3837441 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     513	   2325670 ns/op	8599.67 MB/s	 3837440 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     520	   2342205 ns/op	8538.96 MB/s	 3837440 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     501	   2283620 ns/op	8758.03 MB/s	 3837441 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     508	   2271909 ns/op	8803.17 MB/s	 3837442 B/op	     932 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.774s

Result 1 parsed
Benchmark run succesful
73 / 193 done
### Execute Benchmark: /lib/logstorage/encoding_timing_test.go::BenchmarkMarshalStringsBlock
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalStringsBlock$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalStringsBlock-2   	   84476	     13692 ns/op	 244.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   84411	     13430 ns/op	 249.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   87706	     13602 ns/op	 246.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   83960	     13160 ns/op	 254.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   81112	     13349 ns/op	 250.80 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.411s

Result 1 parsed
Benchmark run succesful
74 / 193 done
### Execute Benchmark: /lib/fs/reader_at_timing_test.go::BenchmarkReaderAtMustReadAt
Changing directory to dir1: /home/benchUser/other/lib/fs
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReaderAtMustReadAt$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReaderAtMustReadAt$]
/lib/fs/reader_at_timing_test.go::BenchmarkReaderAtMustReadAt timed out after 10s
Benchmark run succesful
75 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddReuse
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddReuse$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddReuse/items_1000-2         	   46375	     25607 ns/op	  39.05 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46293	     25708 ns/op	  38.90 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46698	     25673 ns/op	  38.95 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46468	     25519 ns/op	  39.19 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46664	     25604 ns/op	  39.06 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4190	    271517 ns/op	  36.83 MB/s	    2318 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4231	    270710 ns/op	  36.94 MB/s	    2315 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4312	    272138 ns/op	  36.75 MB/s	    2312 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4130	    272795 ns/op	  36.66 MB/s	    2310 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4148	    272142 ns/op	  36.75 MB/s	    2313 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     310	   3825098 ns/op	  26.14 MB/s	  214737 B/op	    1676 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     314	   3859106 ns/op	  25.91 MB/s	  214712 B/op	    1677 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     306	   3818247 ns/op	  26.19 MB/s	  214735 B/op	    1674 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     307	   3816100 ns/op	  26.20 MB/s	  214823 B/op	    1676 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     298	   3859778 ns/op	  25.91 MB/s	  214885 B/op	    1673 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  87443044 ns/op	  11.44 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  88586290 ns/op	  11.29 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  88142489 ns/op	  11.35 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  87074654 ns/op	  11.48 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  88017382 ns/op	  11.36 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1746704754 ns/op	   5.73 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1293815147 ns/op	   7.73 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1481795294 ns/op	   6.75 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1352087810 ns/op	   7.40 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1360075334 ns/op	   7.35 MB/s	361013520 B/op	      43 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.555s

Result 1 parsed
Benchmark run succesful
76 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkCalbirateScale
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCalbirateScale$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCalbirateScale-2   	 9957354	       120.4 ns/op	 149.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9954483	       120.1 ns/op	 149.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9953623	       120.6 ns/op	 149.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9949039	       120.5 ns/op	 149.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9924303	       120.0 ns/op	 149.99 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	6.611s

Result 1 parsed
Benchmark run succesful
77 / 193 done
### Execute Benchmark: /lib/promrelabel/graphite_timing_test.go::BenchmarkGraphiteReplaceTemplateExpand
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGraphiteReplaceTemplateExpand$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	120982645	        10.76 ns/op	  92.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	124171615	         9.704 ns/op	 103.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.11 ns/op	  98.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	123624722	         9.735 ns/op	 102.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.97 ns/op	  91.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85550858	        14.12 ns/op	  70.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	83753887	        14.17 ns/op	  70.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	84190609	        14.18 ns/op	  70.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85289925	        14.09 ns/op	  70.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85308417	        14.15 ns/op	  70.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64333345	        18.61 ns/op	  53.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64200277	        18.55 ns/op	  53.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	65030752	        18.55 ns/op	  53.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	63100220	        18.56 ns/op	  53.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64509406	        18.50 ns/op	  54.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	81172333	        14.67 ns/op	  68.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	81322669	        14.64 ns/op	  68.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	81304172	        14.67 ns/op	  68.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	79872814	        14.67 ns/op	  68.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82037101	        14.66 ns/op	  68.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63246532	        18.97 ns/op	  52.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	62295181	        19.00 ns/op	  52.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63103017	        18.94 ns/op	  52.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	55196238	        18.95 ns/op	  52.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	62761712	        18.93 ns/op	  52.83 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	32.928s

Result 1 parsed
Benchmark run succesful
78 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkAddMulti
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAddMulti$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAddMulti/items_1-2         	 3958017	       302.9 ns/op	   3.30 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3902367	       311.4 ns/op	   3.21 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3890630	       305.0 ns/op	   3.28 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3921572	       309.4 ns/op	   3.23 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3838578	       309.4 ns/op	   3.23 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2984236	       406.8 ns/op	  24.58 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2921238	       406.0 ns/op	  24.63 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2918992	       406.0 ns/op	  24.63 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2924493	       404.0 ns/op	  24.75 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2959459	       406.7 ns/op	  24.59 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_100-2       	  361341	      3227 ns/op	  30.99 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  337713	      3246 ns/op	  30.81 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  339343	      3245 ns/op	  30.81 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  378734	      3377 ns/op	  29.61 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  401787	      3402 ns/op	  29.40 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  199507	      6203 ns/op	 161.22 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  188109	      6460 ns/op	 154.79 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  204648	      5988 ns/op	 167.00 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  202761	      6079 ns/op	 164.50 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  197469	      5894 ns/op	 169.67 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33549	     35498 ns/op	 281.70 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33831	     35480 ns/op	 281.85 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33620	     35742 ns/op	 279.78 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33528	     35771 ns/op	 279.56 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33685	     35658 ns/op	 280.44 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100000-2    	    3457	    343980 ns/op	 290.71 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3440	    343147 ns/op	 291.42 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3298	    345908 ns/op	 289.09 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3426	    342121 ns/op	 292.29 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3463	    344259 ns/op	 290.48 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_1000000-2   	     333	   3489275 ns/op	 286.59 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     338	   3507143 ns/op	 285.13 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     340	   3488066 ns/op	 286.69 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     343	   3482190 ns/op	 287.18 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     340	   3460383 ns/op	 288.99 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_10000000-2  	      32	  35410443 ns/op	 282.40 MB/s	 1286871 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  77805659 ns/op	 128.53 MB/s	 1286871 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      21	  71308373 ns/op	 140.24 MB/s	 1286875 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      18	  76066097 ns/op	 131.46 MB/s	 1286876 B/op	     325 allocs/op
BenchmarkAddMulti/items_10000000-2  	      14	  75846482 ns/op	 131.85 MB/s	 1286880 B/op	     325 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	59.739s

Result 1 parsed
Benchmark run succesful
79 / 193 done
### Execute Benchmark: /lib/protoparser/influx/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/influx
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/influx
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  533616	      2004 ns/op	 140.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  683448	      2335 ns/op	 120.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  511648	      2321 ns/op	 121.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  529573	      2314 ns/op	 121.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  527320	      2266 ns/op	 124.42 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/influx	6.435s

Result 1 parsed
Benchmark run succesful
80 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseUint64
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseUint64-2   	 8825126	       129.5 ns/op	  38.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	 9339799	       125.8 ns/op	  39.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	11379685	        95.32 ns/op	  52.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18543528	        64.20 ns/op	  77.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18542290	        63.92 ns/op	  78.22 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	7.274s

Result 1 parsed
Benchmark run succesful
81 / 193 done
### Execute Benchmark: /lib/stringsutil/stringsutil_timing_test.go::BenchmarkStringsToLower
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStringsToLower$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStringsToLower/ascii-all-lowercase-2         	14990149	        79.82 ns/op	 551.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15139573	        79.89 ns/op	 550.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	14855128	        80.40 ns/op	 547.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15031422	        80.09 ns/op	 549.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15062480	        80.07 ns/op	 549.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3429512	       349.5 ns/op	 125.88 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3412066	       350.3 ns/op	 125.61 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3427623	       349.6 ns/op	 125.86 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3421872	       350.2 ns/op	 125.64 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3432429	       352.5 ns/op	 124.83 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3275787	       368.3 ns/op	 119.48 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3277618	       365.8 ns/op	 120.28 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3284209	       365.0 ns/op	 120.53 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3251970	       366.2 ns/op	 120.15 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3285474	       367.3 ns/op	 119.81 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1044 ns/op	  72.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1042 ns/op	  72.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1045 ns/op	  72.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1040 ns/op	  73.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1036 ns/op	  73.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  774152	      1484 ns/op	  51.20 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  781269	      1490 ns/op	  51.02 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  799969	      1488 ns/op	  51.09 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  810619	      1488 ns/op	  51.07 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  776132	      1489 ns/op	  51.04 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  920612	      1304 ns/op	  58.29 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  928354	      1304 ns/op	  58.29 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  903344	      1299 ns/op	  58.50 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  940129	      1293 ns/op	  58.79 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  941876	      1298 ns/op	  58.55 MB/s	     104 B/op	       3 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	39.420s

Result 1 parsed
Benchmark run succesful
82 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15505280	        78.07 ns/op	  12.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15458652	        77.97 ns/op	  12.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15193820	        78.12 ns/op	  12.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15305751	        78.50 ns/op	  12.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15308995	        77.95 ns/op	  12.83 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.421s

Result 1 parsed
Benchmark run succesful
83 / 193 done
### Execute Benchmark: /app/vmselect/promql/rollup_timing_test.go::BenchmarkRollupAvg
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRollupAvg$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRollupAvg-2   	 1585278	       752.5 ns/op	1328.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1594532	       755.2 ns/op	1324.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1590730	       755.4 ns/op	1323.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1595594	       751.7 ns/op	1330.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1594194	       752.9 ns/op	1328.21 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	9.846s

Result 1 parsed
Benchmark run succesful
84 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalZeroConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalZeroConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalZeroConstArray-2   	  894745	      1318 ns/op	6215.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  907540	      1323 ns/op	6190.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  916015	      1320 ns/op	6206.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  894754	      1325 ns/op	6182.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  894024	      1323 ns/op	6192.65 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.044s

Result 1 parsed
Benchmark run succesful
85 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkApplyRelabelConfigs
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkApplyRelabelConfigs$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkApplyRelabelConfigs$]
/lib/promrelabel/relabel_timing_test.go::BenchmarkApplyRelabelConfigs timed out after 10s
Benchmark run succesful
86 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	150560456	         8.009 ns/op	 124.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149444983	         8.024 ns/op	 124.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149267746	         8.089 ns/op	 123.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149082872	         8.082 ns/op	 123.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149052273	         8.078 ns/op	 123.79 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.104s

Result 1 parsed
Benchmark run succesful
87 / 193 done
### Execute Benchmark: /app/vmselect/netstorage/netstorage_timing_test.go::BenchmarkMergeSortBlocks
Changing directory to dir1: /home/benchUser/other/app/vmselect/netstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeSortBlocks$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/netstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7648	    153440 ns/op	 533.89 MB/s	    1616 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7874	    151500 ns/op	 540.73 MB/s	    1569 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7909	    151925 ns/op	 539.22 MB/s	    1562 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7857	    151851 ns/op	 539.48 MB/s	    1573 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7798	    154629 ns/op	 529.78 MB/s	    1584 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    3925	    256716 ns/op	 638.22 MB/s	    3149 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4606	    258528 ns/op	 633.74 MB/s	    2684 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4658	    258201 ns/op	 634.54 MB/s	    2654 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4578	    261474 ns/op	 626.60 MB/s	    2700 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4425	    258394 ns/op	 634.07 MB/s	    2794 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2682	    398997 ns/op	 615.94 MB/s	    4611 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2642	    400351 ns/op	 613.86 MB/s	    4680 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2866	    400166 ns/op	 614.15 MB/s	    4314 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2650	    401143 ns/op	 612.65 MB/s	    4666 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2576	    400292 ns/op	 613.95 MB/s	    4801 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1999	    580084 ns/op	 564.88 MB/s	    6187 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    2131	    549188 ns/op	 596.66 MB/s	    5805 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1930	    550294 ns/op	 595.46 MB/s	    6408 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1970	    547164 ns/op	 598.87 MB/s	    6279 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    2014	    548455 ns/op	 597.46 MB/s	    6141 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1606	    688830 ns/op	 594.63 MB/s	    7703 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1568	    689986 ns/op	 593.64 MB/s	    7890 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1622	    691726 ns/op	 592.14 MB/s	    7628 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1570	    695264 ns/op	 589.13 MB/s	    7880 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1543	    693274 ns/op	 590.82 MB/s	    8019 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7638	    152430 ns/op	 537.43 MB/s	    2008 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7783	    153492 ns/op	 533.71 MB/s	    1971 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7408	    155162 ns/op	 527.97 MB/s	    2070 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7789	    153666 ns/op	 533.10 MB/s	    1969 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7708	    154646 ns/op	 529.73 MB/s	    1990 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     247	   4807451 ns/op	  17.04 MB/s	   57422 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     243	   4775458 ns/op	  17.15 MB/s	   58367 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     247	   4846818 ns/op	  16.90 MB/s	   57425 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     243	   4814748 ns/op	  17.01 MB/s	   58367 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     247	   4791264 ns/op	  17.10 MB/s	   57424 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/netstorage	57.612s

Result 1 parsed
Benchmark run succesful
88 / 193 done
### Execute Benchmark: /lib/promscrape/discovery/kubernetes/pod_timing_test.go::BenchmarkPodGetTargetLabels
Changing directory to dir1: /home/benchUser/other/lib/promscrape/discovery/kubernetes
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPodGetTargetLabels$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discovery/kubernetes
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkPodGetTargetLabels-2   	  640437	      1753 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  672349	      1743 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  662488	      1750 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  685191	      1766 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  694075	      1744 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discovery/kubernetes	5.999s

Result 1 parsed
Benchmark run succesful
89 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta2_timing_test.go::BenchmarkMarshalInt64NearestDelta2
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64NearestDelta2$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15336	     78138 ns/op	 104.84 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15301	     78387 ns/op	 104.51 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15352	     78172 ns/op	 104.79 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15384	     78147 ns/op	 104.83 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15357	     78747 ns/op	 104.03 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43666	     27520 ns/op	 297.67 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43762	     27530 ns/op	 297.56 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43560	     27468 ns/op	 298.24 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43652	     27545 ns/op	 297.40 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43635	     27477 ns/op	 298.14 MB/s	       2 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	17.383s

Result 1 parsed
Benchmark run succesful
90 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkScrapeWorkScrapeInternal
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkScrapeWorkScrapeInternal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkScrapeWorkScrapeInternal-2   	  163294	      7290 ns/op	 179.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  163934	      7277 ns/op	 179.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  165098	      7265 ns/op	 179.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  163675	      7242 ns/op	 180.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  164786	      7262 ns/op	 179.83 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.357s

Result 1 parsed
Benchmark run succesful
91 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarInt64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarInt64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143199	      8343 ns/op	 958.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143905	      8345 ns/op	 958.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  141621	      8345 ns/op	 958.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  144511	      8347 ns/op	 958.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143739	      8340 ns/op	 959.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68970	     17414 ns/op	 459.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68866	     17428 ns/op	 459.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68426	     17416 ns/op	 459.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   69102	     17398 ns/op	 459.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68667	     17466 ns/op	 458.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31485	     38041 ns/op	 210.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31497	     38289 ns/op	 208.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31593	     37965 ns/op	 210.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31587	     37929 ns/op	 210.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31228	     38010 ns/op	 210.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14598	     82401 ns/op	  97.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14632	     82057 ns/op	  97.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14682	     81869 ns/op	  97.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14655	     81992 ns/op	  97.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14637	     81981 ns/op	  97.58 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	31.412s

Result 1 parsed
Benchmark run succesful
92 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapIsSetBit
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapIsSetBit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    8865	    129861 ns/op	 504.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9224	    129763 ns/op	 505.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9248	    131385 ns/op	 498.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9145	    129663 ns/op	 505.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9244	    129486 ns/op	 506.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8793	    129602 ns/op	 505.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    9075	    129663 ns/op	 505.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8953	    130099 ns/op	 503.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8968	    130579 ns/op	 501.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8835	    129961 ns/op	 504.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8988	    130339 ns/op	 502.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8997	    130054 ns/op	 503.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    9064	    129756 ns/op	 505.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8997	    130143 ns/op	 503.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    9060	    130176 ns/op	 503.44 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	17.852s

Result 1 parsed
Benchmark run succesful
93 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkAdd
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAdd/items_1000-2         	  103615	     10522 ns/op	  95.04 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  112579	     10583 ns/op	  94.49 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  111949	     10475 ns/op	  95.47 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  114784	     10440 ns/op	  95.79 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  107936	     10536 ns/op	  94.92 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15729	     76135 ns/op	 131.35 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15568	     76476 ns/op	 130.76 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15616	     76488 ns/op	 130.74 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15652	     76611 ns/op	 130.53 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15686	     76499 ns/op	 130.72 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_100000-2       	    1584	    738584 ns/op	 135.39 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1608	    737325 ns/op	 135.63 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1603	    737360 ns/op	 135.62 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1610	    740086 ns/op	 135.12 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_100000-2       	    1602	    744023 ns/op	 134.40 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAdd/items_1000000-2      	     159	   7400379 ns/op	 135.13 MB/s	  133524 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     160	   7374865 ns/op	 135.60 MB/s	  133524 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     160	   7380724 ns/op	 135.49 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     160	   7352435 ns/op	 136.01 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     160	   7409020 ns/op	 134.97 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73792995 ns/op	 135.51 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  74036431 ns/op	 135.07 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  74099892 ns/op	 134.95 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      15	  74095957 ns/op	 134.96 MB/s	 1286879 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73960516 ns/op	 135.21 MB/s	 1286913 B/op	     325 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.044s

Result 1 parsed
Benchmark run succesful
94 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20984119	        57.24 ns/op	  17.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20787204	        57.45 ns/op	  17.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20804469	        57.52 ns/op	  17.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20642007	        57.37 ns/op	  17.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20318906	        57.15 ns/op	  17.50 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.257s

Result 1 parsed
Benchmark run succesful
95 / 193 done
### Execute Benchmark: /lib/logstorage/block_timing_test.go::BenchmarkBlock_MustInitFromRows
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlock_MustInitFromRows$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4714382	       252.4 ns/op	   3.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4752615	       254.0 ns/op	   3.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4763857	       253.2 ns/op	   3.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4731076	       255.0 ns/op	   3.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4723807	       255.6 ns/op	   3.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  676653	      1796 ns/op	   5.57 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  693108	      1744 ns/op	   5.73 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  668132	      1679 ns/op	   5.96 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  697335	      1734 ns/op	   5.77 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  699313	      1738 ns/op	   5.75 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  152524	      7775 ns/op	  12.86 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  151653	      7715 ns/op	  12.96 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  155628	      8081 ns/op	  12.37 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  146068	      7675 ns/op	  13.03 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  153022	      7690 ns/op	  13.00 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17145	     68703 ns/op	  14.56 MB/s	      41 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   16468	     72223 ns/op	  13.85 MB/s	      42 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   16432	     69732 ns/op	  14.34 MB/s	      42 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17145	     69862 ns/op	  14.31 MB/s	      41 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17331	     69368 ns/op	  14.42 MB/s	      40 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     926	   1207393 ns/op	   8.28 MB/s	   10968 B/op	     332 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     913	   1208806 ns/op	   8.27 MB/s	   11124 B/op	     336 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     897	   1237061 ns/op	   8.08 MB/s	   11324 B/op	     342 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     888	   1194495 ns/op	   8.37 MB/s	   11437 B/op	     346 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     867	   1248070 ns/op	   8.01 MB/s	   11714 B/op	     354 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	37.808s

Result 1 parsed
Benchmark run succesful
96 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkIndexDBAddTSIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIndexDBAddTSIDs$]
Benchmark 1 done: 2025-02-08T11:13:22.683Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIndexDBAddTSIDs-2   	     489	  12187084 ns/op	   0.08 MB/s	 1764593 B/op	      65 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     466	  12786631 ns/op	   0.08 MB/s	 1795844 B/op	      64 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     417	  13759579 ns/op	   0.07 MB/s	 1874578 B/op	      65 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     532	  15559845 ns/op	   0.06 MB/s	 2073693 B/op	      69 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     478	  12171000 ns/op	   0.08 MB/s	 1732120 B/op	      62 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	55.617s

Result 1 parsed
Benchmark run succesful
97 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2400194	       503.6 ns/op	 242.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2401954	       500.3 ns/op	 243.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2407762	       498.5 ns/op	 244.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2398738	       499.5 ns/op	 244.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2416374	       499.6 ns/op	 244.19 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	8.554s

Result 1 parsed
Benchmark run succesful
98 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta2_timing_test.go::BenchmarkUnmarshalInt64NearestDelta2
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64NearestDelta2$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64NearestDelta2-2   	   39613	     30035 ns/op	 272.75 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39283	     30275 ns/op	 270.59 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39530	     30144 ns/op	 271.76 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   40482	     30091 ns/op	 272.24 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39940	     30110 ns/op	 272.07 MB/s	       3 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.536s

Result 1 parsed
Benchmark run succesful
99 / 193 done
### Execute Benchmark: /app/vmagent/remotewrite/pendingseries_timing_test.go::BenchmarkCompressWriteRequestSnappy
Changing directory to dir1: /home/benchUser/other/app/vmagent/remotewrite
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCompressWriteRequestSnappy$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCompressWriteRequestSnappy$]
/app/vmagent/remotewrite/pendingseries_timing_test.go::BenchmarkCompressWriteRequestSnappy timed out after 10s
Benchmark run succesful
100 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkRegexpFilterMatch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexpFilterMatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRegexpFilterMatch-2   	  871371	      1377 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  869289	      1376 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  802894	      1365 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  868692	      1381 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  878073	      1368 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.325s

Result 1 parsed
Benchmark run succesful
101 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64-2   	837645619	         1.425 ns/op	 702.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	849307335	         1.423 ns/op	 702.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	835854048	         1.427 ns/op	 700.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	847764396	         1.420 ns/op	 704.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	848158327	         1.424 ns/op	 702.12 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.747s

Result 1 parsed
Benchmark run succesful
102 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24662	     48273 ns/op	 165.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24879	     48385 ns/op	 165.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24798	     48490 ns/op	 164.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24837	     48469 ns/op	 165.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24757	     48379 ns/op	 165.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18861	     63519 ns/op	 125.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18824	     63505 ns/op	 125.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18740	     63562 ns/op	 125.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18852	     63841 ns/op	 125.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18873	     63821 ns/op	 125.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13189	     90897 ns/op	  88.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13189	     90876 ns/op	  88.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13214	     90893 ns/op	  88.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13159	     91074 ns/op	  87.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13180	     90847 ns/op	  88.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6678	    178971 ns/op	  44.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6570	    179425 ns/op	  44.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6597	    179167 ns/op	  44.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6680	    178925 ns/op	  44.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6669	    179361 ns/op	  44.60 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	34.350s

Result 1 parsed
Benchmark run succesful
103 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21283198	        56.24 ns/op	  17.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21100785	        55.99 ns/op	  17.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21304701	        56.10 ns/op	  17.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21239269	        55.78 ns/op	  17.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21338018	        55.86 ns/op	  17.90 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.256s

Result 1 parsed
Benchmark run succesful
104 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13174903	        91.44 ns/op	  10.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13132807	        91.93 ns/op	  10.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13080411	        91.77 ns/op	  10.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	12893239	        92.21 ns/op	  10.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13060173	        91.49 ns/op	  10.93 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.480s

Result 1 parsed
Benchmark run succesful
105 / 193 done
### Execute Benchmark: /lib/promutils/labelscompressor_timing_test.go::BenchmarkLabelsCompressorDecompress
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsCompressorDecompress$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsCompressorDecompress-2   	   97684	     11911 ns/op	   8.40 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   98851	     11920 ns/op	   8.39 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   99520	     11816 ns/op	   8.46 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   99261	     12102 ns/op	   8.26 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   97246	     11982 ns/op	   8.35 MB/s	       4 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	6.537s

Result 1 parsed
Benchmark run succesful
106 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutGetOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutGetOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutGetOverflow-2   	    1442	    841114 ns/op	      17 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1432	    836208 ns/op	      17 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1447	    826299 ns/op	      15 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1448	    832488 ns/op	      17 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1432	    832140 ns/op	      15 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.549s

Result 1 parsed
Benchmark run succesful
107 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseFloat64
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseFloat64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseFloat64-2   	 7058283	       168.9 ns/op	  29.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7161970	       167.1 ns/op	  29.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7100200	       166.7 ns/op	  30.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7167152	       169.0 ns/op	  29.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7109923	       166.9 ns/op	  29.96 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.851s

Result 1 parsed
Benchmark run succesful
108 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarInt64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarInt64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131644	      9129 ns/op	 876.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131179	      9183 ns/op	 871.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131593	      9207 ns/op	 868.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  130836	      9166 ns/op	 872.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131444	      9131 ns/op	 876.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78696	     15382 ns/op	 520.09 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78704	     15308 ns/op	 522.59 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   79222	     15253 ns/op	 524.48 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78873	     15281 ns/op	 523.51 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78544	     15236 ns/op	 525.09 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43663	     27328 ns/op	 292.74 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   44014	     27298 ns/op	 293.07 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43741	     27337 ns/op	 292.64 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43608	     27384 ns/op	 292.14 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43951	     27430 ns/op	 291.66 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28132	     42764 ns/op	 187.07 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   27963	     42830 ns/op	 186.79 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28062	     42885 ns/op	 186.55 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28281	     42598 ns/op	 187.80 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28231	     42406 ns/op	 188.65 MB/s	      27 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	28.872s

Result 1 parsed
Benchmark run succesful
109 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasMiss
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapHasMiss/items_1000-2         	   85686	     13644 ns/op	  73.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   88130	     13563 ns/op	  73.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   88546	     13690 ns/op	  73.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   88389	     13528 ns/op	  73.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   87852	     13570 ns/op	  73.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    7642	    149528 ns/op	  66.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8186	    148726 ns/op	  67.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8119	    148703 ns/op	  67.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    7983	    148144 ns/op	  67.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    7768	    148436 ns/op	  67.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     564	   2114396 ns/op	  47.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     540	   2096861 ns/op	  47.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     567	   2133238 ns/op	  46.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     549	   2131349 ns/op	  46.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     567	   2134756 ns/op	  46.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  70393374 ns/op	  14.21 MB/s	      20 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  70375990 ns/op	  14.21 MB/s	      20 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  69996902 ns/op	  14.29 MB/s	      48 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      15	  70318259 ns/op	  14.22 MB/s	      44 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  70072577 ns/op	  14.27 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 834644236 ns/op	  11.98 MB/s	     608 B/op	       5 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 843758249 ns/op	  11.85 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 829763929 ns/op	  12.05 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 838352894 ns/op	  11.93 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 825498128 ns/op	  12.11 MB/s	     112 B/op	       4 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	56.789s

Result 1 parsed
Benchmark run succesful
110 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseTimestampRFC3339Nano
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseTimestampRFC3339Nano$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseTimestampRFC3339Nano-2   	 1785328	       671.8 ns/op	   7.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1789740	       674.0 ns/op	   7.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1772778	       672.8 ns/op	   7.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1782650	       673.1 ns/op	   7.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1783366	       670.3 ns/op	   7.46 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	9.415s

Result 1 parsed
Benchmark run succesful
111 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderRowsWorstCase-2   	      75	  16748650 ns/op	   5.97 MB/s	   42018 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      78	  16833617 ns/op	   5.94 MB/s	   41836 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      78	  16842947 ns/op	   5.94 MB/s	   41975 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      79	  16739046 ns/op	   5.97 MB/s	   41869 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      79	  16747825 ns/op	   5.97 MB/s	   41875 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.932s

Result 1 parsed
Benchmark run succesful
112 / 193 done
### Execute Benchmark: /lib/storage/table_search_timing_test.go::BenchmarkTableSearch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
/lib/storage/table_search_timing_test.go::BenchmarkTableSearch timed out after 10s
Benchmark run succesful
113 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterRowsBestCase-2   	    4162	    277341 ns/op	 360.57 MB/s	     776 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4207	    277670 ns/op	 360.14 MB/s	     767 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4212	    279191 ns/op	 358.18 MB/s	     767 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4009	    280751 ns/op	 356.19 MB/s	     806 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4268	    278886 ns/op	 358.57 MB/s	     756 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.308s

Result 1 parsed
Benchmark run succesful
114 / 193 done
### Execute Benchmark: /lib/persistentqueue/persistentqueue_timing_test.go::BenchmarkQueueThroughputConcurrent
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkQueueThroughputConcurrent$]
Benchmark 1 done: 2025-02-08T11:20:21.800Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   11338	     89007 ns/op	   1.12 MB/s	       2 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   11394	     88994 ns/op	   1.12 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12414	     87802 ns/op	   1.14 MB/s	      85 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12562	     87731 ns/op	   1.14 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   11821	     87853 ns/op	   1.14 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11936	     90843 ns/op	  11.01 MB/s	      90 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   12158	     90685 ns/op	  11.03 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11775	     90876 ns/op	  11.00 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   12436	     90741 ns/op	  11.02 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11899	     91934 ns/op	  10.88 MB/s	      90 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9614	    109517 ns/op	  91.31 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	   10540	    115731 ns/op	  86.41 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9585	    114252 ns/op	  87.53 MB/s	       3 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9794	    110356 ns/op	  90.62 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9627	    113838 ns/op	  87.84 MB/s	     110 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1458	    769964 ns/op	 129.88 MB/s	     736 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1575	    803806 ns/op	 124.41 MB/s	      13 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1406	    788459 ns/op	 126.83 MB/s	     755 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1304	    787271 ns/op	 127.02 MB/s	     826 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1532	    807806 ns/op	 123.79 MB/s	     704 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     164	   8111680 ns/op	 123.28 MB/s	    6577 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     160	   8477998 ns/op	 117.95 MB/s	    6839 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     165	   8132165 ns/op	 122.97 MB/s	    6738 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     165	   8137110 ns/op	 122.89 MB/s	    6434 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     163	   8124887 ns/op	 123.08 MB/s	    3498 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      19	  81326854 ns/op	 122.96 MB/s	   70150 B/op	      11 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      20	  81580679 ns/op	 122.58 MB/s	   53937 B/op	      10 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      20	  81285390 ns/op	 123.02 MB/s	     640 B/op	       9 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      20	  82793820 ns/op	 120.78 MB/s	   59649 B/op	      10 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      18	  83965348 ns/op	 119.10 MB/s	    8486 B/op	      11 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 825463230 ns/op	 121.14 MB/s	   10520 B/op	      99 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 813398355 ns/op	 122.94 MB/s	  530756 B/op	      97 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 827947144 ns/op	 120.78 MB/s	    6792 B/op	     102 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 833956992 ns/op	 119.91 MB/s	  534728 B/op	      97 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 832138126 ns/op	 120.17 MB/s	 1055244 B/op	     103 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	57.503s

Result 1 parsed
Benchmark run succesful
115 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHitRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHitRandomLastBits$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHitRandomLastBits$]
/lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHitRandomLastBits timed out after 10s
Benchmark run succesful
116 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185275904	         6.463 ns/op	 154.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	186218860	         6.477 ns/op	 154.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185748535	         6.469 ns/op	 154.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	184870659	         6.493 ns/op	 154.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185126324	         6.495 ns/op	 153.96 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.308s

Result 1 parsed
Benchmark run succesful
117 / 193 done
### Execute Benchmark: /lib/mergeset/table_search_timing_test.go::BenchmarkTableSearch
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
/lib/mergeset/table_search_timing_test.go::BenchmarkTableSearch timed out after 10s
Benchmark run succesful
118 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHit
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapHasHit/items_1000-2         	   84490	     14061 ns/op	  71.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   83386	     13888 ns/op	  72.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   85845	     14304 ns/op	  69.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   85083	     14391 ns/op	  69.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   81957	     13840 ns/op	  72.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6169	    186145 ns/op	  53.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6202	    181744 ns/op	  55.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6406	    183065 ns/op	  54.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6394	    183731 ns/op	  54.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6442	    187549 ns/op	  53.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     493	   2335822 ns/op	  42.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     528	   2354897 ns/op	  42.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     511	   2381079 ns/op	  42.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     523	   2326170 ns/op	  42.99 MB/s	       1 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     499	   2351604 ns/op	  42.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60047403 ns/op	  16.65 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  61192543 ns/op	  16.34 MB/s	      35 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  61485912 ns/op	  16.26 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  62589288 ns/op	  15.98 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  61138708 ns/op	  16.36 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1065455213 ns/op	   9.39 MB/s	     672 B/op	       9 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1079596712 ns/op	   9.26 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1070772361 ns/op	   9.34 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1065035069 ns/op	   9.39 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1075570557 ns/op	   9.30 MB/s	     224 B/op	       8 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	43.450s

Result 1 parsed
Benchmark run succesful
119 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutNoOverFlow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutNoOverFlow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutNoOverFlow-2   	    3374	    344202 ns/op	       1 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3427	    350983 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3318	    349152 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3411	    350827 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3441	    348083 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.148s

Result 1 parsed
Benchmark run succesful
120 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderRowsBestCase-2   	    4130	    279702 ns/op	 357.52 MB/s	     768 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4191	    278306 ns/op	 359.32 MB/s	     767 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4311	    278023 ns/op	 359.68 MB/s	     765 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4318	    279531 ns/op	 357.74 MB/s	     765 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4280	    277554 ns/op	 360.29 MB/s	     766 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.408s

Result 1 parsed
Benchmark run succesful
121 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsTwoSourcesWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsTwoSourcesWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     572	   1999315 ns/op	   4.10 MB/s	    3969 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     559	   2017641 ns/op	   4.06 MB/s	    5034 B/op	      36 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     552	   2019208 ns/op	   4.06 MB/s	    5164 B/op	      36 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     556	   2025857 ns/op	   4.04 MB/s	    3932 B/op	      36 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     490	   2047522 ns/op	   4.00 MB/s	    4389 B/op	      39 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	7.000s

Result 1 parsed
Benchmark run succesful
122 / 193 done
### Execute Benchmark: /lib/logstorage/hash128_timing_test.go::BenchmarkHash128
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHash128$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkHash128-2   	  202838	      5818 ns/op	  17.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  220004	      5590 ns/op	  17.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  220066	      5426 ns/op	  18.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  222325	      5413 ns/op	  18.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  219555	      5422 ns/op	  18.44 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.302s

Result 1 parsed
Benchmark run succesful
123 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalDeltaConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalDeltaConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalDeltaConstArray-2   	  218876	      5463 ns/op	1499.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  223456	      5458 ns/op	1500.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  219942	      5463 ns/op	1499.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  220995	      5457 ns/op	1501.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  216901	      5434 ns/op	1507.64 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.298s

Result 1 parsed
Benchmark run succesful
124 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddRandomLastBits$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     466	   2590782 ns/op	  38.60 MB/s	  181772 B/op	     151 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     471	   2596665 ns/op	  38.51 MB/s	  176686 B/op	     141 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     472	   2558569 ns/op	  39.08 MB/s	  157144 B/op	     128 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     477	   2551546 ns/op	  39.19 MB/s	  151547 B/op	     129 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     466	   2598330 ns/op	  38.49 MB/s	  166602 B/op	     139 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     378	   3257032 ns/op	  30.70 MB/s	  554473 B/op	     441 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     370	   3191291 ns/op	  31.34 MB/s	  494452 B/op	     392 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     381	   3306954 ns/op	  30.24 MB/s	  543151 B/op	     431 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     343	   3176758 ns/op	  31.48 MB/s	  490457 B/op	     393 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     381	   3308293 ns/op	  30.23 MB/s	  547989 B/op	     446 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     265	   4642426 ns/op	  21.54 MB/s	 1210626 B/op	     997 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     277	   4148709 ns/op	  24.10 MB/s	 1042183 B/op	     868 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     290	   4327434 ns/op	  23.11 MB/s	 1109347 B/op	     942 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     267	   4333429 ns/op	  23.08 MB/s	 1098032 B/op	     921 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     274	   4278652 ns/op	  23.37 MB/s	 1086520 B/op	     893 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     194	   5926983 ns/op	  16.87 MB/s	 1840991 B/op	    1669 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     201	   5411267 ns/op	  18.48 MB/s	 1589531 B/op	    1431 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     187	   6039764 ns/op	  16.56 MB/s	 1914743 B/op	    1714 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     204	   5577819 ns/op	  17.93 MB/s	 1675600 B/op	    1500 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     276	   6538281 ns/op	  15.29 MB/s	 2159403 B/op	    1968 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	32.455s

Result 1 parsed
Benchmark run succesful
125 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39616	     30389 ns/op	 263.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39727	     30243 ns/op	 264.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39735	     30177 ns/op	 265.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39626	     30287 ns/op	 264.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39735	     30234 ns/op	 264.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   33006	     36404 ns/op	 219.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   33033	     36443 ns/op	 219.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   33032	     36441 ns/op	 219.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   32811	     36459 ns/op	 219.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   33018	     36364 ns/op	 219.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13178	     90840 ns/op	  88.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13182	     91244 ns/op	  87.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13174	     91138 ns/op	  87.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13138	     91145 ns/op	  87.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13154	     90911 ns/op	  88.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6783	    176356 ns/op	  45.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6775	    176089 ns/op	  45.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6825	    176213 ns/op	  45.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6812	    176496 ns/op	  45.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6762	    176849 ns/op	  45.24 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	32.124s

Result 1 parsed
Benchmark run succesful
126 / 193 done
### Execute Benchmark: /lib/streamaggr/dedup_timing_test.go::BenchmarkDedupAggr
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDedupAggr$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDedupAggr/samplesPerPush_1-2         	 2244398	       535.5 ns/op	   3.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2253585	       533.8 ns/op	   3.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2229930	       537.2 ns/op	   3.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2252658	       537.1 ns/op	   3.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2226204	       537.2 ns/op	   3.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  693876	      1553 ns/op	  12.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  780955	      1539 ns/op	  13.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  783321	      1539 ns/op	  13.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  782414	      1536 ns/op	  13.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  772264	      1537 ns/op	  13.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  114336	     10526 ns/op	  19.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  113618	     10511 ns/op	  19.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  113835	     10541 ns/op	  18.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  111625	     10528 ns/op	  19.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  114885	     10435 ns/op	  19.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12456	     96509 ns/op	  20.72 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12594	     96572 ns/op	  20.71 MB/s	       6 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12528	     96774 ns/op	  20.67 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12424	     98071 ns/op	  20.39 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12553	     97398 ns/op	  20.53 MB/s	       6 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     843	   1260298 ns/op	  15.87 MB/s	    1231 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     891	   1264182 ns/op	  15.82 MB/s	    1165 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     926	   1258546 ns/op	  15.89 MB/s	    1120 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     906	   1263602 ns/op	  15.83 MB/s	    1146 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     871	   1252549 ns/op	  15.97 MB/s	    1191 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      39	  29408022 ns/op	   6.80 MB/s	  202396 B/op	      83 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      38	  29917832 ns/op	   6.68 MB/s	  207773 B/op	      86 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      38	  29922355 ns/op	   6.68 MB/s	  207790 B/op	      86 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      34	  29754054 ns/op	   6.72 MB/s	  232384 B/op	      97 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      36	  29330812 ns/op	   6.82 MB/s	  218947 B/op	      89 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr	52.225s

Result 1 parsed
Benchmark run succesful
127 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7291339	       163.0 ns/op	   6.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7387168	       162.4 ns/op	   6.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7382395	       162.9 ns/op	   6.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7425746	       163.3 ns/op	   6.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7381052	       163.4 ns/op	   6.12 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.853s

Result 1 parsed
Benchmark run succesful
128 / 193 done
### Execute Benchmark: /app/vmselect/prometheus/federate_timing_test.go::BenchmarkFederate
Changing directory to dir1: /home/benchUser/other/app/vmselect/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFederate$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFederate-2   	 2356198	       508.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2356900	       509.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2342463	       508.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2334837	       511.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2343710	       513.3 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/prometheus	8.612s

Result 1 parsed
Benchmark run succesful
129 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheComplexParallel
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheComplexParallel$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2108745	       566.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2099011	       569.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2113686	       568.8 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2102670	       568.4 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2109745	       571.0 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.904s

Result 1 parsed
Benchmark run succesful
130 / 193 done
### Execute Benchmark: /lib/storage/part_search_timing_test.go::BenchmarkPartSearch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPartSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPartSearch$]
/lib/storage/part_search_timing_test.go::BenchmarkPartSearch timed out after 10s
Benchmark run succesful
131 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapForEachSetBit
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapForEachSetBit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4862	    242648 ns/op	 270.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4914	    242137 ns/op	 270.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4875	    243855 ns/op	 268.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4882	    243325 ns/op	 269.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4876	    242467 ns/op	 270.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4944	    244037 ns/op	 268.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4878	    243850 ns/op	 268.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4939	    243919 ns/op	 268.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4936	    243577 ns/op	 269.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4927	    243817 ns/op	 268.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8563	    138183 ns/op	 474.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8521	    138232 ns/op	 474.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8294	    138574 ns/op	 472.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8338	    138447 ns/op	 473.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8439	    138795 ns/op	 472.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8296	    139294 ns/op	 470.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8404	    138958 ns/op	 471.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8508	    138830 ns/op	 472.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8516	    139234 ns/op	 470.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8409	    139116 ns/op	 471.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1498477	       795.4 ns/op	82390.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1488807	       808.5 ns/op	81056.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1502052	       790.6 ns/op	82898.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1484667	       791.8 ns/op	82772.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1511104	       797.3 ns/op	82193.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  845293	      1397 ns/op	46896.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  815886	      1401 ns/op	46781.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  836157	      1399 ns/op	46854.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  786382	      1410 ns/op	46475.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  840554	      1397 ns/op	46918.51 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	39.964s

Result 1 parsed
Benchmark run succesful
132 / 193 done
### Execute Benchmark: /lib/storage/dedup_timing_test.go::BenchmarkDeduplicateSamplesDuringMerge
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicateSamplesDuringMerge$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   52074	     23093 ns/op	 354.74 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51956	     23162 ns/op	 353.69 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51859	     23076 ns/op	 355.00 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   52065	     23096 ns/op	 354.69 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51765	     23209 ns/op	 352.96 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58108	     20183 ns/op	 405.89 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58591	     20205 ns/op	 405.45 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   59515	     20405 ns/op	 401.47 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58784	     20461 ns/op	 400.37 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   59557	     20290 ns/op	 403.74 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   76506	     15597 ns/op	 525.22 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   73618	     16152 ns/op	 507.19 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   74532	     16134 ns/op	 507.75 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   76816	     15575 ns/op	 525.96 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   77342	     15590 ns/op	 525.47 MB/s	       3 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	21.491s

Result 1 parsed
Benchmark run succesful
133 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionNoOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionNoOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionNoOverlap/items_1000-2         	  158139	      7950 ns/op	 251.56 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  156477	      8079 ns/op	 247.56 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  148328	      8179 ns/op	 244.52 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  121432	      8831 ns/op	 226.49 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  138579	      8306 ns/op	 240.79 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	   82537	     16118 ns/op	1240.83 MB/s	   33720 B/op	      17 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	   67894	     15333 ns/op	1304.38 MB/s	   33720 B/op	      17 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	   78008	     16081 ns/op	1243.68 MB/s	   33720 B/op	      17 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	   75352	     17391 ns/op	1150.00 MB/s	   33720 B/op	      17 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	   59313	     16920 ns/op	1182.00 MB/s	   33720 B/op	      17 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   35180	     35265 ns/op	5671.42 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   35220	     34971 ns/op	5718.98 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   36572	     34517 ns/op	5794.26 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   35906	     33481 ns/op	5973.57 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   36450	     34796 ns/op	5747.71 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4359	    290197 ns/op	6891.86 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    3466	    333272 ns/op	6001.10 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    3487	    314387 ns/op	6361.59 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    3645	    313015 ns/op	6389.47 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    3943	    299730 ns/op	6672.68 MB/s	  533920 B/op	     140 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     384	   3014319 ns/op	6635.00 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     396	   2992415 ns/op	6683.57 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     382	   3131004 ns/op	6387.73 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     380	   3064874 ns/op	6525.55 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     387	   3085057 ns/op	6482.86 MB/s	 5102080 B/op	    1236 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.804s

Result 1 parsed
Benchmark run succesful
134 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseTimestampISO8601
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseTimestampISO8601$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseTimestampISO8601-2   	 2667703	       447.6 ns/op	  11.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2680668	       447.9 ns/op	  11.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2653046	       448.3 ns/op	  11.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2688744	       449.5 ns/op	  11.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2678635	       447.0 ns/op	  11.19 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	8.285s

Result 1 parsed
Benchmark run succesful
135 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUint64-2   	1000000000	         1.090 ns/op	 917.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	1000000000	         1.093 ns/op	 914.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	1000000000	         1.094 ns/op	 914.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	1000000000	         1.098 ns/op	 910.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	1000000000	         1.096 ns/op	 912.74 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.056s

Result 1 parsed
Benchmark run succesful
136 / 193 done
### Execute Benchmark: /lib/blockcache/blockcache_timing_test.go::BenchmarkCacheGet
Changing directory to dir1: /home/benchUser/other/lib/blockcache
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCacheGet$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCacheGet-2   	    1058	   1128016 ns/op	   8.87 MB/s	    1608 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1047	   1101777 ns/op	   9.08 MB/s	    1623 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1058	   1111431 ns/op	   9.00 MB/s	    1610 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1035	   1120417 ns/op	   8.93 MB/s	    1644 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1069	   1107056 ns/op	   9.03 MB/s	    1593 B/op	       9 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache	6.480s

Result 1 parsed
Benchmark run succesful
137 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddWithAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddWithAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddWithAllocs/items_1000-2         	   15646	     76236 ns/op	  13.12 MB/s	   47736 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   15795	     75738 ns/op	  13.20 MB/s	   47734 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   15610	     76255 ns/op	  13.11 MB/s	   47737 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   15756	     75892 ns/op	  13.18 MB/s	   47738 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   15835	     76103 ns/op	  13.14 MB/s	   47732 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1812	    649162 ns/op	  15.40 MB/s	  389420 B/op	     254 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1786	    658331 ns/op	  15.19 MB/s	  389447 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1822	    665671 ns/op	  15.02 MB/s	  389491 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1695	    651297 ns/op	  15.35 MB/s	  389485 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1790	    651806 ns/op	  15.34 MB/s	  389425 B/op	     254 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     136	   8428123 ns/op	  11.87 MB/s	 3267077 B/op	    3933 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     141	   8437629 ns/op	  11.85 MB/s	 3267183 B/op	    3935 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     141	   8603500 ns/op	  11.62 MB/s	 3267073 B/op	    3933 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     135	   8771336 ns/op	  11.40 MB/s	 3267523 B/op	    3939 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     136	   8724928 ns/op	  11.46 MB/s	 3266874 B/op	    3930 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 179380769 ns/op	   5.57 MB/s	49620577 B/op	   38300 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       6	 167167625 ns/op	   5.98 MB/s	49623920 B/op	   38344 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 170172287 ns/op	   5.88 MB/s	49622618 B/op	   38327 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 170652323 ns/op	   5.86 MB/s	49623884 B/op	   38343 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 170762294 ns/op	   5.86 MB/s	49612830 B/op	   38205 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	3050635840 ns/op	   3.28 MB/s	403151800 B/op	  306795 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2818526138 ns/op	   3.55 MB/s	403137960 B/op	  306618 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2853271040 ns/op	   3.50 MB/s	403183816 B/op	  307193 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2892188735 ns/op	   3.46 MB/s	403131528 B/op	  306547 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2901591440 ns/op	   3.45 MB/s	403168136 B/op	  307004 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	54.806s

Result 1 parsed
Benchmark run succesful
138 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterRowsWorstCase-2   	      28	  37977630 ns/op	   2.63 MB/s	10935796 B/op	   50006 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      28	  37465901 ns/op	   2.67 MB/s	10935795 B/op	   50006 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      31	  36680468 ns/op	   2.73 MB/s	 9877492 B/op	   45167 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      27	  39274538 ns/op	   2.55 MB/s	11340825 B/op	   51858 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      30	  37516837 ns/op	   2.67 MB/s	10206743 B/op	   46673 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	15.653s

Result 1 parsed
Benchmark run succesful
139 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64-2   	703641159	         1.708 ns/op	 585.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	702063794	         1.703 ns/op	 587.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	705540849	         1.700 ns/op	 588.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	705416578	         1.703 ns/op	 587.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	708292826	         1.700 ns/op	 588.28 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.895s

Result 1 parsed
Benchmark run succesful
140 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185866267	         6.445 ns/op	 155.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185704640	         6.427 ns/op	 155.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	186067226	         6.442 ns/op	 155.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185826426	         6.455 ns/op	 154.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	186128541	         6.757 ns/op	 148.00 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.339s

Result 1 parsed
Benchmark run succesful
141 / 193 done
### Execute Benchmark: /lib/storage/tag_filters_timing_test.go::BenchmarkOptimizedReMatchCost
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkOptimizedReMatchCost$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkOptimizedReMatchCost$]
/lib/storage/tag_filters_timing_test.go::BenchmarkOptimizedReMatchCost timed out after 10s
Benchmark run succesful
142 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarUint64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarUint64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  292161	      4042 ns/op	1979.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  293022	      4037 ns/op	1981.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  295237	      4024 ns/op	1988.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  298171	      4029 ns/op	1985.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  285212	      4010 ns/op	1995.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   88382	     13615 ns/op	 587.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87880	     13706 ns/op	 583.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87991	     13660 ns/op	 585.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87733	     13676 ns/op	 584.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87634	     13664 ns/op	 585.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   36021	     33471 ns/op	 239.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35814	     33357 ns/op	 239.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   36076	     33391 ns/op	 239.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35886	     33394 ns/op	 239.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35863	     33522 ns/op	 238.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15223	     78935 ns/op	 101.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15163	     79372 ns/op	 100.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15085	     79663 ns/op	 100.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15122	     79289 ns/op	 100.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15153	     79405 ns/op	 100.75 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	30.568s

Result 1 parsed
Benchmark run succesful
143 / 193 done
### Execute Benchmark: /lib/persistentqueue/fastqueue_timing_test.go::BenchmarkFastQueueThroughputConcurrent
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastQueueThroughputConcurrent$]
Benchmark 1 done: 2025-02-08T11:34:09.027Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T11:34:09.030Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:09.033Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T11:34:09.047Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:09.051Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:09.063Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:09.075Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:09.086Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:09.692Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:09.706Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:10.892Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  327049	      3666 ns/op	   2.73 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T11:34:10.905Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:10.909Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:10.922Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:10.926Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:10.938Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:10.960Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:10.973Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:11.668Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:11.680Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:12.860Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  320708	      3716 ns/op	   2.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T11:34:12.871Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:12.875Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:12.888Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:12.891Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:12.905Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:12.932Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:12.946Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:13.636Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:13.650Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:14.820Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  319652	      3702 ns/op	   2.70 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T11:34:14.835Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:14.839Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:14.852Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:14.856Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:14.871Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:14.889Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:14.903Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:15.541Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:15.554Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:16.713Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  310501	      3774 ns/op	   2.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T11:34:16.728Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:16.732Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:16.747Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:16.751Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:16.765Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:16.783Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:16.796Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:17.380Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T11:34:17.393Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:18.552Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  315280	      3713 ns/op	   2.69 MB/s	       0 B/op	       0 allocs/op
2025-02-08T11:34:18.565Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:18.569Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T11:34:18.581Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:18.585Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:18.597Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:18.622Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:18.636Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:19.295Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:19.308Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:20.493Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  324082	      3693 ns/op	  27.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T11:34:20.506Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:20.510Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:20.523Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:20.527Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:20.540Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:20.558Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:20.572Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:21.310Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:21.329Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:22.508Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  324333	      3693 ns/op	  27.08 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T11:34:22.522Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:22.526Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:22.539Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:22.543Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:22.556Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:22.575Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:22.589Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:23.325Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:23.340Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:24.473Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  313138	      3666 ns/op	  27.28 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T11:34:24.488Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:24.491Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:24.506Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:24.510Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:24.527Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:24.550Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:24.567Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:25.077Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:25.091Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:26.254Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  305266	      3854 ns/op	  25.95 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T11:34:26.266Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:26.269Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:26.281Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:26.285Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:26.297Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:26.325Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:26.339Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:27.060Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T11:34:27.076Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:28.255Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  315315	      3788 ns/op	  26.40 MB/s	       0 B/op	       0 allocs/op
2025-02-08T11:34:28.268Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:28.271Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T11:34:28.283Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:28.288Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:28.302Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:28.330Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:28.343Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:28.979Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:28.993Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:30.143Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  299313	      3886 ns/op	 257.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T11:34:30.158Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:30.162Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:30.177Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:30.182Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:30.200Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:30.220Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:30.238Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:30.715Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:30.728Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:31.876Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  308674	      3759 ns/op	 266.00 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T11:34:31.893Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:31.897Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:31.913Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:31.917Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:31.933Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:31.951Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:31.964Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:32.461Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:32.473Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:33.613Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  303682	      3792 ns/op	 263.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T11:34:33.626Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:33.629Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:33.642Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:33.645Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:33.658Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:33.685Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:33.701Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:34.400Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:34.414Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:35.578Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  300380	      3920 ns/op	 255.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T11:34:35.592Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:35.596Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:35.608Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:35.612Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:35.624Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:35.648Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:35.662Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:36.345Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T11:34:36.361Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:37.530Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  314894	      3761 ns/op	 265.88 MB/s	       3 B/op	       0 allocs/op
2025-02-08T11:34:37.544Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:37.549Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T11:34:37.562Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:37.566Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:37.580Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:37.602Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:37.615Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:38.316Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:38.329Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:39.466Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  273411	      4204 ns/op	2378.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T11:34:39.480Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:39.483Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:39.498Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:39.502Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:39.518Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:39.544Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:39.560Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:40.152Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:40.165Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:41.327Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  269805	      4354 ns/op	2296.66 MB/s	       4 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T11:34:41.340Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:41.343Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:41.355Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:41.359Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:41.370Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:41.398Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:41.411Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:42.265Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:42.278Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:43.426Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  263760	      4401 ns/op	2272.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T11:34:43.439Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:43.443Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:43.455Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:43.458Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:43.471Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:43.500Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:43.512Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:44.259Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:44.273Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:45.422Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  268137	      4336 ns/op	2306.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T11:34:45.435Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:45.439Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:45.452Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:45.456Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:45.469Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:45.494Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:45.508Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:46.231Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T11:34:46.244Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:47.430Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  275451	      4352 ns/op	2297.89 MB/s	       0 B/op	       0 allocs/op
2025-02-08T11:34:47.444Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:47.447Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T11:34:47.459Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:47.464Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:47.477Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:47.528Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:47.540Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:48.484Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:48.500Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:49.731Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  125558	      9919 ns/op	10081.45 MB/s	       8 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T11:34:49.747Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:49.750Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:49.762Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:49.766Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:49.779Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:49.838Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:49.853Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:50.854Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  101680	      9983 ns/op	10017.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T11:34:50.870Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:50.873Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:50.886Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:50.889Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:50.904Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:50.955Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:50.969Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:51.843Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:51.856Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:53.001Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  119182	      9716 ns/op	10292.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T11:34:53.014Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:53.017Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:53.031Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:53.035Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:53.049Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:53.099Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:53.112Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:54.026Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:54.040Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:55.226Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  126424	      9485 ns/op	10542.75 MB/s	       8 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T11:34:55.240Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:55.244Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:55.255Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:55.260Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:55.272Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:55.325Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:55.337Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:56.291Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T11:34:56.305Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:57.489Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  125625	      9526 ns/op	10497.32 MB/s	       8 B/op	       0 allocs/op
2025-02-08T11:34:57.502Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:57.507Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T11:34:57.520Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:57.530Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:34:57.543Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:57.955Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:34:57.968Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:59.100Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10186	    112334 ns/op	8902.00 MB/s	      12 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T11:34:59.112Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:59.116Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:34:59.130Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:59.145Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:34:59.158Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:34:59.518Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:34:59.530Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:00.701Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10269	    115231 ns/op	8678.20 MB/s	      12 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T11:35:00.715Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:00.720Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:00.733Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:00.744Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:00.756Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:01.139Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:01.154Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:02.292Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10256	    112380 ns/op	8898.41 MB/s	     105 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T11:35:02.303Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:02.307Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:02.319Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:02.332Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:02.344Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:02.766Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:02.779Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:03.988Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10742	    113716 ns/op	8793.83 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T11:35:04.002Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:04.007Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:04.020Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:04.031Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:04.044Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:04.421Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T11:35:04.433Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:05.603Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10387	    113806 ns/op	8786.85 MB/s	     103 B/op	       0 allocs/op
2025-02-08T11:35:05.616Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:05.626Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T11:35:05.639Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:05.806Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:05.819Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:06.848Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     348	   2991567 ns/op	3342.73 MB/s	    5865 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T11:35:06.860Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:06.867Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:06.881Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:07.065Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:07.078Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:08.213Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     376	   3053462 ns/op	3274.97 MB/s	    5426 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T11:35:08.227Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:08.234Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:08.246Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:08.435Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:08.448Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:09.471Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     346	   2992705 ns/op	3341.46 MB/s	    5991 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T11:35:09.483Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:09.490Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:09.502Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:09.701Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:09.715Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:10.819Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     380	   2938338 ns/op	3403.28 MB/s	    5370 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T11:35:10.832Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:10.838Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:10.849Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:11.030Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T11:35:11.041Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T11:35:12.206Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     393	   2992555 ns/op	3341.63 MB/s	    2628 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	63.218s

Result 1 parsed
Benchmark run succesful
144 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapForEachSetBitReadonly
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapForEachSetBitReadonly$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	   10000	    121842 ns/op	 537.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9399	    108632 ns/op	 603.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9811	    122609 ns/op	 534.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9358	    122342 ns/op	 535.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9799	    108645 ns/op	 603.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100768 ns/op	 650.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    101054 ns/op	 648.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100362 ns/op	 653.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100454 ns/op	 652.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100375 ns/op	 652.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1458296	       819.9 ns/op	79932.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1447773	       822.0 ns/op	79727.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1455412	       821.1 ns/op	79816.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1461066	       823.1 ns/op	79624.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1458559	       822.7 ns/op	79656.26 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	21.010s

Result 1 parsed
Benchmark run succesful
145 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterBlocksWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterBlocksWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      46	  23189195 ns/op	   4.31 MB/s	 6587140 B/op	   21743 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      43	  23338125 ns/op	   4.28 MB/s	 7046558 B/op	   23260 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      49	  22606592 ns/op	   4.42 MB/s	 6183720 B/op	   20412 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      48	  22502102 ns/op	   4.44 MB/s	 6312551 B/op	   20837 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      48	  22862171 ns/op	   4.37 MB/s	 6312560 B/op	   20837 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	14.811s

Result 1 parsed
Benchmark run succesful
146 / 193 done
### Execute Benchmark: /lib/storage/dedup_timing_test.go::BenchmarkDeduplicateSamples
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicateSamples$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46372	     26058 ns/op	 314.38 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46652	     26050 ns/op	 314.48 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46321	     25929 ns/op	 315.94 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46609	     25825 ns/op	 317.21 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   45978	     25911 ns/op	 316.15 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51110	     23871 ns/op	 343.18 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51302	     23940 ns/op	 342.20 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   50181	     23417 ns/op	 349.83 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51362	     23724 ns/op	 345.31 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51433	     23425 ns/op	 349.71 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   59917	     19306 ns/op	 424.32 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   62330	     19370 ns/op	 422.92 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   59606	     19532 ns/op	 419.41 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   59460	     19430 ns/op	 421.62 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   61801	     19396 ns/op	 422.34 MB/s	       4 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	21.954s

Result 1 parsed
Benchmark run succesful
147 / 193 done
### Execute Benchmark: /lib/protoparser/datadogv1/parser_timing_test.go::BenchmarkRequestUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/datadogv1
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRequestUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv1
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRequestUnmarshal-2   	  240426	      4928 ns/op	  51.95 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  230221	      4951 ns/op	  51.71 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  231592	      4942 ns/op	  51.80 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  232556	      4921 ns/op	  52.02 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  235208	      4981 ns/op	  51.39 MB/s	     408 B/op	      11 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv1	6.069s

Result 1 parsed
Benchmark run succesful
148 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalConstArray-2   	  188592	      6278 ns/op	1304.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  191265	      6270 ns/op	1306.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  189967	      6255 ns/op	1309.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  192201	      6265 ns/op	1307.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  190296	      6286 ns/op	1303.21 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.310s

Result 1 parsed
Benchmark run succesful
149 / 193 done
### Execute Benchmark: /app/vlinsert/opentelemetry/opentelemetry_timing_test.go::BenchmarkParseProtobufRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/opentelemetry
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/opentelemetry
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26822	     45538 ns/op	   2.20 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26266	     46103 ns/op	   2.17 MB/s	   37055 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26726	     46273 ns/op	   2.16 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   25752	     44655 ns/op	   2.24 MB/s	   37055 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26167	     46003 ns/op	   2.17 MB/s	   37055 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   24990	     48926 ns/op	   2.04 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   24626	     48738 ns/op	   2.05 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   24679	     48377 ns/op	   2.07 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   24943	     47921 ns/op	   2.09 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25860	     47494 ns/op	   2.11 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2444	    482806 ns/op	   2.07 MB/s	  435512 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2496	    491336 ns/op	   2.04 MB/s	  435491 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2510	    487203 ns/op	   2.05 MB/s	  435486 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2522	    481039 ns/op	   2.08 MB/s	  435480 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2565	    479005 ns/op	   2.09 MB/s	  435464 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2418	    481533 ns/op	   2.08 MB/s	  436779 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2532	    474169 ns/op	   2.11 MB/s	  436733 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2498	    489171 ns/op	   2.04 MB/s	  436746 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2419	    485540 ns/op	   2.06 MB/s	  436779 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2198	    489531 ns/op	   2.04 MB/s	  436883 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13524	     87732 ns/op	   2.28 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13802	     86711 ns/op	   2.31 MB/s	   72913 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13478	     89111 ns/op	   2.24 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13444	     87050 ns/op	   2.30 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13273	     88923 ns/op	   2.25 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12716	     92403 ns/op	   2.16 MB/s	   74182 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12442	     91653 ns/op	   2.18 MB/s	   74183 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   13226	     91160 ns/op	   2.19 MB/s	   74180 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   13044	     92617 ns/op	   2.16 MB/s	   74181 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12844	     93157 ns/op	   2.15 MB/s	   74182 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1105	   1050100 ns/op	   1.90 MB/s	  872747 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1113	   1027737 ns/op	   1.95 MB/s	  872712 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1112	   1045120 ns/op	   1.91 MB/s	  872717 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1149	   1037803 ns/op	   1.93 MB/s	  872557 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1072	   1041933 ns/op	   1.92 MB/s	  872901 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1096	   1045271 ns/op	   1.91 MB/s	  874044 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1064	   1050662 ns/op	   1.90 MB/s	  874197 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1119	   1036374 ns/op	   1.93 MB/s	  873941 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1117	   1060753 ns/op	   1.89 MB/s	  873950 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1072	   1041731 ns/op	   1.92 MB/s	  874157 B/op	    4084 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/opentelemetry	62.911s

Result 1 parsed
Benchmark run succesful
150 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockMarshal
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockMarshal$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockMarshal$]
/lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockMarshal timed out after 10s
Benchmark run succesful
151 / 193 done
### Execute Benchmark: /lib/streamaggr/streamaggr_timing_test.go::BenchmarkAggregatorsPush
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAggregatorsPush$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAggregatorsPush$]
/lib/streamaggr/streamaggr_timing_test.go::BenchmarkAggregatorsPush timed out after 10s
Benchmark run succesful
152 / 193 done
### Execute Benchmark: /lib/protoparser/opentsdb/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentsdb
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdb
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2485796	       486.7 ns/op	 341.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2469712	       487.6 ns/op	 340.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2458358	       485.7 ns/op	 341.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2465860	       495.6 ns/op	 334.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2450022	       485.0 ns/op	 342.28 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdb	8.498s

Result 1 parsed
Benchmark run succesful
153 / 193 done
### Execute Benchmark: /lib/logstorage/inmemory_part_timing_test.go::BenchmarkInmemoryPart_MustInitFromRows
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPart_MustInitFromRows$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPart_MustInitFromRows$]
/lib/logstorage/inmemory_part_timing_test.go::BenchmarkInmemoryPart_MustInitFromRows timed out after 10s
Benchmark run succesful
154 / 193 done
### Execute Benchmark: /lib/promscrape/discoveryutils/utils_timing_test.go::BenchmarkSanitizeLabelName
Changing directory to dir1: /home/benchUser/other/lib/promscrape/discoveryutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeLabelName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discoveryutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeLabelName-2   	27365667	        43.26 ns/op	  23.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27396882	        43.57 ns/op	  22.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27812852	        43.33 ns/op	  23.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27804270	        43.89 ns/op	  22.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27682888	        43.51 ns/op	  22.98 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discoveryutils	6.246s

Result 1 parsed
Benchmark run succesful
155 / 193 done
### Execute Benchmark: /lib/persistentqueue/persistentqueue_timing_test.go::BenchmarkQueueThroughputSerial
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkQueueThroughputSerial$]
Benchmark 1 done: 2025-02-08T11:41:22.881Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkQueueThroughputSerial/block-size-1-2         	   17307	     58026 ns/op	   1.72 MB/s	      62 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21544	     55817 ns/op	   1.79 MB/s	      49 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   18112	     56245 ns/op	   1.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21098	     57458 ns/op	   1.74 MB/s	      25 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21306	     54770 ns/op	   1.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   18312	     58699 ns/op	  17.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   16995	     59591 ns/op	  16.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17466	     57313 ns/op	  17.45 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17005	     59065 ns/op	  16.93 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   18165	     57701 ns/op	  17.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14419	     86261 ns/op	 115.93 MB/s	      74 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   13580	     85607 ns/op	 116.81 MB/s	      78 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14079	     85825 ns/op	 116.52 MB/s	      75 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14060	     85886 ns/op	 116.43 MB/s	      76 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14031	     86068 ns/op	 116.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1411	    788909 ns/op	 126.76 MB/s	       9 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1790	    806297 ns/op	 124.02 MB/s	      12 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1617	    792562 ns/op	 126.17 MB/s	       8 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1455	    812228 ns/op	 123.12 MB/s	       8 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1692	    803764 ns/op	 124.41 MB/s	     627 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     163	   8111324 ns/op	 123.28 MB/s	    3344 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     164	   8416315 ns/op	 118.82 MB/s	    6569 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     162	   8115852 ns/op	 123.22 MB/s	    6607 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     160	   8087318 ns/op	 123.65 MB/s	    6630 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     160	   8094314 ns/op	 123.54 MB/s	     128 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      19	  81447211 ns/op	 122.78 MB/s	   14901 B/op	      10 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      20	  83059564 ns/op	 120.40 MB/s	   66201 B/op	      10 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      18	  83397770 ns/op	 119.91 MB/s	   44377 B/op	      10 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      16	  82440350 ns/op	 121.30 MB/s	   74500 B/op	      11 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      18	  84145996 ns/op	 118.84 MB/s	    8019 B/op	      11 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 833588048 ns/op	 119.96 MB/s	  531036 B/op	     100 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 829447978 ns/op	 120.56 MB/s	  272720 B/op	      98 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 830025080 ns/op	 120.48 MB/s	  530720 B/op	      97 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 820331694 ns/op	 121.90 MB/s	 1054828 B/op	      96 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 829193930 ns/op	 120.60 MB/s	  792616 B/op	      94 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	58.266s

Result 1 parsed
Benchmark run succesful
156 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9088020	       131.1 ns/op	   7.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9137950	       131.1 ns/op	   7.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9166947	       131.3 ns/op	   7.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9165668	       132.2 ns/op	   7.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9085660	       131.6 ns/op	   7.60 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.689s

Result 1 parsed
Benchmark run succesful
157 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterAdd
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterAdd/maxItems=1000-2         	    1653	    713227 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1656	    713732 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1683	    711116 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1713	    710638 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1686	    709914 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1641	    736881 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1632	    734163 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1638	    738184 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1656	    729864 ns/op	      24 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1638	    731634 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1496	    784121 ns/op	     273 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1536	    778168 ns/op	     266 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1533	    779709 ns/op	     267 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1552	    782517 ns/op	     264 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1549	    779141 ns/op	     264 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     751	   1555756 ns/op	    5345 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     735	   1605942 ns/op	    5461 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     734	   1592289 ns/op	    5469 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     820	   1544237 ns/op	    4896 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     758	   1525221 ns/op	    5295 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     192	   5905970 ns/op	  208385 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     220	   5436147 ns/op	  181863 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     219	   5906213 ns/op	  182693 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     213	   5923295 ns/op	  187840 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     219	   5431841 ns/op	  182693 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	34.175s

Result 1 parsed
Benchmark run succesful
158 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkRegexpFilterMismatch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexpFilterMismatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRegexpFilterMismatch-2   	  746863	      1634 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  747380	      1621 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  741760	      1624 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  747386	      1624 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  742420	      1612 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.493s

Result 1 parsed
Benchmark run succesful
159 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalGaugeArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalGaugeArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalGaugeArray-2   	    3890	    307528 ns/op	  26.64 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3584	    305008 ns/op	  26.86 MB/s	      28 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3411	    307959 ns/op	  26.60 MB/s	      29 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3662	    310695 ns/op	  26.37 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3894	    309783 ns/op	  26.44 MB/s	      25 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.873s

Result 1 parsed
Benchmark run succesful
160 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseIPv4
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseIPv4$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseIPv4-2   	 4775415	       248.2 ns/op	  20.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4869741	       247.5 ns/op	  20.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4875792	       247.8 ns/op	  20.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4844630	       246.8 ns/op	  20.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4867578	       249.1 ns/op	  20.07 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	7.277s

Result 1 parsed
Benchmark run succesful
161 / 193 done
### Execute Benchmark: /lib/regexutil/promregex_timing_test.go::BenchmarkPromRegexMatchString
Changing directory to dir1: /home/benchUser/other/lib/regexutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromRegexMatchString$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromRegexMatchString$]
/lib/regexutil/promregex_timing_test.go::BenchmarkPromRegexMatchString timed out after 10s
Benchmark run succesful
162 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterBlocksBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterBlocksBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterBlocksBestCase-2   	  219486	      5361 ns/op	18653.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  207223	      5435 ns/op	18400.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  231132	      5429 ns/op	18420.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  215881	      5519 ns/op	18118.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  206758	      5548 ns/op	18025.75 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.538s

Result 1 parsed
Benchmark run succesful
163 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddNoAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddNoAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddNoAllocs/items_1000-2         	   41102	     29331 ns/op	  34.09 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   40443	     29599 ns/op	  33.79 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41199	     29582 ns/op	  33.80 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41053	     29310 ns/op	  34.12 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   40851	     29057 ns/op	  34.41 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3676	    307093 ns/op	  32.56 MB/s	  182485 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3774	    307883 ns/op	  32.48 MB/s	  182479 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3654	    312507 ns/op	  32.00 MB/s	  182481 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3603	    310556 ns/op	  32.20 MB/s	  182479 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3814	    310680 ns/op	  32.19 MB/s	  182474 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     258	   4574234 ns/op	  21.86 MB/s	 1598598 B/op	    1680 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     250	   4740628 ns/op	  21.09 MB/s	 1598432 B/op	    1678 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     247	   4456554 ns/op	  22.44 MB/s	 1598221 B/op	    1675 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     266	   4452687 ns/op	  22.46 MB/s	 1598383 B/op	    1677 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     265	   4501872 ns/op	  22.21 MB/s	 1598452 B/op	    1678 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  87751960 ns/op	  11.40 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      12	  86288202 ns/op	  11.59 MB/s	22437049 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  87005631 ns/op	  11.49 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      12	  87517042 ns/op	  11.43 MB/s	22437049 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      12	  87959822 ns/op	  11.37 MB/s	22437049 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1439679548 ns/op	   6.95 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1429874038 ns/op	   6.99 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1430419245 ns/op	   6.99 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1435568882 ns/op	   6.97 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1410315687 ns/op	   7.09 MB/s	182754680 B/op	      39 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	39.999s

Result 1 parsed
Benchmark run succesful
164 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	149394350	         8.034 ns/op	 124.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150171938	         8.007 ns/op	 124.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	149845599	         8.001 ns/op	 124.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	149838848	         7.988 ns/op	 125.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150478654	         8.013 ns/op	 124.80 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.078s

Result 1 parsed
Benchmark run succesful
165 / 193 done
### Execute Benchmark: /lib/storage/storage_timing_test.go::BenchmarkStorageAddRows
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStorageAddRows$]
Benchmark 1 done: 2025-02-08T11:45:39.408Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T11:45:39.464Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:39.468Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T11:45:39.596Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:39.600Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:39.726Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:39.730Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:39.883Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:39.887Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:40.819Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:40.823Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  611734	      1904 ns/op	   0.53 MB/s	      57 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T11:45:42.187Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:42.191Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:42.323Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:42.328Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:42.454Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:42.459Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:42.600Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:42.604Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:43.606Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:43.610Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  595270	      1908 ns/op	   0.52 MB/s	      56 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T11:45:44.944Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:44.948Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:45.066Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:45.070Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:45.211Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:45.216Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:45.374Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:45.378Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:46.331Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:46.335Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  623020	      1941 ns/op	   0.52 MB/s	      55 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T11:45:47.754Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:47.758Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:47.885Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:47.890Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:48.027Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:48.031Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:48.197Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:48.201Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:49.174Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:49.178Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  594183	      1956 ns/op	   0.51 MB/s	      57 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T11:45:50.546Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:50.550Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:50.678Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:50.682Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:50.814Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:50.818Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:50.970Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T11:45:50.974Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  393142	      3776 ns/op	   0.26 MB/s	      87 B/op	       0 allocs/op
2025-02-08T11:45:52.739Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:52.744Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T11:45:52.935Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:52.939Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:53.122Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:53.127Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:53.427Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:53.431Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  142687	     10474 ns/op	   0.95 MB/s	     593 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T11:45:55.623Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:55.628Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:55.840Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:55.847Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:56.068Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:56.073Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:56.408Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:56.414Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  134880	      9850 ns/op	   1.02 MB/s	     506 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T11:45:58.323Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:58.327Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:58.533Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:58.538Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:58.740Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:58.745Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:45:59.080Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:45:59.085Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  126206	      9588 ns/op	   1.04 MB/s	     537 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T11:46:00.891Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:00.896Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:01.122Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:01.128Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:01.354Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:01.359Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:01.703Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:01.708Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  129363	     10441 ns/op	   0.96 MB/s	     523 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T11:46:03.763Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:03.768Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:03.995Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:04.000Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:04.233Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:04.237Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:04.563Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T11:46:04.568Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  127489	      9642 ns/op	   1.04 MB/s	     536 B/op	       0 allocs/op
2025-02-08T11:46:06.445Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:06.450Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T11:46:06.691Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:06.696Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:06.935Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:06.939Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:08.131Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:08.137Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   20250	     60334 ns/op	   1.66 MB/s	    5013 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T11:46:10.521Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:10.525Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:10.783Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:10.787Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:11.052Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:11.056Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:12.322Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:12.327Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   19473	     68646 ns/op	   1.46 MB/s	    5179 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T11:46:15.014Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:15.018Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:15.284Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:15.289Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:15.568Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:15.572Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:16.518Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:16.521Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   26209	     39049 ns/op	   2.56 MB/s	    5171 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T11:46:18.194Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:18.197Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:18.366Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:18.370Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:18.538Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:18.542Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:19.102Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:19.106Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   42927	     40771 ns/op	   2.45 MB/s	    5208 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T11:46:21.266Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:21.270Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:21.451Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:21.454Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:21.626Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:21.630Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:22.194Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T11:46:22.198Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   43231	     36536 ns/op	   2.74 MB/s	    5205 B/op	       0 allocs/op
2025-02-08T11:46:24.198Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:24.202Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T11:46:24.375Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:24.379Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:24.587Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:24.591Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3631	    339035 ns/op	   2.95 MB/s	   52900 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T11:46:26.080Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:26.083Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:26.263Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:26.266Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:26.472Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:26.475Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3697	    342891 ns/op	   2.92 MB/s	   51901 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T11:46:28.019Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:28.024Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:28.212Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:28.216Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:28.439Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:28.443Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3567	    344535 ns/op	   2.90 MB/s	   54028 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T11:46:29.911Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:29.915Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:30.096Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:30.100Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:30.321Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:30.325Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3579	    366489 ns/op	   2.73 MB/s	   53983 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T11:46:31.898Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:31.901Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:32.080Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:32.084Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T11:46:32.306Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T11:46:32.310Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3697	    345201 ns/op	   2.90 MB/s	   52024 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	54.674s

Result 1 parsed
Benchmark run succesful
166 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalGaugeArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalGaugeArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalGaugeArray-2   	   19220	     61598 ns/op	 132.99 MB/s	      10 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   18925	     62170 ns/op	 131.77 MB/s	       7 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19000	     61840 ns/op	 132.47 MB/s	      10 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19327	     62369 ns/op	 131.35 MB/s	       6 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19495	     61855 ns/op	 132.44 MB/s	       6 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	9.131s

Result 1 parsed
Benchmark run succesful
167 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalZeroConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalZeroConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalZeroConstArray-2   	  855964	      1411 ns/op	5803.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  845635	      1414 ns/op	5792.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  856922	      1418 ns/op	5776.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  838208	      1420 ns/op	5767.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  841874	      1422 ns/op	5761.45 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.104s

Result 1 parsed
Benchmark run succesful
168 / 193 done
### Execute Benchmark: /lib/bytesutil/fast_string_transformer_timing_test.go::BenchmarkFastStringTransformer
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastStringTransformer$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastStringTransformer/#00-2         	37395182	        30.77 ns/op	  32.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39218740	        31.31 ns/op	  31.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39573008	        30.38 ns/op	  32.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	36992228	        30.51 ns/op	  32.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39149601	        30.62 ns/op	  32.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	35622916	        33.53 ns/op	  29.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	34020534	        33.85 ns/op	  29.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	35129688	        34.79 ns/op	  28.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	34643078	        34.60 ns/op	  28.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	34170399	        34.77 ns/op	  28.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35918948	        35.38 ns/op	  28.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	33789868	        33.77 ns/op	  29.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35682637	        35.36 ns/op	  28.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	34788532	        33.72 ns/op	  29.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35429857	        35.55 ns/op	  28.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34654014	        36.69 ns/op	  27.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34383205	        36.25 ns/op	  27.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34318143	        35.81 ns/op	  27.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34793066	        36.26 ns/op	  27.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	33912847	        35.52 ns/op	  28.15 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	24.929s

Result 1 parsed
Benchmark run succesful
169 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectFullOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectFullOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectFullOverlap/items_1000-2         	  150124	      7977 ns/op	 250.74 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  132043	      8854 ns/op	 225.88 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  137784	      8926 ns/op	 224.06 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  135010	      8861 ns/op	 225.70 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  125582	      8550 ns/op	 233.92 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   74821	     17667 ns/op	1132.05 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   71554	     18275 ns/op	1094.39 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   63004	     18249 ns/op	1095.95 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   64772	     17611 ns/op	1135.67 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	   65335	     17732 ns/op	1127.89 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   45596	     27800 ns/op	7194.30 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   43964	     27796 ns/op	7195.19 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   43209	     27535 ns/op	7263.43 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   43069	     27474 ns/op	7279.64 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   41553	     28484 ns/op	7021.50 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    6902	    163872 ns/op	12204.64 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7525	    160929 ns/op	12427.87 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7993	    156326 ns/op	12793.77 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7272	    162578 ns/op	12301.75 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7249	    158462 ns/op	12621.29 MB/s	  266944 B/op	      72 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     697	   1767585 ns/op	11314.87 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     688	   1758754 ns/op	11371.69 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     676	   1738451 ns/op	11504.49 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     654	   1759619 ns/op	11366.09 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     720	   1756137 ns/op	11388.63 MB/s	 2549504 B/op	     620 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	33.898s

Result 1 parsed
Benchmark run succesful
170 / 193 done
### Execute Benchmark: /app/vlinsert/loki/loki_protobuf_timing_test.go::BenchmarkParseProtobufRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/loki
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
/app/vlinsert/loki/loki_protobuf_timing_test.go::BenchmarkParseProtobufRequest timed out after 10s
Benchmark run succesful
171 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderBlocksWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderBlocksWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12053334 ns/op	   8.30 MB/s	   41428 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  11978969 ns/op	   8.35 MB/s	   41266 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12089975 ns/op	   8.27 MB/s	   41261 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  11939429 ns/op	   8.38 MB/s	   41370 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  11969373 ns/op	   8.35 MB/s	   41264 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.387s

Result 1 parsed
Benchmark run succesful
172 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalUint64-2   	790630203	         1.523 ns/op	 656.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	788243422	         1.513 ns/op	 660.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	795095005	         1.515 ns/op	 659.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	797554002	         1.514 ns/op	 660.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	792966172	         1.513 ns/op	 660.86 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.808s

Result 1 parsed
Benchmark run succesful
173 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasMiss
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetHasMiss/items_1000-2         	  123526	      9714 ns/op	 102.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  123819	      9674 ns/op	 103.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  123884	      9750 ns/op	 102.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  153391	     10956 ns/op	  91.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  123231	      9678 ns/op	 103.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12367	     96531 ns/op	 103.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   17328	     97257 ns/op	 102.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   10000	    110518 ns/op	  90.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12358	    110451 ns/op	  90.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12333	     96806 ns/op	 103.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1662	    686456 ns/op	 145.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1802	    767351 ns/op	 130.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1556	    702995 ns/op	 142.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1851	    727331 ns/op	 137.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1723	    828602 ns/op	 120.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     192	   6203795 ns/op	 161.19 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     192	   6184221 ns/op	 161.70 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     196	   6199048 ns/op	 161.32 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     194	   6214320 ns/op	 160.92 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     184	   6120713 ns/op	 163.38 MB/s	       3 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      18	  60567273 ns/op	 165.11 MB/s	      12 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  61048494 ns/op	 163.80 MB/s	      35 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60987859 ns/op	 163.97 MB/s	      62 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60983751 ns/op	 163.98 MB/s	      58 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60754333 ns/op	 164.60 MB/s	      11 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	42.960s

Result 1 parsed
Benchmark run succesful
174 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderBlocksBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderBlocksBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderBlocksBestCase-2   	  401340	      2943 ns/op	33974.35 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  428030	      2934 ns/op	34087.56 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  418789	      2906 ns/op	34408.46 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  404277	      2935 ns/op	34069.50 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  415762	      2958 ns/op	33810.45 MB/s	     704 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.589s

Result 1 parsed
Benchmark run succesful
175 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutOverflow-2   	    2720	    400675 ns/op	      11 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2914	    403839 ns/op	       6 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2827	    397337 ns/op	       8 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2810	    399301 ns/op	       9 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2964	    399052 ns/op	       8 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.035s

Result 1 parsed
Benchmark run succesful
176 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHit
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetHasHit/items_1000-2         	  130746	      9204 ns/op	 108.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  131103	      9209 ns/op	 108.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  129806	      9205 ns/op	 108.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  130354	      9208 ns/op	 108.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  130852	      9181 ns/op	 108.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13052	     91798 ns/op	 108.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13065	    106097 ns/op	  94.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13032	     91855 ns/op	 108.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13053	     91683 ns/op	 109.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13082	     91432 ns/op	 109.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1117	   1018883 ns/op	  98.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1128	   1045809 ns/op	  95.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1147	   1062765 ns/op	  94.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1130	   1077143 ns/op	  92.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1159	   1063026 ns/op	  94.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      82	  13114946 ns/op	  76.25 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      85	  13064275 ns/op	  76.54 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      82	  13008278 ns/op	  76.87 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      82	  13030498 ns/op	  76.74 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      84	  13114622 ns/op	  76.25 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 160622448 ns/op	  62.26 MB/s	      96 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158391924 ns/op	  63.13 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158194620 ns/op	  63.21 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 157929018 ns/op	  63.32 MB/s	      96 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 157851627 ns/op	  63.35 MB/s	      96 B/op	       1 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.601s

Result 1 parsed
Benchmark run succesful
177 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkMarshalUint8String
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUint8String$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUint8String-2   	 1601708	       748.2 ns/op	 342.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1607709	       747.1 ns/op	 342.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1611661	       746.3 ns/op	 343.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1613773	       745.7 ns/op	 343.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1613632	       746.6 ns/op	 342.91 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	9.808s

Result 1 parsed
Benchmark run succesful
178 / 193 done
### Execute Benchmark: /app/vlinsert/elasticsearch/elasticsearch_timing_test.go::BenchmarkReadBulkRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/elasticsearch
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReadBulkRequest$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/elasticsearch
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkReadBulkRequest/gzip:off-2         	   18709	     66613 ns/op	   5.42 MB/s	  262202 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   19033	     64115 ns/op	   5.63 MB/s	  262207 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   19038	     83535 ns/op	   4.32 MB/s	  262212 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   10000	    104244 ns/op	   3.46 MB/s	  262216 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   10000	    106127 ns/op	   3.40 MB/s	  262220 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   10000	    109317 ns/op	   1.74 MB/s	  262324 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   10669	    111625 ns/op	   1.70 MB/s	  262304 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   10530	    110020 ns/op	   1.73 MB/s	  262307 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   10744	    111654 ns/op	   1.70 MB/s	  262312 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   10872	    111132 ns/op	   1.71 MB/s	  262311 B/op	       1 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/elasticsearch	17.899s

Result 1 parsed
Benchmark run succesful
179 / 193 done
### Execute Benchmark: /lib/blockcache/blockcache_timing_test.go::BenchmarkKeyHashUint64
Changing directory to dir1: /home/benchUser/other/lib/blockcache
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkKeyHashUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkKeyHashUint64-2   	143680844	         8.429 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	146605464	         8.227 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	145658862	         8.246 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	142532532	         8.237 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	142954477	         8.205 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache	10.185s

Result 1 parsed
Benchmark run succesful
180 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkAppendFloatToDecimal
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendFloatToDecimal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1638	    733995 ns/op	  11.16 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1641	    732480 ns/op	  11.18 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1604	    732903 ns/op	  11.18 MB/s	      82 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1629	    730170 ns/op	  11.22 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1646	    732901 ns/op	  11.18 MB/s	      79 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    6019	    200903 ns/op	  40.78 MB/s	      35 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    6014	    200311 ns/op	  40.90 MB/s	      21 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5961	    201118 ns/op	  40.73 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5844	    201125 ns/op	  40.73 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5888	    201764 ns/op	  40.60 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  472875	      2419 ns/op	3386.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  484707	      2413 ns/op	3394.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  504132	      2425 ns/op	3378.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  501004	      2440 ns/op	3357.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  497468	      2422 ns/op	3382.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  369780	      3219 ns/op	2544.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  373436	      3230 ns/op	2536.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  371995	      3234 ns/op	2533.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  373881	      3226 ns/op	2539.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  379627	      3215 ns/op	2547.82 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	24.748s

Result 1 parsed
Benchmark run succesful
181 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutGetNoOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutGetNoOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutGetNoOverflow-2   	    1700	    692015 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1717	    688842 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1722	    692517 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1687	    697795 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1706	    709351 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.357s

Result 1 parsed
Benchmark run succesful
182 / 193 done
### Execute Benchmark: /lib/protoparser/opentelemetry/stream/streamparser_timing_test.go::BenchmarkParseStream
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentelemetry/stream
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseStream$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentelemetry/stream
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParseStream-2   	  133642	      9245 ns/op	   0.11 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  119569	      9561 ns/op	   0.10 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  130330	      9129 ns/op	   0.11 MB/s	    2369 B/op	      96 allocs/op
BenchmarkParseStream-2   	  133646	      9500 ns/op	   0.11 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  119103	      9375 ns/op	   0.11 MB/s	    2368 B/op	      96 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentelemetry/stream	6.462s

Result 1 parsed
Benchmark run succesful
183 / 193 done
### Execute Benchmark: /lib/bytesutil/internstring_timing_test.go::BenchmarkInternString
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInternString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInternString-2   	    2580	    424226 ns/op	  23.57 MB/s	     156 B/op	       7 allocs/op
BenchmarkInternString-2   	    2701	    428448 ns/op	  23.34 MB/s	     148 B/op	       7 allocs/op
BenchmarkInternString-2   	    2685	    428472 ns/op	  23.34 MB/s	     149 B/op	       7 allocs/op
BenchmarkInternString-2   	    2696	    426647 ns/op	  23.44 MB/s	     149 B/op	       7 allocs/op
BenchmarkInternString-2   	    2678	    425783 ns/op	  23.49 MB/s	     150 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	5.961s

Result 1 parsed
Benchmark run succesful
184 / 193 done
### Execute Benchmark: /lib/protoparser/opentsdbhttp/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentsdbhttp
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdbhttp
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  570274	      2067 ns/op	 182.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  581653	      2061 ns/op	 182.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  571243	      2060 ns/op	 183.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  575300	      2074 ns/op	 181.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  585651	      2059 ns/op	 183.09 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdbhttp	6.076s

Result 1 parsed
Benchmark run succesful
185 / 193 done
### Execute Benchmark: /app/vmalert/datasource/vm_prom_api_timing_test.go::BenchmarkPromInstantUnmarshal
Changing directory to dir1: /home/benchUser/other/app/vmalert/datasource
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromInstantUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmalert/datasource
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     813	   1438269 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     824	   1442204 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     811	   1441258 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     822	   1450097 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     810	   1448741 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmalert/datasource	6.655s

Result 1 parsed
Benchmark run succesful
186 / 193 done
### Execute Benchmark: /lib/storage/inmemory_part_timing_test.go::BenchmarkInmemoryPartInitFromRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPartInitFromRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      21	  49278608 ns/op	   2.03 MB/s	 2014463 B/op	       8 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      25	  48212408 ns/op	   2.07 MB/s	 1674683 B/op	       5 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      21	  48046484 ns/op	   2.08 MB/s	 2014168 B/op	       8 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      21	  48602672 ns/op	   2.06 MB/s	 2014126 B/op	       8 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      21	  47927276 ns/op	   2.09 MB/s	 2014117 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.883s

Result 1 parsed
Benchmark run succesful
187 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionFullOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionFullOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionFullOverlap/items_1000-2         	  133281	      7667 ns/op	 260.86 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  146914	      8055 ns/op	 248.28 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  150013	      8045 ns/op	 248.59 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  144093	      7951 ns/op	 251.55 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  157099	      8256 ns/op	 242.25 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  139617	      8505 ns/op	2351.59 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  132733	      8585 ns/op	2329.77 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  133378	      8607 ns/op	2323.80 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  128709	      8786 ns/op	2276.25 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  132267	      8755 ns/op	2284.38 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   46846	     25748 ns/op	7767.69 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   46398	     26825 ns/op	7455.65 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   45608	     25650 ns/op	7797.18 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   44556	     26266 ns/op	7614.41 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   45364	     25926 ns/op	7714.35 MB/s	   50368 B/op	      20 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    7754	    153579 ns/op	13022.61 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    8860	    158413 ns/op	12625.25 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    7047	    157783 ns/op	12675.61 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    6548	    160711 ns/op	12444.68 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    7722	    161349 ns/op	12395.52 MB/s	  266944 B/op	      72 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     687	   1807597 ns/op	11064.41 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     690	   1806777 ns/op	11069.43 MB/s	 2566145 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     669	   1815882 ns/op	11013.93 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     649	   1825135 ns/op	10958.09 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     676	   1788263 ns/op	11184.04 MB/s	 2566144 B/op	     624 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.116s

Result 1 parsed
Benchmark run succesful
188 / 193 done
### Execute Benchmark: /lib/regexutil/regex_timing_test.go::BenchmarkRegexMatchString
Changing directory to dir1: /home/benchUser/other/lib/regexutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexMatchString$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexMatchString$]
/lib/regexutil/regex_timing_test.go::BenchmarkRegexMatchString timed out after 10s
Benchmark run succesful
189 / 193 done
### Execute Benchmark: /lib/storage/tag_filters_timing_test.go::BenchmarkTagFilterMatchSuffix
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTagFilterMatchSuffix$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTagFilterMatchSuffix$]
/lib/storage/tag_filters_timing_test.go::BenchmarkTagFilterMatchSuffix timed out after 10s
Benchmark run succesful
190 / 193 done
### Execute Benchmark: /lib/bytesutil/bytesutil_timing_test.go::BenchmarkToUnsafeBytes
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkToUnsafeBytes$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkToUnsafeBytes-2   	  916956	      1235 ns/op	 809.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  948055	      1234 ns/op	 810.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  971739	      1235 ns/op	 809.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  951636	      1237 ns/op	 808.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  958686	      1240 ns/op	 806.68 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	5.953s

Result 1 parsed
Benchmark run succesful
191 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkIsAutoMetricMiss
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIsAutoMetricMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIsAutoMetricMiss-2   	46583904	        26.10 ns/op	  38.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	46582855	        25.95 ns/op	  38.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	46517541	        25.98 ns/op	  38.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	45752414	        26.00 ns/op	  38.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	43404325	        26.07 ns/op	  38.36 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.116s

Result 1 parsed
Benchmark run succesful
192 / 193 done
### Execute Benchmark: /lib/fasttime/fasttime_timing_test.go::BenchmarkTimeNowUnix
Changing directory to dir1: /home/benchUser/other/lib/fasttime
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTimeNowUnix$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTimeNowUnix-2   	29645044	        40.01 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	30017090	        39.87 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	30148282	        39.81 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	30225922	        39.87 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	29373920	        39.82 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime	6.174s

Result 1 parsed
Benchmark run succesful
193 / 193 done
--- Run #1 of Baseline executed 193 which took 4999574924792ns
---------- Run #2 ----------
--- Run #2 of Baseline
# Collect Benchmarks in Dir: /lib/storage
## Collect Benchmarks in File: block_stream_writer_timing_test.go
## Collect Benchmarks in File: dedup_timing_test.go
## Collect Benchmarks in File: index_db_timing_test.go
## Collect Benchmarks in File: merge_timing_test.go
## Collect Benchmarks in File: storage_timing_test.go
## Collect Benchmarks in File: table_search_timing_test.go
## Collect Benchmarks in File: block_stream_reader_timing_test.go
## Collect Benchmarks in File: inmemory_part_timing_test.go
## Collect Benchmarks in File: part_search_timing_test.go
## Collect Benchmarks in File: table_timing_test.go
## Collect Benchmarks in File: tag_filters_timing_test.go
# Collect Benchmarks in Dir: /app/vmalert/datasource
## Collect Benchmarks in File: vm_prom_api_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/newrelic
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/regexutil
## Collect Benchmarks in File: promregex_timing_test.go
## Collect Benchmarks in File: regex_timing_test.go
# Collect Benchmarks in Dir: /lib/persistentqueue
## Collect Benchmarks in File: fastqueue_timing_test.go
## Collect Benchmarks in File: persistentqueue_timing_test.go
# Collect Benchmarks in Dir: /lib/prompbmarshal
## Collect Benchmarks in File: prompbmarshal_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentsdb
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/decimal
## Collect Benchmarks in File: decimal_timing_test.go
# Collect Benchmarks in Dir: /lib/fasttime
## Collect Benchmarks in File: fasttime_timing_test.go
# Collect Benchmarks in Dir: /lib/logstorage
## Collect Benchmarks in File: bitmap_timing_test.go
## Collect Benchmarks in File: block_timing_test.go
## Collect Benchmarks in File: hash_tokenizer_timing_test.go
## Collect Benchmarks in File: pattern_timing_test.go
## Collect Benchmarks in File: tokenizer_timing_test.go
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: filter_timing_test.go
## Collect Benchmarks in File: hash128_timing_test.go
## Collect Benchmarks in File: inmemory_part_timing_test.go
## Collect Benchmarks in File: log_rows_timing_test.go
## Collect Benchmarks in File: stream_id_timing_test.go
## Collect Benchmarks in File: values_encoder_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/loki
## Collect Benchmarks in File: loki_json_timing_test.go
## Collect Benchmarks in File: loki_protobuf_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/promql
## Collect Benchmarks in File: parse_cache_timing_test.go
## Collect Benchmarks in File: rollup_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape/discovery/kubernetes
## Collect Benchmarks in File: pod_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/datadogv1
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/datadogv2
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/influx
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/elasticsearch
## Collect Benchmarks in File: elasticsearch_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/netstorage
## Collect Benchmarks in File: netstorage_timing_test.go
# Collect Benchmarks in Dir: /lib/promutils
## Collect Benchmarks in File: labels_timing_test.go
## Collect Benchmarks in File: labelscompressor_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/csvimport
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/graphite
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/prometheus
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/stringsutil
## Collect Benchmarks in File: less_natural_timing_test.go
## Collect Benchmarks in File: stringsutil_timing_test.go
# Collect Benchmarks in Dir: /lib/tenantmetrics
## Collect Benchmarks in File: counter_map_timing_test.go
# Collect Benchmarks in Dir: /app/vmagent/remotewrite
## Collect Benchmarks in File: pendingseries_timing_test.go
# Collect Benchmarks in Dir: /app/vmselect/prometheus
## Collect Benchmarks in File: federate_timing_test.go
# Collect Benchmarks in Dir: /lib/fs
## Collect Benchmarks in File: reader_at_timing_test.go
# Collect Benchmarks in Dir: /lib/prompb
## Collect Benchmarks in File: prompb_timing_test.go
# Collect Benchmarks in Dir: /lib/promrelabel
## Collect Benchmarks in File: if_expression_timing_test.go
## Collect Benchmarks in File: relabel_timing_test.go
## Collect Benchmarks in File: graphite_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape
## Collect Benchmarks in File: config_timing_test.go
## Collect Benchmarks in File: scrapework_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentelemetry/stream
## Collect Benchmarks in File: streamparser_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/vmimport
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/blockcache
## Collect Benchmarks in File: blockcache_timing_test.go
# Collect Benchmarks in Dir: /lib/encoding
## Collect Benchmarks in File: nearest_delta2_timing_test.go
## Collect Benchmarks in File: nearest_delta_timing_test.go
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: int_timing_test.go
# Collect Benchmarks in Dir: /lib/mergeset
## Collect Benchmarks in File: encoding_timing_test.go
## Collect Benchmarks in File: table_search_timing_test.go
# Collect Benchmarks in Dir: /lib/uint64set
## Collect Benchmarks in File: uint64set_timing_test.go
# Collect Benchmarks in Dir: /lib/promscrape/discoveryutils
## Collect Benchmarks in File: utils_timing_test.go
# Collect Benchmarks in Dir: /lib/protoparser/opentsdbhttp
## Collect Benchmarks in File: parser_timing_test.go
# Collect Benchmarks in Dir: /lib/streamaggr
## Collect Benchmarks in File: dedup_timing_test.go
## Collect Benchmarks in File: deduplicator_timing_test.go
## Collect Benchmarks in File: streamaggr_timing_test.go
# Collect Benchmarks in Dir: /app/vlinsert/opentelemetry
## Collect Benchmarks in File: opentelemetry_timing_test.go
# Collect Benchmarks in Dir: /lib/bloomfilter
## Collect Benchmarks in File: filter_timing_test.go
# Collect Benchmarks in Dir: /lib/bytesutil
## Collect Benchmarks in File: fast_string_transformer_timing_test.go
## Collect Benchmarks in File: internstring_timing_test.go
## Collect Benchmarks in File: bytesutil_timing_test.go
## Collect Benchmarks in File: fast_string_matcher_timing_test.go
#####################
## Shuffle Benchmarks
#####################
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterBlocksBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterBlocksBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterBlocksBestCase-2   	  232791	      5410 ns/op	18483.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  213340	      5369 ns/op	18627.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  197694	      5423 ns/op	18441.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  216388	      5283 ns/op	18929.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlockStreamWriterBlocksBestCase-2   	  223316	      5458 ns/op	18321.94 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.476s

Result 1 parsed
Benchmark run succesful
1 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockMarshal
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockMarshal$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockMarshal$]
/lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockMarshal timed out after 10s
Benchmark run succesful
2 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalGaugeArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalGaugeArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalGaugeArray-2   	   19617	     61876 ns/op	 132.39 MB/s	      10 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19410	     61732 ns/op	 132.70 MB/s	       6 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19534	     61899 ns/op	 132.34 MB/s	       6 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19485	     61753 ns/op	 132.66 MB/s	       6 B/op	       0 allocs/op
BenchmarkUnmarshalGaugeArray-2   	   19564	     61165 ns/op	 133.93 MB/s	      10 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	9.149s

Result 1 parsed
Benchmark run succesful
3 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2408367	       496.6 ns/op	 245.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2406318	       498.5 ns/op	 244.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2407926	       499.4 ns/op	 244.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2402274	       499.5 ns/op	 244.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2393182	       498.4 ns/op	 244.79 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	8.530s

Result 1 parsed
Benchmark run succesful
4 / 193 done
### Execute Benchmark: /app/vlinsert/elasticsearch/elasticsearch_timing_test.go::BenchmarkReadBulkRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/elasticsearch
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReadBulkRequest$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/elasticsearch
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkReadBulkRequest/gzip:off-2         	   18520	     61108 ns/op	   5.91 MB/s	  262210 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   21235	     65512 ns/op	   5.51 MB/s	  262209 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   17776	     66361 ns/op	   5.44 MB/s	  262206 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   17181	     69909 ns/op	   5.16 MB/s	  262210 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:off-2         	   18523	     66396 ns/op	   5.44 MB/s	  262211 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   16129	     84112 ns/op	   2.26 MB/s	  262283 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   13663	     89796 ns/op	   2.12 MB/s	  262289 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   13911	     85187 ns/op	   2.23 MB/s	  262287 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   13929	     84982 ns/op	   2.24 MB/s	  262287 B/op	       1 allocs/op
BenchmarkReadBulkRequest/gzip:on-2          	   14347	     83907 ns/op	   2.26 MB/s	  262286 B/op	       1 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/elasticsearch	19.732s

Result 1 parsed
Benchmark run succesful
5 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarUint64/small-ints-2         	52648665	        22.40 ns/op	 312.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53154902	        22.47 ns/op	 311.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53811912	        22.35 ns/op	 313.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53933958	        22.36 ns/op	 313.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/small-ints-2         	53326021	        22.41 ns/op	 312.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19366474	        61.28 ns/op	 114.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19564597	        61.06 ns/op	 114.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19744606	        61.08 ns/op	 114.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19509816	        60.91 ns/op	 114.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64/big-ints-2           	19777329	        61.23 ns/op	 114.32 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	12.419s

Result 1 parsed
Benchmark run succesful
6 / 193 done
### Execute Benchmark: /lib/logstorage/hash128_timing_test.go::BenchmarkHash128
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHash128$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkHash128-2   	  209401	      5760 ns/op	  17.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  212126	      5706 ns/op	  17.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  211150	      5793 ns/op	  17.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  207508	      5758 ns/op	  17.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkHash128-2   	  210748	      5787 ns/op	  17.28 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.361s

Result 1 parsed
Benchmark run succesful
7 / 193 done
### Execute Benchmark: /app/vmselect/netstorage/netstorage_timing_test.go::BenchmarkMergeSortBlocks
Changing directory to dir1: /home/benchUser/other/app/vmselect/netstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeSortBlocks$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/netstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7723	    149323 ns/op	 548.61 MB/s	    1600 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    8059	    150539 ns/op	 544.18 MB/s	    1533 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    8089	    148104 ns/op	 553.13 MB/s	    1528 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    7794	    146538 ns/op	 559.04 MB/s	    1585 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-1-2         	    8076	    147059 ns/op	 557.06 MB/s	    1530 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4743	    252609 ns/op	 648.59 MB/s	    2606 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4754	    252150 ns/op	 649.77 MB/s	    2600 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4732	    251810 ns/op	 650.65 MB/s	    2612 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4741	    252595 ns/op	 648.63 MB/s	    2607 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-2-2         	    4744	    252254 ns/op	 649.50 MB/s	    2605 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    3051	    389649 ns/op	 630.72 MB/s	    4053 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2683	    391627 ns/op	 627.54 MB/s	    4609 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2746	    394572 ns/op	 622.85 MB/s	    4503 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2626	    396194 ns/op	 620.30 MB/s	    4709 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-3-2         	    2582	    395849 ns/op	 620.84 MB/s	    4789 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    2001	    546793 ns/op	 599.28 MB/s	    6182 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    2001	    543355 ns/op	 603.07 MB/s	    6181 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    2022	    540962 ns/op	 605.74 MB/s	    6118 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    2038	    545110 ns/op	 601.13 MB/s	    6070 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-4-2         	    1928	    547617 ns/op	 598.37 MB/s	    6415 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1544	    697242 ns/op	 587.46 MB/s	    8013 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1598	    689573 ns/op	 593.99 MB/s	    7742 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1650	    690460 ns/op	 593.23 MB/s	    7498 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1551	    690384 ns/op	 593.29 MB/s	    7977 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/replicationFactor-5-2         	    1605	    690375 ns/op	 593.30 MB/s	    7708 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7938	    149101 ns/op	 549.43 MB/s	    1932 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7935	    152066 ns/op	 538.71 MB/s	    1933 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7766	    152794 ns/op	 536.15 MB/s	    1975 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7779	    151412 ns/op	 541.04 MB/s	    1972 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-bestcase-2  	    7952	    149247 ns/op	 548.89 MB/s	    1929 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     249	   4782313 ns/op	  17.13 MB/s	   56960 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     249	   4731111 ns/op	  17.32 MB/s	   56963 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     250	   4764593 ns/op	  17.19 MB/s	   56733 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     244	   4822930 ns/op	  16.99 MB/s	   58130 B/op	       0 allocs/op
BenchmarkMergeSortBlocks/overlapped-blocks-worstcase-2 	     244	   4809793 ns/op	  17.03 MB/s	   58131 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/netstorage	57.713s

Result 1 parsed
Benchmark run succesful
8 / 193 done
### Execute Benchmark: /lib/logstorage/pattern_timing_test.go::BenchmarkPatternApply
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPatternApply$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPatternApply$]
/lib/logstorage/pattern_timing_test.go::BenchmarkPatternApply timed out after 10s
Benchmark run succesful
9 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHit
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapHasHit/items_1000-2         	   81328	     14808 ns/op	  67.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   83288	     14536 ns/op	  68.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   81357	     14622 ns/op	  68.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   83071	     14873 ns/op	  67.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000-2         	   80983	     14505 ns/op	  68.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6525	    185815 ns/op	  53.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6616	    181900 ns/op	  54.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6628	    183809 ns/op	  54.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6531	    183513 ns/op	  54.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000-2        	    6564	    182902 ns/op	  54.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     508	   2320361 ns/op	  43.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     519	   2396075 ns/op	  41.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     525	   2367091 ns/op	  42.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     512	   2320069 ns/op	  43.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_100000-2       	     522	   2304067 ns/op	  43.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60844763 ns/op	  16.44 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  61005894 ns/op	  16.39 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60940638 ns/op	  16.41 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60670393 ns/op	  16.48 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_1000000-2      	      19	  60401814 ns/op	  16.56 MB/s	      11 B/op	       0 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1046318899 ns/op	   9.56 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1044199905 ns/op	   9.58 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1053972936 ns/op	   9.49 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1044218776 ns/op	   9.58 MB/s	     224 B/op	       8 allocs/op
BenchmarkMapHasHit/items_10000000-2     	       1	1044486963 ns/op	   9.57 MB/s	     224 B/op	       8 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	43.551s

Result 1 parsed
Benchmark run succesful
10 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheComplexParallel
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheComplexParallel$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2115684	       569.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2093785	       568.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2113093	       568.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2121402	       567.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplexParallel-2   	 2102608	       571.6 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.917s

Result 1 parsed
Benchmark run succesful
11 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseTimestampISO8601
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseTimestampISO8601$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseTimestampISO8601-2   	 2675475	       446.1 ns/op	  11.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2693668	       445.5 ns/op	  11.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2693437	       446.5 ns/op	  11.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2686899	       445.7 ns/op	  11.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampISO8601-2   	 2696286	       446.1 ns/op	  11.21 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	8.272s

Result 1 parsed
Benchmark run succesful
12 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	184749117	         6.478 ns/op	 154.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	185372301	         6.481 ns/op	 154.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	185899765	         6.454 ns/op	 154.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	186469606	         6.448 ns/op	 155.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchOptimized-2   	186291616	         6.474 ns/op	 154.46 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.297s

Result 1 parsed
Benchmark run succesful
13 / 193 done
### Execute Benchmark: /lib/protoparser/opentsdbhttp/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentsdbhttp
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdbhttp
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  563448	      2064 ns/op	 182.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  570507	      2070 ns/op	 182.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  577129	      2054 ns/op	 183.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  574926	      2055 ns/op	 183.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  578274	      2055 ns/op	 183.43 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdbhttp	6.022s

Result 1 parsed
Benchmark run succesful
14 / 193 done
### Execute Benchmark: /lib/bytesutil/bytesutil_timing_test.go::BenchmarkToUnsafeString
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkToUnsafeString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkToUnsafeString-2   	  949231	      1234 ns/op	 810.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  975022	      1236 ns/op	 809.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  968948	      1239 ns/op	 807.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  954446	      1238 ns/op	 807.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeString-2   	  956530	      1239 ns/op	 807.03 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	6.027s

Result 1 parsed
Benchmark run succesful
15 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta2_timing_test.go::BenchmarkUnmarshalInt64NearestDelta2
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64NearestDelta2$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64NearestDelta2-2   	   39750	     30196 ns/op	 271.30 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   40104	     30004 ns/op	 273.03 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39608	     30109 ns/op	 272.08 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39354	     30284 ns/op	 270.51 MB/s	       3 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta2-2   	   39590	     30257 ns/op	 270.75 MB/s	       3 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.535s

Result 1 parsed
Benchmark run succesful
16 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20441520	        57.66 ns/op	  17.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20736751	        58.17 ns/op	  17.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20759959	        57.68 ns/op	  17.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20838102	        57.72 ns/op	  17.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMismatchUnoptimized-2   	20212024	        57.63 ns/op	  17.35 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.265s

Result 1 parsed
Benchmark run succesful
17 / 193 done
### Execute Benchmark: /app/vlinsert/opentelemetry/opentelemetry_timing_test.go::BenchmarkParseProtobufRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/opentelemetry
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/opentelemetry
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   27572	     45379 ns/op	   2.20 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26072	     44712 ns/op	   2.24 MB/s	   37055 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26187	     44989 ns/op	   2.22 MB/s	   37055 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26674	     45309 ns/op	   2.21 MB/s	   37054 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_5-2         	   26341	     44717 ns/op	   2.24 MB/s	   37055 B/op	     241 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   24996	     48169 ns/op	   2.08 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25507	     47971 ns/op	   2.08 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   24512	     47230 ns/op	   2.12 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25011	     47767 ns/op	   2.09 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_100/attributes_10-2        	   25315	     47993 ns/op	   2.08 MB/s	   38311 B/op	     267 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2512	    470970 ns/op	   2.12 MB/s	  435485 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2462	    471414 ns/op	   2.12 MB/s	  435505 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2436	    480230 ns/op	   2.08 MB/s	  435516 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2428	    477009 ns/op	   2.10 MB/s	  435519 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_5-2        	    2520	    484375 ns/op	   2.06 MB/s	  435481 B/op	    2045 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2551	    476200 ns/op	   2.10 MB/s	  436726 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2474	    484612 ns/op	   2.06 MB/s	  436756 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2474	    480930 ns/op	   2.08 MB/s	  436756 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2559	    471525 ns/op	   2.12 MB/s	  436722 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_1/rows_1000/attributes_10-2       	    2522	    481148 ns/op	   2.08 MB/s	  436737 B/op	    2071 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13316	     90435 ns/op	   2.21 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13035	     88366 ns/op	   2.26 MB/s	   72915 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13532	     88836 ns/op	   2.25 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13238	     87662 ns/op	   2.28 MB/s	   72914 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_5-2         	   13674	     90308 ns/op	   2.21 MB/s	   72913 B/op	     450 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12955	     89002 ns/op	   2.25 MB/s	   74181 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   13291	     90707 ns/op	   2.20 MB/s	   74180 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   12834	     92738 ns/op	   2.16 MB/s	   74181 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   13015	     91550 ns/op	   2.18 MB/s	   74181 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_100/attributes_10-2        	   13317	     89821 ns/op	   2.23 MB/s	   74180 B/op	     476 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1128	   1047960 ns/op	   1.91 MB/s	  872646 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1159	   1028381 ns/op	   1.94 MB/s	  872515 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1060	   1037546 ns/op	   1.93 MB/s	  872959 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1142	   1045867 ns/op	   1.91 MB/s	  872586 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_5-2        	    1112	   1030893 ns/op	   1.94 MB/s	  872717 B/op	    4058 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1104	   1028939 ns/op	   1.94 MB/s	  874008 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1159	   1064377 ns/op	   1.88 MB/s	  873771 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1140	   1059508 ns/op	   1.89 MB/s	  873851 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1113	   1072703 ns/op	   1.86 MB/s	  873968 B/op	    4084 allocs/op
BenchmarkParseProtobufRequest/scopes_2/rows_1000/attributes_10-2       	    1099	   1051181 ns/op	   1.90 MB/s	  874031 B/op	    4084 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vlinsert/opentelemetry	63.134s

Result 1 parsed
Benchmark run succesful
18 / 193 done
### Execute Benchmark: /lib/promscrape/discoveryutils/utils_timing_test.go::BenchmarkSanitizeLabelName
Changing directory to dir1: /home/benchUser/other/lib/promscrape/discoveryutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeLabelName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discoveryutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeLabelName-2   	27257468	        43.44 ns/op	  23.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27723008	        43.42 ns/op	  23.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27690181	        43.33 ns/op	  23.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27450334	        43.45 ns/op	  23.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName-2   	27114528	        43.46 ns/op	  23.01 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discoveryutils	6.202s

Result 1 parsed
Benchmark run succesful
19 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionFullOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionFullOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionFullOverlap/items_1000-2         	  157940	      7499 ns/op	 266.71 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  164688	      7485 ns/op	 267.20 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  147992	      7922 ns/op	 252.45 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  161581	      7836 ns/op	 255.22 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_1000-2         	  150478	      7891 ns/op	 253.46 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  144120	      8292 ns/op	2412.05 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  155995	      8471 ns/op	2360.98 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  145690	      8519 ns/op	2347.62 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  150862	      8177 ns/op	2445.79 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_10000-2        	  147348	      8692 ns/op	2300.98 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   70465	     18631 ns/op	10734.82 MB/s	   33712 B/op	      16 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   63326	     18968 ns/op	10543.89 MB/s	   33712 B/op	      16 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   62758	     18247 ns/op	10960.57 MB/s	   33712 B/op	      16 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   66039	     18906 ns/op	10578.50 MB/s	   33712 B/op	      16 allocs/op
BenchmarkUnionFullOverlap/items_100000-2       	   63583	     19067 ns/op	10489.52 MB/s	   33712 B/op	      16 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    6962	    173077 ns/op	11555.57 MB/s	  283648 B/op	      76 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    7719	    168812 ns/op	11847.49 MB/s	  283648 B/op	      76 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    6894	    171126 ns/op	11687.32 MB/s	  283648 B/op	      76 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    6158	    170834 ns/op	11707.25 MB/s	  283648 B/op	      76 allocs/op
BenchmarkUnionFullOverlap/items_1000000-2      	    6060	    167555 ns/op	11936.37 MB/s	  283648 B/op	      76 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     693	   1745636 ns/op	11457.14 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     667	   1809959 ns/op	11049.97 MB/s	 2549506 B/op	     620 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     673	   1809814 ns/op	11050.86 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     651	   1753578 ns/op	11405.26 MB/s	 2549504 B/op	     620 allocs/op
BenchmarkUnionFullOverlap/items_10000000-2     	     674	   1788143 ns/op	11184.79 MB/s	 2549504 B/op	     620 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.102s

Result 1 parsed
Benchmark run succesful
20 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterHasHit
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterHasHit/maxItems=1000-2         	    2193	    532486 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2192	    529381 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2211	    527275 ns/op	       1 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2151	    529267 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000-2         	    2208	    535305 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2198	    534554 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2172	    539644 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2158	    538823 ns/op	      19 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2210	    531053 ns/op	      18 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000-2        	    2162	    534584 ns/op	      19 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2014	    579245 ns/op	     203 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2073	    570749 ns/op	     197 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2047	    565279 ns/op	     200 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2026	    562962 ns/op	     202 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=100000-2       	    2000	    572300 ns/op	     204 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1156	    946956 ns/op	    3472 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1323	    886717 ns/op	    3034 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1305	    918705 ns/op	    3076 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1230	    940367 ns/op	    3263 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=1000000-2      	    1279	    939231 ns/op	    3138 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     468	   2513929 ns/op	   85491 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     442	   2530031 ns/op	   90520 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     429	   2601407 ns/op	   93263 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     454	   2540735 ns/op	   88127 B/op	       0 allocs/op
BenchmarkFilterHasHit/maxItems=10000000-2     	     432	   2561498 ns/op	   92615 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	34.320s

Result 1 parsed
Benchmark run succesful
21 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseIPv4
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseIPv4$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseIPv4-2   	 4759382	       250.9 ns/op	  19.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4807384	       252.5 ns/op	  19.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4801564	       247.7 ns/op	  20.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4831016	       247.4 ns/op	  20.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseIPv4-2   	 4883834	       249.8 ns/op	  20.02 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	7.291s

Result 1 parsed
Benchmark run succesful
22 / 193 done
### Execute Benchmark: /lib/logstorage/stream_id_timing_test.go::BenchmarkStreamIDMarshalString
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStreamIDMarshalString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStreamIDMarshalString-2   	31536234	        38.44 ns/op	  26.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31415955	        38.33 ns/op	  26.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31297488	        38.19 ns/op	  26.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	30929340	        37.82 ns/op	  26.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkStreamIDMarshalString-2   	31572484	        38.04 ns/op	  26.29 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.205s

Result 1 parsed
Benchmark run succesful
23 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15161701	        78.24 ns/op	  12.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15542790	        78.51 ns/op	  12.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15338601	        78.46 ns/op	  12.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15325086	        78.45 ns/op	  12.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchUnoptimized-2   	15411315	        78.17 ns/op	  12.79 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.432s

Result 1 parsed
Benchmark run succesful
24 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64-2   	704425075	         1.714 ns/op	 583.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	698079210	         1.708 ns/op	 585.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	699519865	         1.708 ns/op	 585.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	701900532	         1.713 ns/op	 583.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalInt64-2   	703854646	         1.710 ns/op	 584.62 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.887s

Result 1 parsed
Benchmark run succesful
25 / 193 done
### Execute Benchmark: /app/vmagent/remotewrite/pendingseries_timing_test.go::BenchmarkCompressWriteRequestSnappy
Changing directory to dir1: /home/benchUser/other/app/vmagent/remotewrite
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCompressWriteRequestSnappy$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCompressWriteRequestSnappy$]
/app/vmagent/remotewrite/pendingseries_timing_test.go::BenchmarkCompressWriteRequestSnappy timed out after 10s
Benchmark run succesful
26 / 193 done
### Execute Benchmark: /lib/storage/inmemory_part_timing_test.go::BenchmarkInmemoryPartInitFromRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPartInitFromRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      24	  49261764 ns/op	   2.03 MB/s	 1744488 B/op	       5 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      24	  49088545 ns/op	   2.04 MB/s	 1744443 B/op	       4 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      24	  49889213 ns/op	   2.00 MB/s	 1744446 B/op	       5 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      24	  47839828 ns/op	   2.09 MB/s	 1744488 B/op	       5 allocs/op
BenchmarkInmemoryPartInitFromRowsWorstCase-2   	      24	  49539563 ns/op	   2.02 MB/s	 1744516 B/op	       5 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	11.356s

Result 1 parsed
Benchmark run succesful
27 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkIndexDBGetTSIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIndexDBGetTSIDs$]
Benchmark 1 done: 2025-02-08T12:06:34.640Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIndexDBGetTSIDs-2   	    3740	    314707 ns/op	   3.18 MB/s	     172 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3789	    313257 ns/op	   3.19 MB/s	     188 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3754	    313006 ns/op	   3.19 MB/s	     185 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3704	    313899 ns/op	   3.19 MB/s	     187 B/op	       0 allocs/op
BenchmarkIndexDBGetTSIDs-2   	    3684	    315755 ns/op	   3.17 MB/s	     174 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	21.245s

Result 1 parsed
Benchmark run succesful
28 / 193 done
### Execute Benchmark: /lib/promrelabel/graphite_timing_test.go::BenchmarkGraphiteMatchTemplateMatch
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGraphiteMatchTemplateMatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	39742918	        29.85 ns/op	  33.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40204983	        29.92 ns/op	  33.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40099664	        29.86 ns/op	  33.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40168222	        29.70 ns/op	  33.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-short-2         	40312399	        29.80 ns/op	  33.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	186008791	         6.446 ns/op	 155.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	186177248	         6.722 ns/op	 148.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	182738572	         6.478 ns/op	 154.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	185878999	         7.035 ns/op	 142.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismtach-short-2      	171528961	         6.473 ns/op	 154.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15791240	        75.94 ns/op	  13.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15853146	        76.17 ns/op	  13.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15818754	        75.90 ns/op	  13.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15770377	        76.05 ns/op	  13.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/match-long-2          	15731464	        76.02 ns/op	  13.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.00 ns/op	  90.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.02 ns/op	  90.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.09 ns/op	  90.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.01 ns/op	  90.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteMatchTemplateMatch/mismatch-long-2       	100000000	        11.04 ns/op	  90.62 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	27.529s

Result 1 parsed
Benchmark run succesful
29 / 193 done
### Execute Benchmark: /lib/protoparser/datadogv1/parser_timing_test.go::BenchmarkRequestUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/datadogv1
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRequestUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv1
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRequestUnmarshal-2   	  240468	      4906 ns/op	  52.19 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  236110	      4924 ns/op	  51.99 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  235791	      4978 ns/op	  51.42 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  237000	      4960 ns/op	  51.61 MB/s	     408 B/op	      11 allocs/op
BenchmarkRequestUnmarshal-2   	  223924	      4917 ns/op	  52.07 MB/s	     408 B/op	      11 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv1	6.070s

Result 1 parsed
Benchmark run succesful
30 / 193 done
### Execute Benchmark: /lib/stringsutil/stringsutil_timing_test.go::BenchmarkStringsToLower
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStringsToLower$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStringsToLower/ascii-all-lowercase-2         	14968633	        80.02 ns/op	 549.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15038540	        79.88 ns/op	 550.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15065281	        79.74 ns/op	 551.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15013450	        79.77 ns/op	 551.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-all-lowercase-2         	15050643	        80.23 ns/op	 548.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3430431	       352.8 ns/op	 124.73 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3388177	       351.1 ns/op	 125.31 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3410174	       351.2 ns/op	 125.29 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3396255	       350.2 ns/op	 125.65 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-some-uppercase-2        	 3405452	       349.8 ns/op	 125.80 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3281444	       364.4 ns/op	 120.75 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3276841	       366.9 ns/op	 119.92 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3217652	       365.6 ns/op	 120.35 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3260590	       367.0 ns/op	 119.89 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/ascii-all-uppercase-2         	 3246729	       366.5 ns/op	 120.07 MB/s	      56 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1035 ns/op	  73.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1034 ns/op	  73.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1036 ns/op	  73.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1039 ns/op	  73.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-all-lowercase-2       	 1000000	      1048 ns/op	  72.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  773223	      1495 ns/op	  50.84 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  778995	      1494 ns/op	  50.86 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  790496	      1486 ns/op	  51.14 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  823081	      1492 ns/op	  50.96 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-some-uppercase-2      	  782323	      1487 ns/op	  51.11 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  908240	      1321 ns/op	  57.53 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  931880	      1300 ns/op	  58.45 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  936208	      1301 ns/op	  58.43 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  930073	      1309 ns/op	  58.07 MB/s	     104 B/op	       3 allocs/op
BenchmarkStringsToLower/unicode-all-uppercase-2       	  898572	      1311 ns/op	  57.98 MB/s	     104 B/op	       3 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	39.379s

Result 1 parsed
Benchmark run succesful
31 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutGetNoOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutGetNoOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutGetNoOverflow-2   	    1687	    699476 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1707	    696713 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1741	    702976 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1722	    694663 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutGetNoOverflow-2   	    1676	    706589 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.380s

Result 1 parsed
Benchmark run succesful
32 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalUint64-2   	788442328	         1.520 ns/op	 657.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	787005097	         1.522 ns/op	 657.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	786528301	         1.520 ns/op	 657.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	789293386	         1.527 ns/op	 654.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalUint64-2   	790024783	         1.514 ns/op	 660.39 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.789s

Result 1 parsed
Benchmark run succesful
33 / 193 done
### Execute Benchmark: /lib/protoparser/newrelic/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/newrelic
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/newrelic
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  242338	      4949 ns/op	 304.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  243064	      4948 ns/op	 304.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  240874	      4917 ns/op	 306.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  242212	      4930 ns/op	 306.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  241868	      4917 ns/op	 306.92 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/newrelic	6.238s

Result 1 parsed
Benchmark run succesful
34 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkScrapeWorkScrapeInternal
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkScrapeWorkScrapeInternal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkScrapeWorkScrapeInternal-2   	  162484	      7298 ns/op	 178.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  164380	      7271 ns/op	 179.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  163741	      7304 ns/op	 178.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  164268	      7429 ns/op	 175.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkScrapeWorkScrapeInternal-2   	  165817	      7330 ns/op	 178.18 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.405s

Result 1 parsed
Benchmark run succesful
35 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkSanitizeLabelName
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeLabelName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeLabelName/#00-2         	34446872	        32.21 ns/op	  31.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	37349900	        33.84 ns/op	  29.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	35779228	        32.13 ns/op	  31.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	37513544	        32.51 ns/op	  30.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/#00-2         	35638812	        34.47 ns/op	  29.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	32593806	        37.31 ns/op	  26.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	31976414	        37.06 ns/op	  26.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	31706404	        37.21 ns/op	  26.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	32084947	        37.14 ns/op	  26.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-2         	31790823	        36.98 ns/op	  27.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	35010282	        34.41 ns/op	  29.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	34465575	        35.05 ns/op	  28.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	33481912	        34.43 ns/op	  29.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	34743069	        34.39 ns/op	  29.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/foo-bar-baz-2 	34722210	        35.00 ns/op	  28.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	31865546	        37.35 ns/op	  26.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	32355098	        38.35 ns/op	  26.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	30554328	        39.24 ns/op	  25.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	30607844	        39.08 ns/op	  25.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeLabelName/http_requests_total-2         	31530406	        39.13 ns/op	  25.55 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	24.746s

Result 1 parsed
Benchmark run succesful
36 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsTwoSourcesBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsTwoSourcesBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  160611	      7785 ns/op	2104.60 MB/s	    1413 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  152127	      7728 ns/op	2120.10 MB/s	    1414 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  161025	      7665 ns/op	2137.40 MB/s	    1413 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  155248	      7678 ns/op	2133.87 MB/s	    1414 B/op	      14 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesBestCase-2   	  160258	      7842 ns/op	2089.15 MB/s	    1413 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.886s

Result 1 parsed
Benchmark run succesful
37 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkRowsDiff
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsDiff$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsDiff-2   	   34118	     35096 ns/op	 188.77 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   34305	     35267 ns/op	 187.85 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   33681	     35441 ns/op	 186.93 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   34082	     35396 ns/op	 187.17 MB/s	     560 B/op	       4 allocs/op
BenchmarkRowsDiff-2   	   33867	     35171 ns/op	 188.37 MB/s	     560 B/op	       4 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	7.802s

Result 1 parsed
Benchmark run succesful
38 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasMiss
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetHasMiss/items_1000-2         	  123165	      9703 ns/op	 103.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  123081	      9702 ns/op	 103.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  124238	      9710 ns/op	 102.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  122510	      9726 ns/op	 102.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000-2         	  123499	      9719 ns/op	 102.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   13915	    110401 ns/op	  90.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12370	    110480 ns/op	  90.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12366	     96841 ns/op	 103.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12361	     97115 ns/op	 102.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000-2        	   12298	    110443 ns/op	  90.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1711	    617562 ns/op	 161.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1826	    716530 ns/op	 139.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1858	    733667 ns/op	 136.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1965	    727435 ns/op	 137.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_100000-2       	    1617	    886169 ns/op	 112.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     194	   6407562 ns/op	 156.07 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     190	   6238698 ns/op	 160.29 MB/s	       3 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     189	   6509230 ns/op	 153.63 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     186	   6304761 ns/op	 158.61 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_1000000-2      	     188	   6166720 ns/op	 162.16 MB/s	       1 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60849233 ns/op	 164.34 MB/s	      11 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60692478 ns/op	 164.77 MB/s	      11 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  62647051 ns/op	 159.62 MB/s	      11 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  61302317 ns/op	 163.13 MB/s	      35 B/op	       0 allocs/op
BenchmarkSetHasMiss/items_10000000-2     	      19	  60792973 ns/op	 164.49 MB/s	      11 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	41.095s

Result 1 parsed
Benchmark run succesful
39 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkSanitizeMetricName
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSanitizeMetricName$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSanitizeMetricName/#00-2         	37917705	        31.22 ns/op	  32.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	37275696	        31.39 ns/op	  31.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	38422524	        31.65 ns/op	  31.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	38643139	        31.70 ns/op	  31.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/#00-2         	37673336	        31.30 ns/op	  31.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	35806089	        33.53 ns/op	  29.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	35244268	        33.39 ns/op	  29.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	35829621	        33.37 ns/op	  29.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	34061745	        34.78 ns/op	  28.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-2         	35997914	        33.27 ns/op	  30.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	34795528	        34.16 ns/op	  29.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	35146508	        34.16 ns/op	  29.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	34288537	        34.19 ns/op	  29.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	35056394	        34.23 ns/op	  29.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/foo-bar-baz-2 	35035333	        34.44 ns/op	  29.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31863489	        37.36 ns/op	  26.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31525441	        37.34 ns/op	  26.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31983265	        37.43 ns/op	  26.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	31785291	        37.45 ns/op	  26.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkSanitizeMetricName/http_requests_total-2         	32057578	        37.51 ns/op	  26.66 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	24.622s

Result 1 parsed
Benchmark run succesful
40 / 193 done
### Execute Benchmark: /lib/promrelabel/if_expression_timing_test.go::BenchmarkIfExpression
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIfExpression$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIfExpression/equal_label:_last-2         	 2596411	       465.2 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2571589	       462.2 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2602809	       465.9 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2596815	       465.9 ns/op
BenchmarkIfExpression/equal_label:_last-2         	 2580496	       465.0 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 4986961	       238.9 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5038154	       240.6 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 4964767	       243.0 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 5010331	       237.7 ns/op
BenchmarkIfExpression/equal_label:_middle-2       	 4902813	       240.9 ns/op
BenchmarkIfExpression/equal_label:_first-2        	65706788	        18.33 ns/op
BenchmarkIfExpression/equal_label:_first-2        	64546316	        18.37 ns/op
BenchmarkIfExpression/equal_label:_first-2        	65894898	        18.39 ns/op
BenchmarkIfExpression/equal_label:_first-2        	65377014	        19.68 ns/op
BenchmarkIfExpression/equal_label:_first-2        	64139793	        18.29 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9236035	       130.0 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9180108	       130.3 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9236474	       130.0 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9234970	       130.5 ns/op
BenchmarkIfExpression/equal___name__:_last-2      	 9182736	       130.0 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	15954408	        74.49 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16088289	        74.21 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16048194	        74.47 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	16169950	        74.51 ns/op
BenchmarkIfExpression/equal___name__:_middle-2    	15770535	        74.48 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	66265326	        15.24 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	78525232	        15.40 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	69780781	        15.29 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	79209552	        15.27 ns/op
BenchmarkIfExpression/equal___name__:_first-2     	78496323	        16.63 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	40.684s

Result 1 parsed
Benchmark run succesful
41 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheSimpleParallel
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheSimpleParallel$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2976769	       401.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 3005048	       399.1 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 3005118	       399.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 3008337	       404.3 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimpleParallel-2   	 2986017	       400.7 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.067s

Result 1 parsed
Benchmark run succesful
42 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20667547	        57.55 ns/op	  17.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20856640	        57.68 ns/op	  17.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20725162	        57.55 ns/op	  17.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20767143	        57.79 ns/op	  17.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchUnoptimized-2   	20761550	        57.76 ns/op	  17.31 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.297s

Result 1 parsed
Benchmark run succesful
43 / 193 done
### Execute Benchmark: /lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePhrase
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePhrase$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePhrase$]
/lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePhrase timed out after 10s
Benchmark run succesful
44 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheComplex
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheComplex$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheComplex-2   	 1474844	       804.2 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1487427	       806.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1488048	       807.7 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1485661	       808.4 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheComplex-2   	 1487919	       804.9 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	10.103s

Result 1 parsed
Benchmark run succesful
45 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta_timing_test.go::BenchmarkMarshalInt64NearestDelta
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64NearestDelta$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18375	     65693 ns/op	 124.70 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18331	     65288 ns/op	 125.47 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18386	     65622 ns/op	 124.84 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18206	     65365 ns/op	 125.33 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_4-2         	   18358	     65166 ns/op	 125.71 MB/s	       3 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42631	     28141 ns/op	 291.11 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42590	     28135 ns/op	 291.17 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42780	     28171 ns/op	 290.79 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42691	     28171 ns/op	 290.79 MB/s	       5 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta/precisionBits_64-2        	   42766	     28182 ns/op	 290.68 MB/s	       5 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	16.767s

Result 1 parsed
Benchmark run succesful
46 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkAppendFloatToDecimal
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendFloatToDecimal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1640	    732116 ns/op	  11.19 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1603	    730390 ns/op	  11.22 MB/s	      82 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1628	    726484 ns/op	  11.28 MB/s	      80 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1621	    732683 ns/op	  11.18 MB/s	      81 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/RealFloat-2         	    1622	    729847 ns/op	  11.22 MB/s	      81 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5899	    201140 ns/op	  40.73 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5926	    201581 ns/op	  40.64 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5964	    201686 ns/op	  40.62 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5938	    201822 ns/op	  40.59 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Integers-2          	    5950	    201722 ns/op	  40.61 MB/s	      22 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  485178	      2441 ns/op	3355.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  494312	      2455 ns/op	3336.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  504121	      2442 ns/op	3355.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  497083	      2435 ns/op	3364.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Zeros-2             	  489405	      2470 ns/op	3316.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  364918	      3278 ns/op	2498.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  375919	      3242 ns/op	2526.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  370356	      3232 ns/op	2534.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  371884	      3223 ns/op	2542.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendFloatToDecimal/Ones-2              	  373498	      3272 ns/op	2503.98 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	24.790s

Result 1 parsed
Benchmark run succesful
47 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderBlocksWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderBlocksWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderBlocksWorstCase-2   	      99	  12119402 ns/op	   8.25 MB/s	   41341 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12115378 ns/op	   8.25 MB/s	   41268 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12100256 ns/op	   8.26 MB/s	   41376 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12137330 ns/op	   8.24 MB/s	   41370 B/op	      14 allocs/op
BenchmarkBlockStreamReaderBlocksWorstCase-2   	     100	  12175473 ns/op	   8.21 MB/s	   41370 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.448s

Result 1 parsed
Benchmark run succesful
48 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkCommonPrefixLen
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCommonPrefixLen$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCommonPrefixLen$]
/lib/mergeset/encoding_timing_test.go::BenchmarkCommonPrefixLen timed out after 10s
Benchmark run succesful
49 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	148503939	         8.120 ns/op	 123.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	146557107	         8.274 ns/op	 120.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	145760178	         8.220 ns/op	 121.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	148494944	         8.139 ns/op	 122.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchOptimized-2   	149350353	         8.093 ns/op	 123.57 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.173s

Result 1 parsed
Benchmark run succesful
50 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterBlocksWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterBlocksWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      46	  23829662 ns/op	   4.20 MB/s	 6587012 B/op	   21743 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      42	  24125688 ns/op	   4.14 MB/s	 7214340 B/op	   23814 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      50	  22926208 ns/op	   4.36 MB/s	 6060045 B/op	   20003 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      48	  22540692 ns/op	   4.44 MB/s	 6312541 B/op	   20837 allocs/op
BenchmarkBlockStreamWriterBlocksWorstCase-2   	      49	  22805884 ns/op	   4.38 MB/s	 6183719 B/op	   20412 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	15.115s

Result 1 parsed
Benchmark run succesful
51 / 193 done
### Execute Benchmark: /lib/prompb/prompb_timing_test.go::BenchmarkWriteRequestUnmarshalProtobuf
Changing directory to dir1: /home/benchUser/other/lib/prompb
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkWriteRequestUnmarshalProtobuf$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/prompb
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkWriteRequestUnmarshalProtobuf-2   	     292	   3989303 ns/op	   2.51 MB/s	  125385 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     296	   3951791 ns/op	   2.53 MB/s	  123692 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     295	   4003108 ns/op	   2.50 MB/s	  124110 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     308	   4021868 ns/op	   2.49 MB/s	  118872 B/op	       0 allocs/op
BenchmarkWriteRequestUnmarshalProtobuf-2   	     288	   4107832 ns/op	   2.43 MB/s	  127127 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/prompb	10.870s

Result 1 parsed
Benchmark run succesful
52 / 193 done
### Execute Benchmark: /lib/protoparser/graphite/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/graphite
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/graphite
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2562194	       471.3 ns/op	 284.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2563476	       470.0 ns/op	 285.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2556451	       470.8 ns/op	 284.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2549568	       473.2 ns/op	 283.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2543724	       473.2 ns/op	 283.17 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/graphite	8.421s

Result 1 parsed
Benchmark run succesful
53 / 193 done
### Execute Benchmark: /lib/regexutil/promregex_timing_test.go::BenchmarkPromRegexMatchString
Changing directory to dir1: /home/benchUser/other/lib/regexutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromRegexMatchString$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromRegexMatchString$]
/lib/regexutil/promregex_timing_test.go::BenchmarkPromRegexMatchString timed out after 10s
Benchmark run succesful
54 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24804	     48390 ns/op	 165.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24864	     48392 ns/op	 165.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24865	     48467 ns/op	 165.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24770	     48448 ns/op	 165.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<6)-1-2         	   24776	     48496 ns/op	 164.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18734	     63529 ns/op	 125.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18876	     63438 ns/op	 126.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18933	     63515 ns/op	 125.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18872	     63493 ns/op	 126.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<13)-1-2        	   18864	     63606 ns/op	 125.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13258	     90710 ns/op	  88.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13240	     90825 ns/op	  88.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13257	     90657 ns/op	  88.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13213	     90982 ns/op	  87.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<27)-1-2        	   13190	     91142 ns/op	  87.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6666	    180057 ns/op	  44.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6688	    179575 ns/op	  44.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6692	    179180 ns/op	  44.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6696	    179064 ns/op	  44.68 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64/up-to-(1<<63)-1-2        	    6645	    179753 ns/op	  44.51 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	34.390s

Result 1 parsed
Benchmark run succesful
55 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64-2   	820296222	         1.427 ns/op	 700.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	844008564	         1.421 ns/op	 703.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	843066252	         1.419 ns/op	 704.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	842075485	         1.420 ns/op	 704.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalInt64-2   	844033723	         1.430 ns/op	 699.12 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.718s

Result 1 parsed
Benchmark run succesful
56 / 193 done
### Execute Benchmark: /lib/storage/tag_filters_timing_test.go::BenchmarkTagFilterMatchSuffix
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTagFilterMatchSuffix$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTagFilterMatchSuffix$]
/lib/storage/tag_filters_timing_test.go::BenchmarkTagFilterMatchSuffix timed out after 10s
Benchmark run succesful
57 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddReuse
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddReuse$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddReuse/items_1000-2         	   46656	     25603 ns/op	  39.06 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46770	     25758 ns/op	  38.82 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46461	     25634 ns/op	  39.01 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   46437	     25674 ns/op	  38.95 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_1000-2         	   47053	     25645 ns/op	  38.99 MB/s	     114 B/op	       4 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4255	    273293 ns/op	  36.59 MB/s	    2315 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4231	    272669 ns/op	  36.67 MB/s	    2319 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4287	    274013 ns/op	  36.49 MB/s	    2310 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4297	    272558 ns/op	  36.69 MB/s	    2320 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_10000-2        	    4194	    273669 ns/op	  36.54 MB/s	    2299 B/op	       9 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     318	   3865008 ns/op	  25.87 MB/s	  214367 B/op	    1674 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     316	   3793929 ns/op	  26.36 MB/s	  214423 B/op	    1674 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     308	   3842640 ns/op	  26.02 MB/s	  214881 B/op	    1677 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     315	   3811593 ns/op	  26.24 MB/s	  214709 B/op	    1677 allocs/op
BenchmarkMapAddReuse/items_100000-2       	     313	   3823223 ns/op	  26.16 MB/s	  214477 B/op	    1674 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      12	  88684713 ns/op	  11.28 MB/s	 3868496 B/op	      18 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  88932823 ns/op	  11.24 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      12	  87889261 ns/op	  11.38 MB/s	 3868570 B/op	      18 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  88261735 ns/op	  11.33 MB/s	 3582824 B/op	      17 allocs/op
BenchmarkMapAddReuse/items_1000000-2      	      13	  88759457 ns/op	  11.27 MB/s	 3582859 B/op	      18 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1928082731 ns/op	   5.19 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1271248324 ns/op	   7.87 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1551719249 ns/op	   6.44 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1367096577 ns/op	   7.31 MB/s	361012624 B/op	      41 allocs/op
BenchmarkMapAddReuse/items_10000000-2     	       1	1363701526 ns/op	   7.33 MB/s	361012624 B/op	      41 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.759s

Result 1 parsed
Benchmark run succesful
58 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterRowsBestCase-2   	    4096	    278578 ns/op	 358.97 MB/s	     788 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4200	    278578 ns/op	 358.97 MB/s	     769 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4004	    278203 ns/op	 359.45 MB/s	     806 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4021	    287559 ns/op	 347.75 MB/s	     803 B/op	       0 allocs/op
BenchmarkBlockStreamWriterRowsBestCase-2   	    4070	    281591 ns/op	 355.12 MB/s	     793 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.220s

Result 1 parsed
Benchmark run succesful
59 / 193 done
### Execute Benchmark: /lib/streamaggr/deduplicator_timing_test.go::BenchmarkDeduplicatorPush
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicatorPush$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicatorPush-2   	      64	  18011986 ns/op	   0.56 MB/s	   16734 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      64	  18101471 ns/op	   0.55 MB/s	   16729 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      64	  18211265 ns/op	   0.55 MB/s	   16738 B/op	      22 allocs/op
BenchmarkDeduplicatorPush-2   	      56	  18129395 ns/op	   0.55 MB/s	   75712 B/op	      44 allocs/op
BenchmarkDeduplicatorPush-2   	      56	  18166487 ns/op	   0.55 MB/s	  132311 B/op	      63 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr	8.184s

Result 1 parsed
Benchmark run succesful
60 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCacheGetNoOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCacheGetNoOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCacheGetNoOverflow-2   	    4357	    282166 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4386	    278217 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4191	    279413 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4014	    280933 ns/op	       0 B/op	       0 allocs/op
BenchmarkCacheGetNoOverflow-2   	    4129	    283057 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.125s

Result 1 parsed
Benchmark run succesful
61 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionPartialOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionPartialOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionPartialOverlap/items_1000-2         	  139604	      8130 ns/op	 246.00 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  152161	      8470 ns/op	 236.13 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  154146	      8176 ns/op	 244.61 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  157999	      8426 ns/op	 237.36 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_1000-2         	  141375	      8999 ns/op	 222.24 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  130759	      8737 ns/op	2289.09 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  129584	      8947 ns/op	2235.42 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  141668	      9225 ns/op	2168.12 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  123248	      9038 ns/op	2212.99 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_10000-2        	  139387	      8911 ns/op	2244.40 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   47917	     27476 ns/op	7279.08 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   44823	     26809 ns/op	7460.20 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   45417	     26162 ns/op	7644.53 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   44971	     27151 ns/op	7366.15 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_100000-2       	   44500	     29033 ns/op	6888.82 MB/s	   50392 B/op	      21 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5120	    222664 ns/op	8982.14 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5534	    218819 ns/op	9139.96 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5299	    220176 ns/op	9083.64 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5618	    222201 ns/op	9000.85 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_1000000-2      	    5691	    220764 ns/op	9059.45 MB/s	  400704 B/op	     108 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     508	   2417715 ns/op	8272.27 MB/s	 3837441 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     498	   2386595 ns/op	8380.14 MB/s	 3837441 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     511	   2383906 ns/op	8389.59 MB/s	 3837442 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     488	   2382788 ns/op	8393.53 MB/s	 3837442 B/op	     932 allocs/op
BenchmarkUnionPartialOverlap/items_10000000-2     	     518	   2361160 ns/op	8470.41 MB/s	 3837442 B/op	     932 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.277s

Result 1 parsed
Benchmark run succesful
62 / 193 done
### Execute Benchmark: /lib/bytesutil/fast_string_matcher_timing_test.go::BenchmarkFastStringMatcher
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastStringMatcher$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastStringMatcher/#00-2         	37426716	        30.88 ns/op	  32.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	38733132	        31.01 ns/op	  32.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	38558631	        31.25 ns/op	  32.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	38705570	        31.08 ns/op	  32.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/#00-2         	38345698	        30.88 ns/op	  32.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35228707	        33.34 ns/op	  29.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35730879	        33.78 ns/op	  29.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35002137	        34.14 ns/op	  29.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35134284	        34.08 ns/op	  29.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-2         	35303642	        33.42 ns/op	  29.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34962458	        34.25 ns/op	  29.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34518294	        34.10 ns/op	  29.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	34113746	        34.34 ns/op	  29.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	35275416	        34.12 ns/op	  29.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/foo-bar-baz-2 	35178111	        34.32 ns/op	  29.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33052195	        36.17 ns/op	  27.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33177421	        35.91 ns/op	  27.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33098834	        35.87 ns/op	  27.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33133798	        36.38 ns/op	  27.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringMatcher/http_requests_total-2         	33177813	        36.39 ns/op	  27.48 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	24.604s

Result 1 parsed
Benchmark run succesful
63 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutOverflow-2   	    2889	    395510 ns/op	       9 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2944	    400987 ns/op	       7 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2884	    402545 ns/op	       9 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2911	    403840 ns/op	       8 B/op	       0 allocs/op
BenchmarkCachePutOverflow-2   	    2931	    400832 ns/op	       9 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.169s

Result 1 parsed
Benchmark run succesful
64 / 193 done
### Execute Benchmark: /app/vlinsert/loki/loki_json_timing_test.go::BenchmarkParseJSONRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/loki
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseJSONRequest$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseJSONRequest$]
/app/vlinsert/loki/loki_json_timing_test.go::BenchmarkParseJSONRequest timed out after 10s
Benchmark run succesful
65 / 193 done
### Execute Benchmark: /lib/storage/dedup_timing_test.go::BenchmarkDeduplicateSamples
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicateSamples$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46189	     25688 ns/op	 318.91 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46651	     25725 ns/op	 318.44 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46614	     25943 ns/op	 315.76 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46225	     26100 ns/op	 313.87 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=3s-2         	   46578	     25676 ns/op	 319.06 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   50022	     23509 ns/op	 348.47 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   50774	     23793 ns/op	 344.30 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51061	     23892 ns/op	 342.88 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   49812	     23414 ns/op	 349.88 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=4s-2         	   51499	     23501 ns/op	 348.58 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   61161	     19361 ns/op	 423.12 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   62174	     19290 ns/op	 424.67 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   59144	     20151 ns/op	 406.54 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   61713	     19359 ns/op	 423.16 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamples/minScrapeInterval=10s-2        	   61857	     19328 ns/op	 423.83 MB/s	       4 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	21.947s

Result 1 parsed
Benchmark run succesful
66 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsFourSourcesWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsFourSourcesWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     360	   3322301 ns/op	   4.93 MB/s	    8087 B/op	      62 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     352	   3259583 ns/op	   5.03 MB/s	    7767 B/op	      63 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     338	   3282811 ns/op	   4.99 MB/s	    8260 B/op	      64 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     351	   3256242 ns/op	   5.03 MB/s	    7774 B/op	      63 allocs/op
BenchmarkMergeBlockStreamsFourSourcesWorstCase-2   	     354	   3354943 ns/op	   4.88 MB/s	    7913 B/op	      63 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	7.887s

Result 1 parsed
Benchmark run succesful
67 / 193 done
### Execute Benchmark: /lib/stringsutil/less_natural_timing_test.go::BenchmarkLessNatural
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLessNatural$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLessNatural/distinct_string_prefixes-2         	15205148	        78.50 ns/op	 165.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15167592	        78.54 ns/op	 165.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15207069	        78.48 ns/op	 165.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15343213	        78.53 ns/op	 165.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_string_prefixes-2         	15372709	        78.69 ns/op	 165.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7588515	       157.9 ns/op	  82.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7589146	       158.4 ns/op	  82.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7614397	       158.1 ns/op	  82.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7606888	       157.8 ns/op	  82.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/distinct_numeric_values-2          	 7583691	       157.3 ns/op	  82.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9781892	       122.9 ns/op	 105.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9798416	       123.0 ns/op	 105.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9719686	       123.8 ns/op	 105.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9740942	       123.2 ns/op	 105.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_string_suffixes-2         	 9774246	       123.3 ns/op	 105.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5924780	       203.1 ns/op	  63.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5871202	       202.6 ns/op	  64.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5906444	       203.2 ns/op	  63.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5929399	       202.8 ns/op	  64.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_prefixes_distinct_numeric_suffixes-2        	 5913696	       202.9 ns/op	  64.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7290848	       164.9 ns/op	  78.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7258485	       165.1 ns/op	  78.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7247350	       164.8 ns/op	  78.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7291549	       165.0 ns/op	  78.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_string_values-2                                    	 7293660	       164.6 ns/op	  78.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5065012	       235.9 ns/op	  55.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5103948	       235.7 ns/op	  55.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5050370	       236.8 ns/op	  54.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5003107	       237.9 ns/op	  54.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_prefixes-2                                 	 5067247	       237.0 ns/op	  54.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4015988	       294.7 ns/op	  44.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4061527	       296.5 ns/op	  43.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4060020	       295.0 ns/op	  44.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4063412	       295.6 ns/op	  43.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkLessNatural/common_numeric_values-2                                   	 4065458	       295.7 ns/op	  43.97 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	48.414s

Result 1 parsed
Benchmark run succesful
68 / 193 done
### Execute Benchmark: /lib/stringsutil/stringsutil_timing_test.go::BenchmarkAppendLowercase
Changing directory to dir1: /home/benchUser/other/lib/stringsutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendLowercase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23644641	        50.20 ns/op	 876.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	23806106	        50.10 ns/op	 878.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	24235660	        50.10 ns/op	 878.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	24069211	        50.01 ns/op	 879.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-lowercase-2         	24046587	        49.83 ns/op	 883.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23660754	        50.76 ns/op	 866.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23529627	        50.81 ns/op	 866.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23671470	        50.89 ns/op	 864.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23273725	        50.97 ns/op	 863.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-some-uppercase-2        	23475217	        50.87 ns/op	 864.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22666081	        52.96 ns/op	 830.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22912977	        52.80 ns/op	 833.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22607809	        52.67 ns/op	 835.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22735749	        52.81 ns/op	 833.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/ascii-all-uppercase-2         	22811529	        53.30 ns/op	 825.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1099 ns/op	  69.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1096 ns/op	  69.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1093 ns/op	  69.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1096 ns/op	  69.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-lowercase-2       	 1000000	      1089 ns/op	  69.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1051 ns/op	  72.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1048 ns/op	  72.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1050 ns/op	  72.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1053 ns/op	  72.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-some-uppercase-2      	 1000000	      1052 ns/op	  72.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1389152	       864.6 ns/op	  87.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1389818	       865.0 ns/op	  87.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1388398	       864.1 ns/op	  87.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1387814	       866.1 ns/op	  87.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendLowercase/unicode-all-uppercase-2       	 1386160	       866.3 ns/op	  87.73 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/stringsutil	40.039s

Result 1 parsed
Benchmark run succesful
69 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapIsSetBit
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapIsSetBit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    8948	    130195 ns/op	 503.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9046	    129996 ns/op	 504.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9147	    129922 ns/op	 504.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9236	    129447 ns/op	 506.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/no-zero-bits-2         	    9240	    130103 ns/op	 503.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    9014	    129991 ns/op	 504.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8934	    130434 ns/op	 502.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8982	    129992 ns/op	 504.15 MB/s	       1 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8960	    130271 ns/op	 503.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/half-zero-bits-2       	    8925	    129930 ns/op	 504.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    9030	    130487 ns/op	 502.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    9014	    130132 ns/op	 503.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    8924	    130078 ns/op	 503.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    9068	    130168 ns/op	 503.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapIsSetBit/one-set-bit-2          	    9038	    129968 ns/op	 504.25 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	17.863s

Result 1 parsed
Benchmark run succesful
70 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseFloat64
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseFloat64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseFloat64-2   	 7214427	       168.2 ns/op	  29.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7206062	       166.8 ns/op	  29.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7175800	       167.6 ns/op	  29.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7205239	       166.4 ns/op	  30.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseFloat64-2   	 7167260	       166.8 ns/op	  29.97 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.880s

Result 1 parsed
Benchmark run succesful
71 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalDeltaConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalDeltaConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalDeltaConstArray-2   	  218131	      5451 ns/op	1502.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  219350	      5443 ns/op	1505.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  221820	      5438 ns/op	1506.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  219375	      5461 ns/op	1499.99 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalDeltaConstArray-2   	  221323	      5445 ns/op	1504.39 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.296s

Result 1 parsed
Benchmark run succesful
72 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkAddMulti
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAddMulti$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAddMulti/items_1-2         	 3965796	       304.3 ns/op	   3.29 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3938994	       305.4 ns/op	   3.27 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3881544	       305.5 ns/op	   3.27 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3749864	       310.7 ns/op	   3.22 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_1-2         	 3891901	       310.3 ns/op	   3.22 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2992130	       408.2 ns/op	  24.50 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2943465	       403.9 ns/op	  24.76 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2945840	       409.8 ns/op	  24.40 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2928013	       412.9 ns/op	  24.22 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_10-2        	 2944826	       411.2 ns/op	  24.32 MB/s	     240 B/op	       4 allocs/op
BenchmarkAddMulti/items_100-2       	  366736	      3267 ns/op	  30.61 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  348801	      3380 ns/op	  29.58 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  332636	      3470 ns/op	  28.82 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  341526	      3411 ns/op	  29.32 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100-2       	  327430	      3463 ns/op	  28.88 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  198438	      6263 ns/op	 159.66 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  180733	      6259 ns/op	 159.76 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  184125	      6274 ns/op	 159.39 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  186103	      6329 ns/op	 158.01 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_1000-2      	  197365	      6261 ns/op	 159.71 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33604	     35586 ns/op	 281.01 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33462	     35545 ns/op	 281.33 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33348	     36206 ns/op	 276.20 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33346	     35987 ns/op	 277.88 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_10000-2     	   33284	     36046 ns/op	 277.42 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAddMulti/items_100000-2    	    3426	    347239 ns/op	 287.99 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3313	    344613 ns/op	 290.18 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3351	    343327 ns/op	 291.27 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3476	    343356 ns/op	 291.24 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_100000-2    	    3471	    344665 ns/op	 290.14 MB/s	   25120 B/op	      11 allocs/op
BenchmarkAddMulti/items_1000000-2   	     333	   3471742 ns/op	 288.04 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     342	   3477503 ns/op	 287.56 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     340	   3469352 ns/op	 288.24 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     343	   3463164 ns/op	 288.75 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_1000000-2   	     342	   3489318 ns/op	 286.59 MB/s	  133520 B/op	      41 allocs/op
BenchmarkAddMulti/items_10000000-2  	      32	  35594184 ns/op	 280.94 MB/s	 1278551 B/op	     323 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  35400926 ns/op	 282.48 MB/s	 1278551 B/op	     323 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  35723761 ns/op	 279.93 MB/s	 1278551 B/op	     323 allocs/op
BenchmarkAddMulti/items_10000000-2  	      32	  35050910 ns/op	 285.30 MB/s	 1278551 B/op	     323 allocs/op
BenchmarkAddMulti/items_10000000-2  	      33	  35269708 ns/op	 283.53 MB/s	 1278551 B/op	     323 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	60.387s

Result 1 parsed
Benchmark run succesful
73 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkCalbirateScale
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCalbirateScale$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCalbirateScale-2   	 9927402	       120.5 ns/op	 149.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9932180	       120.6 ns/op	 149.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9880840	       120.3 ns/op	 149.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9961702	       120.8 ns/op	 148.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkCalbirateScale-2   	 9946827	       121.7 ns/op	 147.92 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	6.624s

Result 1 parsed
Benchmark run succesful
74 / 193 done
### Execute Benchmark: /lib/promutils/labelscompressor_timing_test.go::BenchmarkLabelsCompressorCompress
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsCompressorCompress$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsCompressorCompress-2   	   13902	     86017 ns/op	   1.16 MB/s	      33 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13972	     86457 ns/op	   1.16 MB/s	      32 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13917	     84381 ns/op	   1.19 MB/s	      28 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13842	     85852 ns/op	   1.16 MB/s	      33 B/op	       0 allocs/op
BenchmarkLabelsCompressorCompress-2   	   13878	     85706 ns/op	   1.17 MB/s	      33 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	10.322s

Result 1 parsed
Benchmark run succesful
75 / 193 done
### Execute Benchmark: /lib/promutils/labels_timing_test.go::BenchmarkLabelsInternStrings
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsInternStrings$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsInternStrings-2   	13701668	        87.05 ns/op	  11.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13773350	        86.88 ns/op	  11.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13603476	        87.70 ns/op	  11.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13744244	        87.66 ns/op	  11.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkLabelsInternStrings-2   	13698283	        87.48 ns/op	  11.43 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	6.446s

Result 1 parsed
Benchmark run succesful
76 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUint64-2   	942667089	         1.258 ns/op	 794.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	948912121	         1.258 ns/op	 794.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	954312920	         1.257 ns/op	 795.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	953688049	         1.258 ns/op	 795.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint64-2   	949924642	         1.259 ns/op	 794.13 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.650s

Result 1 parsed
Benchmark run succesful
77 / 193 done
### Execute Benchmark: /lib/promutils/labelscompressor_timing_test.go::BenchmarkLabelsCompressorDecompress
Changing directory to dir1: /home/benchUser/other/lib/promutils
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLabelsCompressorDecompress$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLabelsCompressorDecompress-2   	  100462	     11995 ns/op	   8.34 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   99696	     12006 ns/op	   8.33 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   98863	     11883 ns/op	   8.42 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   98535	     11916 ns/op	   8.39 MB/s	       4 B/op	       0 allocs/op
BenchmarkLabelsCompressorDecompress-2   	   98349	     12134 ns/op	   8.24 MB/s	       4 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promutils	6.592s

Result 1 parsed
Benchmark run succesful
78 / 193 done
### Execute Benchmark: /lib/storage/tag_filters_timing_test.go::BenchmarkOptimizedReMatchCost
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkOptimizedReMatchCost$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkOptimizedReMatchCost$]
/lib/storage/tag_filters_timing_test.go::BenchmarkOptimizedReMatchCost timed out after 10s
Benchmark run succesful
79 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalConstArray-2   	  191682	      6237 ns/op	1313.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  193148	      6212 ns/op	1318.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  191521	      6195 ns/op	1322.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  194358	      6214 ns/op	1318.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalConstArray-2   	  193153	      6207 ns/op	1319.81 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.327s

Result 1 parsed
Benchmark run succesful
80 / 193 done
### Execute Benchmark: /lib/persistentqueue/fastqueue_timing_test.go::BenchmarkFastQueueThroughputSerial
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastQueueThroughputSerial$]
Benchmark 1 done: 2025-02-08T12:27:45.354Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T12:27:45.357Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:45.360Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T12:27:45.372Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:45.375Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:45.387Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:45.400Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:45.412Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:45.855Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:45.868Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:47.023Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  626847	      1862 ns/op	   5.37 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T12:27:47.035Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:47.039Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:47.052Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:47.056Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:47.068Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:47.082Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:47.093Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:47.598Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:47.611Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:48.799Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  631359	      1901 ns/op	   5.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T12:27:48.811Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:48.814Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:48.828Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:48.831Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:48.843Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:48.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:48.869Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:49.368Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:49.380Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:50.544Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  632053	      1860 ns/op	   5.38 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T12:27:50.556Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:50.559Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:50.570Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:50.573Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:50.586Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:50.605Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:50.616Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:51.130Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:51.142Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:52.324Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  634512	      1880 ns/op	   5.32 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1-2         	2025-02-08T12:27:52.337Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:52.341Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:52.353Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:52.356Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:52.369Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:52.383Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:52.395Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:52.881Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
2025-02-08T12:27:52.892Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:54.092Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1"
  635980	      1904 ns/op	   5.25 MB/s	       1 B/op	       0 allocs/op
2025-02-08T12:27:54.105Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:54.108Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T12:27:54.121Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:54.124Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:54.135Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:54.150Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:54.163Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:54.680Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:54.691Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:55.866Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  635463	      1866 ns/op	  53.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T12:27:55.877Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:55.880Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:55.892Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:55.896Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:55.908Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:55.924Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:55.935Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:56.493Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:56.503Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:57.676Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  634363	      1864 ns/op	  53.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T12:27:57.688Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:57.691Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:57.704Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:57.707Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:57.718Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:57.734Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:57.747Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:58.279Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:58.292Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:59.466Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  630620	      1882 ns/op	  53.14 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T12:27:59.477Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:59.480Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:59.490Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:59.494Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:59.505Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:27:59.525Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:27:59.536Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:00.144Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:28:00.156Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:01.321Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  630168	      1866 ns/op	  53.58 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10-2        	2025-02-08T12:28:01.333Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:01.336Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:28:01.348Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:01.351Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:28:01.363Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:01.379Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:28:01.389Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:01.940Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
2025-02-08T12:28:01.951Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:03.106Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10"
  630357	      1849 ns/op	  54.08 MB/s	       1 B/op	       0 allocs/op
2025-02-08T12:28:03.117Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:03.120Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T12:28:03.132Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:03.135Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:03.146Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:03.164Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:03.175Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:03.767Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:03.780Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:04.951Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  613651	      1927 ns/op	 518.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T12:28:04.963Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:04.966Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:04.987Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:04.990Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:05.001Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:05.017Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:05.029Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:05.590Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:05.601Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:06.811Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  609640	      2003 ns/op	 499.29 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T12:28:06.826Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:06.830Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:06.842Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:06.846Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:06.860Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:06.874Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:06.886Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:07.323Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:07.336Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:08.492Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  603685	      1936 ns/op	 516.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T12:28:08.506Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:08.510Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:08.523Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:08.526Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:08.539Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:08.554Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:08.566Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:09.027Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:09.040Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:10.206Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  603366	      1953 ns/op	 512.08 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100-2       	2025-02-08T12:28:10.221Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:10.225Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:10.237Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:10.241Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:10.252Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:10.266Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:10.278Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:10.747Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
2025-02-08T12:28:10.758Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:11.930Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100"
  611504	      1934 ns/op	 517.13 MB/s	       0 B/op	       0 allocs/op
2025-02-08T12:28:11.941Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:11.944Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T12:28:11.956Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:11.960Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:11.971Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:11.990Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:12.003Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:12.620Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:12.632Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:13.811Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  532501	      2235 ns/op	4473.58 MB/s	       2 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T12:28:13.824Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:13.828Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:13.842Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:13.845Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:13.857Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:13.872Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:13.886Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:14.409Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:14.422Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:15.582Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  528340	      2219 ns/op	4507.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T12:28:15.593Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:15.596Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:15.609Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:15.612Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:15.624Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:15.643Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:15.655Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:16.257Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:16.268Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:17.437Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  533295	      2212 ns/op	4521.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T12:28:17.450Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:17.453Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:17.464Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:17.468Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:17.479Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:17.497Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:17.508Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:18.098Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:18.112Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:19.294Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  536016	      2230 ns/op	4484.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000-2      	2025-02-08T12:28:19.306Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:19.310Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:19.322Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:19.326Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:19.337Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:19.355Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:19.368Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:19.924Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
2025-02-08T12:28:19.936Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:21.116Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000"
  533192	      2235 ns/op	4474.07 MB/s	       2 B/op	       0 allocs/op
2025-02-08T12:28:21.129Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:21.133Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T12:28:21.145Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:21.149Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:21.162Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:21.201Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:21.215Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:22.030Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:22.043Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:23.227Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  190606	      6275 ns/op	15937.29 MB/s	       5 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T12:28:23.238Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:23.241Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:23.253Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:23.257Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:23.268Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:23.316Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:23.329Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:24.210Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:24.221Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:25.406Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  189939	      6295 ns/op	15884.46 MB/s	       5 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T12:28:25.418Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:25.421Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:25.433Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:25.437Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:25.448Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:25.492Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:25.503Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:26.391Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:26.403Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:27.598Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  190371	      6336 ns/op	15783.92 MB/s	       5 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T12:28:27.609Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:27.612Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:27.623Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:27.627Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:27.639Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:27.688Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:27.699Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:28.594Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:28.605Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:29.784Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  189222	      6281 ns/op	15920.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-10000-2     	2025-02-08T12:28:29.795Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:29.798Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:29.810Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:29.814Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:29.828Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:29.876Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:29.889Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:30.714Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
2025-02-08T12:28:30.726Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-10000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:31.929Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-10000"
  190521	      6372 ns/op	15693.78 MB/s	       0 B/op	       0 allocs/op
2025-02-08T12:28:31.942Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:31.947Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T12:28:31.959Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:31.969Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:31.980Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:32.285Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:32.298Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:33.436Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14636	     78647 ns/op	12715.12 MB/s	      73 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T12:28:33.449Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:33.452Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:33.463Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:33.473Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:33.484Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:33.837Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:33.849Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:35.004Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   15045	     77576 ns/op	12890.66 MB/s	      71 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T12:28:35.016Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:35.020Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:35.033Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:35.044Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:35.056Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:35.369Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:35.381Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:36.544Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   15079	     77924 ns/op	12833.09 MB/s	       8 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T12:28:36.559Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:36.564Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:36.577Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:36.587Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:36.597Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:36.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:36.871Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:38.005Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14637	     78372 ns/op	12759.70 MB/s	      79 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-100000-2    	2025-02-08T12:28:38.018Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:38.022Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:38.036Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:38.046Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:38.059Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:38.364Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
2025-02-08T12:28:38.375Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-100000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:39.508Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-100000"
   14391	     79465 ns/op	12584.14 MB/s	      73 B/op	       0 allocs/op
2025-02-08T12:28:39.520Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:39.532Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T12:28:39.544Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:39.652Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:39.663Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:40.684Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     492	   2096610 ns/op	4769.60 MB/s	    2078 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T12:28:40.696Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:40.702Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:40.714Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:40.860Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:40.872Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:41.901Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     516	   2015600 ns/op	4961.30 MB/s	    5966 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T12:28:41.914Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:41.921Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:41.933Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:42.067Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:42.080Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:43.063Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:43.076Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:44.305Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     615	   2018411 ns/op	4954.39 MB/s	      38 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T12:28:44.319Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:44.326Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:44.339Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:44.464Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:44.476Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:45.478Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     507	   1997976 ns/op	5005.07 MB/s	      29 B/op	       0 allocs/op
BenchmarkFastQueueThroughputSerial/block-size-1000000-2   	2025-02-08T12:28:45.490Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:45.497Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:45.511Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:45.644Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
2025-02-08T12:28:45.656Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-serial-1000000" with maxInmemoryBlocks=20, it contains 0 pending bytes, persistence is enabled
2025-02-08T12:28:46.684Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-serial-1000000"
     514	   2021363 ns/op	4947.16 MB/s	    9929 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	61.358s

Result 1 parsed
Benchmark run succesful
81 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkIndexDBAddTSIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIndexDBAddTSIDs$]
Benchmark 1 done: 2025-02-08T12:28:48.239Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIndexDBAddTSIDs-2   	     504	  11523635 ns/op	   0.09 MB/s	 1698439 B/op	      62 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     549	  14680612 ns/op	   0.07 MB/s	 1983899 B/op	      70 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     448	  12680129 ns/op	   0.08 MB/s	 1826071 B/op	      65 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     528	  13605574 ns/op	   0.07 MB/s	 1871674 B/op	      65 allocs/op
BenchmarkIndexDBAddTSIDs-2   	     482	  12480970 ns/op	   0.08 MB/s	 1751320 B/op	      65 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	57.186s

Result 1 parsed
Benchmark run succesful
82 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarInt64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarInt64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143838	      8393 ns/op	 953.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  141942	      8406 ns/op	 951.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  142569	      8369 ns/op	 955.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  143002	      8355 ns/op	 957.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<6)-1-2         	  142534	      8369 ns/op	 955.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68757	     17465 ns/op	 458.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68706	     17471 ns/op	 457.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68835	     17452 ns/op	 458.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   67698	     17536 ns/op	 456.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<13)-1-2        	   68649	     17456 ns/op	 458.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31498	     39432 ns/op	 202.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   30847	     38115 ns/op	 209.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31611	     38248 ns/op	 209.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31518	     38139 ns/op	 209.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<27)-1-2        	   31242	     38234 ns/op	 209.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14637	     82969 ns/op	  96.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14580	     82617 ns/op	  96.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14526	     82142 ns/op	  97.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14653	     81997 ns/op	  97.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarInt64s/up-to-(1<<63)-1-2        	   14598	     82990 ns/op	  96.40 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	31.488s

Result 1 parsed
Benchmark run succesful
83 / 193 done
### Execute Benchmark: /lib/logstorage/encoding_timing_test.go::BenchmarkMarshalStringsBlock
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalStringsBlock$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalStringsBlock-2   	   80538	     13561 ns/op	 246.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   76587	     13680 ns/op	 244.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   81526	     13923 ns/op	 240.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   87084	     14130 ns/op	 236.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalStringsBlock-2   	   75463	     13432 ns/op	 249.25 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.303s

Result 1 parsed
Benchmark run succesful
84 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMatchOptimized-2   	207805778	         5.699 ns/op	 175.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	210810160	         5.732 ns/op	 174.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	210618217	         5.738 ns/op	 174.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	210422876	         5.705 ns/op	 175.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchOptimized-2   	208925838	         5.703 ns/op	 175.34 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	8.909s

Result 1 parsed
Benchmark run succesful
85 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkIsAutoMetricMiss
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIsAutoMetricMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIsAutoMetricMiss-2   	44812545	        26.05 ns/op	  38.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	46112431	        25.96 ns/op	  38.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	45631760	        25.99 ns/op	  38.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	45920580	        26.00 ns/op	  38.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricMiss-2   	45806889	        25.98 ns/op	  38.49 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.090s

Result 1 parsed
Benchmark run succesful
86 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectNoOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectNoOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectNoOverlap/items_1000-2         	  140530	      7503 ns/op	 266.58 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  126342	      8220 ns/op	 243.30 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  139348	      8411 ns/op	 237.78 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  140115	      8451 ns/op	 236.66 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_1000-2         	  138433	      8722 ns/op	 229.30 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  125643	      8254 ns/op	2423.04 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  141166	      8475 ns/op	2359.82 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  147738	      8897 ns/op	2247.91 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  146956	      8894 ns/op	2248.71 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_10000-2        	  134683	      8572 ns/op	2333.30 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   69476	     18524 ns/op	10796.82 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   59508	     19044 ns/op	10501.83 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   63121	     18444 ns/op	10843.70 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   64725	     18721 ns/op	10683.19 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_100000-2       	   61650	     18893 ns/op	10586.03 MB/s	   42040 B/op	      18 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	    9481	    114604 ns/op	17451.44 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    115536 ns/op	17310.58 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    116636 ns/op	17147.35 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	    9907	    114830 ns/op	17416.99 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_1000000-2      	   10000	    118977 ns/op	16810.03 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1021	   1131379 ns/op	17677.54 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1053	   1138784 ns/op	17562.60 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1122	   1134579 ns/op	17627.68 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1087	   1117512 ns/op	17896.90 MB/s	 2557825 B/op	     622 allocs/op
BenchmarkIntersectNoOverlap/items_10000000-2     	    1119	   1111687 ns/op	17990.68 MB/s	 2557824 B/op	     622 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	32.150s

Result 1 parsed
Benchmark run succesful
87 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	182956222	         6.470 ns/op	 154.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	185082144	         6.493 ns/op	 154.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	184335315	         6.528 ns/op	 153.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	184534612	         6.575 ns/op	 152.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMismatchOptimized-2   	184778614	         6.484 ns/op	 154.24 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.313s

Result 1 parsed
Benchmark run succesful
88 / 193 done
### Execute Benchmark: /lib/logstorage/log_rows_timing_test.go::BenchmarkLogRowsMustAdd
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkLogRowsMustAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkLogRowsMustAdd-2   	   83029	     14236 ns/op	   0.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   85358	     14085 ns/op	   0.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   84570	     14622 ns/op	   0.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   87541	     14028 ns/op	   0.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkLogRowsMustAdd-2   	   81888	     14015 ns/op	   0.36 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.738s

Result 1 parsed
Benchmark run succesful
89 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarUint64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarUint64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  194852	      6081 ns/op	1315.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  197744	      6146 ns/op	1301.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  197316	      6109 ns/op	1309.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  196418	      6056 ns/op	1321.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<7)-1-2         	  197708	      6052 ns/op	1321.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   78684	     15166 ns/op	 527.49 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79645	     15170 ns/op	 527.35 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   78993	     15164 ns/op	 527.56 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   79713	     15124 ns/op	 528.95 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<14)-1-2        	   78528	     15253 ns/op	 524.48 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   48847	     24522 ns/op	 326.23 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49010	     24298 ns/op	 329.25 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49465	     24343 ns/op	 328.64 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49605	     24395 ns/op	 327.94 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<28)-1-2        	   49407	     24269 ns/op	 329.63 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30066	     39734 ns/op	 201.34 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   29988	     39716 ns/op	 201.43 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30198	     39705 ns/op	 201.49 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30379	     39578 ns/op	 202.13 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalVarUint64s/up-to-(1<<64)-1-2        	   30234	     39640 ns/op	 201.82 MB/s	      25 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	28.358s

Result 1 parsed
Benchmark run succesful
90 / 193 done
### Execute Benchmark: /lib/bytesutil/bytesutil_timing_test.go::BenchmarkToUnsafeBytes
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkToUnsafeBytes$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkToUnsafeBytes-2   	  948972	      1234 ns/op	 810.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  964131	      1230 ns/op	 813.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  972024	      1234 ns/op	 810.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  963429	      1237 ns/op	 808.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkToUnsafeBytes-2   	  975884	      1237 ns/op	 808.38 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	6.042s

Result 1 parsed
Benchmark run succesful
91 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsTwoSourcesWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsTwoSourcesWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     568	   2017345 ns/op	   4.06 MB/s	    3879 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     576	   2005604 ns/op	   4.08 MB/s	    5033 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     558	   2033830 ns/op	   4.03 MB/s	    3747 B/op	      36 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     568	   2019013 ns/op	   4.06 MB/s	    3979 B/op	      35 allocs/op
BenchmarkMergeBlockStreamsTwoSourcesWorstCase-2   	     519	   2033677 ns/op	   4.03 MB/s	    4113 B/op	      37 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	7.091s

Result 1 parsed
Benchmark run succesful
92 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkRegexpFilterMatch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexpFilterMatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRegexpFilterMatch-2   	  815817	      1373 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  860401	      1372 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  844004	      1380 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  865898	      1379 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMatch-2   	  858327	      1384 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.293s

Result 1 parsed
Benchmark run succesful
93 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutGetOverflow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutGetOverflow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutGetOverflow-2   	    1448	    851772 ns/op	      14 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1452	    846982 ns/op	      16 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1395	    835550 ns/op	      18 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1428	    832515 ns/op	      17 B/op	       0 allocs/op
BenchmarkCachePutGetOverflow-2   	    1408	    843752 ns/op	      18 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.556s

Result 1 parsed
Benchmark run succesful
94 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddNoAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddNoAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddNoAllocs/items_1000-2         	   41631	     28908 ns/op	  34.59 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41744	     29368 ns/op	  34.05 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41494	     29064 ns/op	  34.41 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   40683	     28970 ns/op	  34.52 MB/s	   21897 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_1000-2         	   41568	     28906 ns/op	  34.60 MB/s	   21896 B/op	       6 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3759	    302077 ns/op	  33.10 MB/s	  182474 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3622	    304165 ns/op	  32.88 MB/s	  182475 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3607	    303401 ns/op	  32.96 MB/s	  182483 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3690	    303186 ns/op	  32.98 MB/s	  182470 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_10000-2        	    3669	    305192 ns/op	  32.77 MB/s	  182484 B/op	      11 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     264	   4437056 ns/op	  22.54 MB/s	 1598398 B/op	    1678 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     272	   4435382 ns/op	  22.55 MB/s	 1598344 B/op	    1677 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     272	   4374057 ns/op	  22.86 MB/s	 1598460 B/op	    1678 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     278	   4398545 ns/op	  22.73 MB/s	 1598233 B/op	    1676 allocs/op
BenchmarkMapAddNoAllocs/items_100000-2       	     272	   4343485 ns/op	  23.02 MB/s	 1598683 B/op	    1681 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      12	  85926350 ns/op	  11.64 MB/s	22437049 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  86747443 ns/op	  11.53 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  85865906 ns/op	  11.65 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  87052112 ns/op	  11.49 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_1000000-2      	      13	  85822060 ns/op	  11.65 MB/s	22437048 B/op	      19 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1417044472 ns/op	   7.06 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1396448345 ns/op	   7.16 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1388055353 ns/op	   7.20 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1363672106 ns/op	   7.33 MB/s	182754680 B/op	      39 allocs/op
BenchmarkMapAddNoAllocs/items_10000000-2     	       1	1365499075 ns/op	   7.32 MB/s	182754680 B/op	      39 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.652s

Result 1 parsed
Benchmark run succesful
95 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta_timing_test.go::BenchmarkUnmarshalInt64NearestDelta
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64NearestDelta$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64NearestDelta-2   	   60970	     19508 ns/op	 419.92 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   60192	     19494 ns/op	 420.24 MB/s	       9 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61221	     19938 ns/op	 410.87 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61128	     19589 ns/op	 418.19 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64NearestDelta-2   	   61660	     19640 ns/op	 417.10 MB/s	       8 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	7.015s

Result 1 parsed
Benchmark run succesful
96 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 9169700	       138.8 ns/op	   7.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 6720319	       163.2 ns/op	   6.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 8289604	       158.0 ns/op	   6.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 7894088	       162.5 ns/op	   6.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchUnoptimized-2   	 6797144	       177.8 ns/op	   5.62 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	7.007s

Result 1 parsed
Benchmark run succesful
97 / 193 done
### Execute Benchmark: /lib/promscrape/scrapework_timing_test.go::BenchmarkIsAutoMetricHit
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIsAutoMetricHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIsAutoMetricHit-2   	37233022	        31.59 ns/op	  31.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	37708059	        31.34 ns/op	  31.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	38223858	        31.25 ns/op	  32.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	37988929	        31.31 ns/op	  31.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkIsAutoMetricHit-2   	37846560	        31.29 ns/op	  31.96 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.111s

Result 1 parsed
Benchmark run succesful
98 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkFromFloat
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFromFloat$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFromFloat/0-2 	395362932	         3.027 ns/op	 330.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	398561883	         3.025 ns/op	 330.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	398011216	         3.017 ns/op	 331.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	396232686	         3.019 ns/op	 331.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/0-2 	396835893	         3.016 ns/op	 331.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151304505	         7.914 ns/op	 126.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151095416	         7.935 ns/op	 126.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151215098	         7.947 ns/op	 125.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151426135	         7.922 ns/op	 126.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1234-2         	151739094	         7.914 ns/op	 126.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151626296	         7.920 ns/op	 126.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151020022	         7.935 ns/op	 126.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151126501	         7.934 ns/op	 126.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151810272	         7.912 ns/op	 126.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2334345e+07-2         	151451014	         7.931 ns/op	 126.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43588299	        27.61 ns/op	  36.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43162575	        27.63 ns/op	  36.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43301895	        27.65 ns/op	  36.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43320109	        27.60 ns/op	  36.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/12343.4344-2            	43638747	        27.67 ns/op	  36.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	77307088	        15.57 ns/op	  64.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	76456300	        15.53 ns/op	  64.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	77466033	        15.59 ns/op	  64.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	77113353	        15.54 ns/op	  64.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.2345678901e+14-2      	76901331	        15.54 ns/op	  64.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24410527	        49.38 ns/op	  20.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24536276	        49.18 ns/op	  20.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24281827	        48.99 ns/op	  20.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24682112	        49.22 ns/op	  20.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkFromFloat/1.23454435e+31-2        	24318817	        48.89 ns/op	  20.45 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	46.059s

Result 1 parsed
Benchmark run succesful
99 / 193 done
### Execute Benchmark: /lib/storage/inmemory_part_timing_test.go::BenchmarkInmemoryPartInitFromRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPartInitFromRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1150	   1059483 ns/op	  94.39 MB/s	     546 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1178	   1047296 ns/op	  95.48 MB/s	     145 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1126	   1031198 ns/op	  96.97 MB/s	     151 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1153	   1025685 ns/op	  97.50 MB/s	     148 B/op	       2 allocs/op
BenchmarkInmemoryPartInitFromRowsBestCase-2   	    1197	   1034389 ns/op	  96.68 MB/s	      34 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.906s

Result 1 parsed
Benchmark run succesful
100 / 193 done
### Execute Benchmark: /lib/bytesutil/internstring_timing_test.go::BenchmarkInternString
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInternString$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkInternString-2   	    2355	    425528 ns/op	  23.50 MB/s	     170 B/op	       8 allocs/op
BenchmarkInternString-2   	    2722	    429478 ns/op	  23.28 MB/s	     147 B/op	       7 allocs/op
BenchmarkInternString-2   	    2737	    427162 ns/op	  23.41 MB/s	     147 B/op	       7 allocs/op
BenchmarkInternString-2   	    2720	    432491 ns/op	  23.12 MB/s	     147 B/op	       7 allocs/op
BenchmarkInternString-2   	    2556	    435407 ns/op	  22.97 MB/s	     157 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	5.905s

Result 1 parsed
Benchmark run succesful
101 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkMarshalUnmarshalMetricIDs
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUnmarshalMetricIDs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	34503385	        33.89 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	36609104	        33.49 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	36023952	        33.45 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	36223368	        33.69 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-0-2         	36105984	        33.66 ns/op	         0 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	  996738	      1132 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	 1000000	      1139 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	  972274	      1172 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	 1000000	      1130 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1-2         	  982232	      1161 ns/op	         0.4706 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  387992	      3123 ns/op	         1.404 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  484076	      2623 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  413145	      2656 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  413931	      2693 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10-2        	  387452	      2672 ns/op	         1.667 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	  135002	      8555 ns/op	         5.755 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	   88233	     13063 ns/op	         5.594 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	   97966	     13696 ns/op	         4.278 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	  137030	      8429 ns/op	         5.755 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100-2       	   86746	     13929 ns/op	         3.791 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   15828	     75477 ns/op	         5.718 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   16083	     75735 ns/op	         5.908 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   15951	     73783 ns/op	         8.556 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   15770	     74407 ns/op	         5.839 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000-2      	   15888	     73332 ns/op	         8.538 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2115	    567851 ns/op	         9.415 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2077	    565079 ns/op	         9.390 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2140	    574146 ns/op	         9.398 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2139	    567659 ns/op	         9.397 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000-2     	    2149	    582021 ns/op	         6.035 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     210	   5583319 ns/op	         9.469 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     212	   5553055 ns/op	         9.458 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     211	   5545228 ns/op	         9.458 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     212	   5653946 ns/op	         9.467 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-100000-2    	     210	   5583467 ns/op	         9.462 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      20	  54891888 ns/op	         7.636 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      21	  55397793 ns/op	         6.558 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      21	  55572162 ns/op	         6.518 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      22	  55050865 ns/op	         7.221 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-1000000-2   	      20	  54095294 ns/op	         9.466 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 537577203 ns/op	         9.466 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 536705442 ns/op	         6.615 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 525048430 ns/op	         9.470 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 525766678 ns/op	         9.473 compression-rate
BenchmarkMarshalUnmarshalMetricIDs/numMetricIDs-10000000-2  	       2	 524209815 ns/op	         9.473 compression-rate
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	65.889s

Result 1 parsed
Benchmark run succesful
102 / 193 done
### Execute Benchmark: /lib/promscrape/discovery/kubernetes/pod_timing_test.go::BenchmarkPodGetTargetLabels
Changing directory to dir1: /home/benchUser/other/lib/promscrape/discovery/kubernetes
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPodGetTargetLabels$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discovery/kubernetes
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkPodGetTargetLabels-2   	  596595	      1761 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  673084	      1783 ns/op	   0.56 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  674385	      1766 ns/op	   0.57 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  630406	      1779 ns/op	   0.56 MB/s	      56 B/op	       2 allocs/op
BenchmarkPodGetTargetLabels-2   	  684057	      1782 ns/op	   0.56 MB/s	      56 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape/discovery/kubernetes	5.903s

Result 1 parsed
Benchmark run succesful
103 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderRowsWorstCase-2   	      75	  16586099 ns/op	   6.03 MB/s	   42010 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      78	  16659218 ns/op	   6.00 MB/s	   41834 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      75	  16686392 ns/op	   5.99 MB/s	   42017 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      69	  16700495 ns/op	   5.99 MB/s	   42251 B/op	      14 allocs/op
BenchmarkBlockStreamReaderRowsWorstCase-2   	      64	  16819335 ns/op	   5.95 MB/s	   42571 B/op	      14 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.432s

Result 1 parsed
Benchmark run succesful
104 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkHeadPostingForMatchers
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHeadPostingForMatchers$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkHeadPostingForMatchers$]
/lib/storage/index_db_timing_test.go::BenchmarkHeadPostingForMatchers timed out after 10s
Benchmark run succesful
105 / 193 done
### Execute Benchmark: /lib/storage/dedup_timing_test.go::BenchmarkDeduplicateSamplesDuringMerge
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDeduplicateSamplesDuringMerge$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51800	     23112 ns/op	 354.45 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   52144	     23133 ns/op	 354.13 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   52381	     23070 ns/op	 355.09 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51945	     23027 ns/op	 355.76 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=3s-2         	   51957	     23157 ns/op	 353.76 MB/s	       5 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58605	     20249 ns/op	 404.56 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58970	     20470 ns/op	 400.20 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58927	     20280 ns/op	 403.95 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   58806	     20355 ns/op	 402.45 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=4s-2         	   59420	     20215 ns/op	 405.25 MB/s	       4 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   74413	     16137 ns/op	 507.66 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   74775	     15714 ns/op	 521.33 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   74432	     16064 ns/op	 509.96 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   75168	     15578 ns/op	 525.87 MB/s	       3 B/op	       0 allocs/op
BenchmarkDeduplicateSamplesDuringMerge/minScrapeInterval=10s-2        	   77001	     15551 ns/op	 526.77 MB/s	       3 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	21.435s

Result 1 parsed
Benchmark run succesful
106 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarUint64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarUint64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  296179	      4024 ns/op	1988.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  293887	      4027 ns/op	1986.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  294836	      4032 ns/op	1984.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  293466	      4034 ns/op	1983.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<7)-1-2         	  292935	      4089 ns/op	1956.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87607	     13640 ns/op	 586.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   87752	     13624 ns/op	 587.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   88126	     13669 ns/op	 585.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   88132	     13616 ns/op	 587.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<14)-1-2        	   88029	     13648 ns/op	 586.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35947	     33476 ns/op	 238.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35846	     33450 ns/op	 239.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   36037	     33524 ns/op	 238.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   35788	     33381 ns/op	 239.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<28)-1-2        	   36018	     33410 ns/op	 239.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15141	     79193 ns/op	 101.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15079	     78957 ns/op	 101.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15114	     78901 ns/op	 101.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15152	     79108 ns/op	 101.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64s/up-to-(1<<64)-1-2        	   15171	     79028 ns/op	 101.23 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	30.586s

Result 1 parsed
Benchmark run succesful
107 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13074121	        91.56 ns/op	  10.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13127037	        91.87 ns/op	  10.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13183002	        91.31 ns/op	  10.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13227439	        91.65 ns/op	  10.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMatchUnoptimized-2   	13150458	        91.53 ns/op	  10.92 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.513s

Result 1 parsed
Benchmark run succesful
108 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasMiss
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapHasMiss/items_1000-2         	   89366	     13613 ns/op	  73.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   87616	     13591 ns/op	  73.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   88214	     13317 ns/op	  75.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   87567	     13514 ns/op	  74.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000-2         	   86982	     13463 ns/op	  74.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8197	    143851 ns/op	  69.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8151	    146830 ns/op	  68.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8271	    146707 ns/op	  68.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8158	    146803 ns/op	  68.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000-2        	    8163	    145859 ns/op	  68.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     588	   2071852 ns/op	  48.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     558	   2121955 ns/op	  47.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     568	   2112788 ns/op	  47.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     562	   2070887 ns/op	  48.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_100000-2       	     566	   2129386 ns/op	  46.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  68296696 ns/op	  14.64 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  69243861 ns/op	  14.44 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  68093241 ns/op	  14.69 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  69174495 ns/op	  14.46 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_1000000-2      	      16	  67669629 ns/op	  14.78 MB/s	      14 B/op	       0 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 825569162 ns/op	  12.11 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 840224910 ns/op	  11.90 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 840943103 ns/op	  11.89 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 835474812 ns/op	  11.97 MB/s	     112 B/op	       4 allocs/op
BenchmarkMapHasMiss/items_10000000-2     	       2	 834027710 ns/op	  11.99 MB/s	     112 B/op	       4 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	57.708s

Result 1 parsed
Benchmark run succesful
109 / 193 done
### Execute Benchmark: /lib/blockcache/blockcache_timing_test.go::BenchmarkKeyHashUint64
Changing directory to dir1: /home/benchUser/other/lib/blockcache
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkKeyHashUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkKeyHashUint64-2   	146499346	         8.363 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	146961163	         8.393 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	146834884	         8.440 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	142340144	         8.204 ns/op	       0 B/op	       0 allocs/op
BenchmarkKeyHashUint64-2   	146167759	         8.419 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache	10.275s

Result 1 parsed
Benchmark run succesful
110 / 193 done
### Execute Benchmark: /lib/bytesutil/fast_string_transformer_timing_test.go::BenchmarkFastStringTransformer
Changing directory to dir1: /home/benchUser/other/lib/bytesutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastStringTransformer$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastStringTransformer/#00-2         	38338988	        30.38 ns/op	  32.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	38180064	        30.53 ns/op	  32.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39670344	        30.46 ns/op	  32.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39577128	        30.44 ns/op	  32.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/#00-2         	39262077	        30.91 ns/op	  32.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	35741941	        34.20 ns/op	  29.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	34943245	        33.50 ns/op	  29.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	35931974	        34.27 ns/op	  29.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	34405252	        33.28 ns/op	  30.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-2         	36070900	        34.40 ns/op	  29.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	34408848	        33.78 ns/op	  29.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35468150	        34.31 ns/op	  29.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35454536	        33.64 ns/op	  29.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	33661359	        34.61 ns/op	  28.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/foo-bar-baz-2 	35384491	        33.94 ns/op	  29.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	33915376	        36.97 ns/op	  27.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	33470270	        34.91 ns/op	  28.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34511210	        34.91 ns/op	  28.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	33010420	        34.88 ns/op	  28.67 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastStringTransformer/http_requests_total-2         	34061958	        37.77 ns/op	  26.47 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bytesutil	24.715s

Result 1 parsed
Benchmark run succesful
111 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderRowsBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderRowsBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderRowsBestCase-2   	    4112	    281899 ns/op	 354.74 MB/s	     769 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4275	    279915 ns/op	 357.25 MB/s	     766 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4213	    279649 ns/op	 357.59 MB/s	     767 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4257	    279718 ns/op	 357.50 MB/s	     766 B/op	       7 allocs/op
BenchmarkBlockStreamReaderRowsBestCase-2   	    4173	    280160 ns/op	 356.94 MB/s	     767 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.377s

Result 1 parsed
Benchmark run succesful
112 / 193 done
### Execute Benchmark: /lib/protoparser/influx/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/influx
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/influx
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 1000000	      1115 ns/op	 252.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1124 ns/op	 250.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1118 ns/op	 252.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1113 ns/op	 253.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1000000	      1124 ns/op	 250.94 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/influx	5.666s

Result 1 parsed
Benchmark run succesful
113 / 193 done
### Execute Benchmark: /lib/storage/index_db_timing_test.go::BenchmarkRegexpFilterMismatch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexpFilterMismatch$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRegexpFilterMismatch-2   	  686308	      1624 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  727263	      1603 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  731824	      1614 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  751522	      1629 ns/op	       0 B/op	       0 allocs/op
BenchmarkRegexpFilterMismatch-2   	  738830	      1616 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.325s

Result 1 parsed
Benchmark run succesful
114 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapForEachSetBitReadonly
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapForEachSetBitReadonly$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	   10000	    122089 ns/op	 536.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	   10000	    108634 ns/op	 603.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9819	    108239 ns/op	 605.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	   10000	    122011 ns/op	 537.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/no-zero-bits-2         	    9840	    108279 ns/op	 605.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100278 ns/op	 653.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100513 ns/op	 652.01 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100520 ns/op	 651.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   10000	    100070 ns/op	 654.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/half-zero-bits-2       	   12002	    100487 ns/op	 652.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1463835	       822.0 ns/op	79725.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1464867	       819.8 ns/op	79939.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1458764	       823.3 ns/op	79605.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1463772	       819.3 ns/op	79990.83 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBitReadonly/one-set-bit-2          	 1471072	       823.0 ns/op	79628.63 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	22.192s

Result 1 parsed
Benchmark run succesful
115 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalGaugeArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalGaugeArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalGaugeArray-2   	    3829	    310711 ns/op	  26.37 MB/s	      21 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3324	    308848 ns/op	  26.52 MB/s	      10 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3877	    315763 ns/op	  25.94 MB/s	      25 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3782	    309558 ns/op	  26.46 MB/s	      26 B/op	       0 allocs/op
BenchmarkMarshalGaugeArray-2   	    3386	    310982 ns/op	  26.34 MB/s	      43 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.812s

Result 1 parsed
Benchmark run succesful
116 / 193 done
### Execute Benchmark: /app/vlinsert/loki/loki_protobuf_timing_test.go::BenchmarkParseProtobufRequest
Changing directory to dir1: /home/benchUser/other/app/vlinsert/loki
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseProtobufRequest$]
/app/vlinsert/loki/loki_protobuf_timing_test.go::BenchmarkParseProtobufRequest timed out after 10s
Benchmark run succesful
117 / 193 done
### Execute Benchmark: /lib/tenantmetrics/counter_map_timing_test.go::BenchmarkCounterMapGrowth
Changing directory to dir1: /home/benchUser/other/lib/tenantmetrics
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCounterMapGrowth$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/tenantmetrics
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    6519	    183667 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    5504	    182441 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    7126	    184236 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    5754	    186747 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=GOMAXPROCS-2         	    7852	    186209 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    7112	    185714 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6396	    186880 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6578	    183236 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    6872	    182027 ns/op
BenchmarkCounterMapGrowth/n=100,nProcs=2-2                  	    5820	    179810 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     594	   2085201 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     549	   2072116 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     606	   2024097 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     604	   2019923 ns/op
BenchmarkCounterMapGrowth/n=1000,nProcs=2-2                 	     624	   2069576 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      43	  27057831 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      45	  26983152 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      43	  27419658 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      42	  27125583 ns/op
BenchmarkCounterMapGrowth/n=10000,nProcs=2-2                	      44	  26179461 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/tenantmetrics	28.032s

Result 1 parsed
Benchmark run succesful
118 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkUnmarshalVarUint64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalVarUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39553	     30437 ns/op	 262.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39314	     30352 ns/op	 263.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39700	     30362 ns/op	 263.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39493	     30297 ns/op	 264.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<7)-1-2         	   39558	     30564 ns/op	 261.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   32950	     36507 ns/op	 219.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   32973	     36427 ns/op	 219.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   32821	     36344 ns/op	 220.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   32931	     36665 ns/op	 218.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<14)-1-2        	   32655	     36467 ns/op	 219.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13165	     91542 ns/op	  87.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13116	     91499 ns/op	  87.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13112	     91371 ns/op	  87.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13146	     91601 ns/op	  87.34 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<28)-1-2        	   13152	     91283 ns/op	  87.64 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6824	    176924 ns/op	  45.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6807	    178375 ns/op	  44.85 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6676	    177113 ns/op	  45.17 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6794	    176824 ns/op	  45.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalVarUint64/up-to-(1<<64)-1-2        	    6783	    177066 ns/op	  45.18 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	32.161s

Result 1 parsed
Benchmark run succesful
119 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectPartialOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectPartialOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectPartialOverlap/items_1000-2         	  141104	      7894 ns/op	 253.36 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  137488	      8854 ns/op	 225.89 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  151624	      9011 ns/op	 221.95 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  134378	      9011 ns/op	 221.94 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_1000-2         	  141976	      8805 ns/op	 227.13 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  134824	      8799 ns/op	2273.02 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  114754	      8908 ns/op	2245.26 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  127593	      8858 ns/op	2257.92 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  123414	      9200 ns/op	2173.93 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_10000-2        	  133908	      9156 ns/op	2184.25 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   46060	     25940 ns/op	7710.13 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   50596	     24276 ns/op	8238.74 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   48948	     26612 ns/op	7515.54 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   49398	     25187 ns/op	7940.55 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_100000-2       	   47722	     24962 ns/op	8012.22 MB/s	   50368 B/op	      20 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    7561	    144771 ns/op	13814.96 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    7933	    140881 ns/op	14196.38 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    7215	    148086 ns/op	13505.69 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    9103	    144635 ns/op	13827.94 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_1000000-2      	    7576	    142136 ns/op	14070.99 MB/s	  275296 B/op	      74 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     788	   1474754 ns/op	13561.59 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     854	   1445251 ns/op	13838.43 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     810	   1427264 ns/op	14012.82 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     805	   1429830 ns/op	13987.68 MB/s	 2557824 B/op	     622 allocs/op
BenchmarkIntersectPartialOverlap/items_10000000-2     	     843	   1465572 ns/op	13646.55 MB/s	 2557824 B/op	     622 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.897s

Result 1 parsed
Benchmark run succesful
120 / 193 done
### Execute Benchmark: /lib/storage/part_search_timing_test.go::BenchmarkPartSearch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPartSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPartSearch$]
/lib/storage/part_search_timing_test.go::BenchmarkPartSearch timed out after 10s
Benchmark run succesful
121 / 193 done
### Execute Benchmark: /lib/storage/block_stream_reader_timing_test.go::BenchmarkBlockStreamReaderBlocksBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamReaderBlocksBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamReaderBlocksBestCase-2   	  413781	      2955 ns/op	33839.99 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  416997	      2955 ns/op	33843.20 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  383914	      2959 ns/op	33797.51 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  428014	      2927 ns/op	34166.64 MB/s	     704 B/op	       7 allocs/op
BenchmarkBlockStreamReaderBlocksBestCase-2   	  353851	      2950 ns/op	33899.72 MB/s	     704 B/op	       7 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.430s

Result 1 parsed
Benchmark run succesful
122 / 193 done
### Execute Benchmark: /lib/persistentqueue/persistentqueue_timing_test.go::BenchmarkQueueThroughputSerial
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkQueueThroughputSerial$]
Benchmark 1 done: 2025-02-08T12:44:47.804Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkQueueThroughputSerial/block-size-1-2         	   17372	     57719 ns/op	   1.73 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   17887	     56272 ns/op	   1.78 MB/s	      60 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21493	     55217 ns/op	   1.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   18024	     57103 ns/op	   1.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1-2         	   21278	     55060 ns/op	   1.82 MB/s	      25 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17454	     59222 ns/op	  16.89 MB/s	      60 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   20625	     59064 ns/op	  16.93 MB/s	      26 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17144	     59581 ns/op	  16.78 MB/s	      62 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   17829	     59473 ns/op	  16.81 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10-2        	   18206	     57523 ns/op	  17.38 MB/s	      59 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14416	     86095 ns/op	 116.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14058	     86144 ns/op	 116.09 MB/s	      76 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   14110	     85967 ns/op	 116.32 MB/s	      75 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   13940	     86163 ns/op	 116.06 MB/s	      76 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-100-2       	   13902	     85698 ns/op	 116.69 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1540	    794553 ns/op	 125.86 MB/s	     701 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1585	    798937 ns/op	 125.17 MB/s	       8 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1636	    799354 ns/op	 125.10 MB/s	       7 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1795	    817949 ns/op	 122.26 MB/s	     592 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000-2      	    1597	    794798 ns/op	 125.82 MB/s	      14 B/op	       0 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     162	   8098903 ns/op	 123.47 MB/s	    3419 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     164	   8448215 ns/op	 118.37 MB/s	     128 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     160	   8097505 ns/op	 123.49 MB/s	    3355 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     163	   8102921 ns/op	 123.41 MB/s	    6716 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-10000-2     	     162	   8137835 ns/op	 122.88 MB/s	    6755 B/op	       1 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      20	  81581998 ns/op	 122.58 MB/s	   60027 B/op	       9 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      21	  81955058 ns/op	 122.02 MB/s	   13105 B/op	       9 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      18	  83728038 ns/op	 119.43 MB/s	   15772 B/op	      11 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      16	  84593940 ns/op	 118.21 MB/s	   82710 B/op	      12 allocs/op
BenchmarkQueueThroughputSerial/block-size-100000-2    	      16	  83000778 ns/op	 120.48 MB/s	    8989 B/op	      11 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 808792556 ns/op	 123.64 MB/s	  539216 B/op	     102 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 831230564 ns/op	 120.30 MB/s	  530524 B/op	      93 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 828824950 ns/op	 120.65 MB/s	 1317368 B/op	     102 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 827826744 ns/op	 120.80 MB/s	  272916 B/op	      99 allocs/op
BenchmarkQueueThroughputSerial/block-size-1000000-2   	       2	 839135855 ns/op	 119.17 MB/s	  268800 B/op	     100 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	58.373s

Result 1 parsed
Benchmark run succesful
123 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarInt64s
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarInt64s$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  130668	      9178 ns/op	 871.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  131536	      9185 ns/op	 871.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  130794	      9174 ns/op	 872.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  130189	      9159 ns/op	 873.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<6)-1-2         	  130972	      9132 ns/op	 876.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78162	     15356 ns/op	 520.96 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78498	     15307 ns/op	 522.63 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78366	     15396 ns/op	 519.63 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   78368	     15336 ns/op	 521.65 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<13)-1-2        	   76922	     15403 ns/op	 519.38 MB/s	       1 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43680	     27381 ns/op	 292.17 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43430	     27528 ns/op	 290.61 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43494	     27509 ns/op	 290.81 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43809	     27606 ns/op	 289.79 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<27)-1-2        	   43448	     27514 ns/op	 290.76 MB/s	       7 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   27951	     43137 ns/op	 185.46 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28042	     42682 ns/op	 187.43 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28071	     42727 ns/op	 187.24 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28189	     42860 ns/op	 186.66 MB/s	      27 B/op	       0 allocs/op
BenchmarkMarshalVarInt64s/up-to-(1<<63)-1-2        	   28256	     42600 ns/op	 187.79 MB/s	      27 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	28.856s

Result 1 parsed
Benchmark run succesful
124 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185970406	         6.690 ns/op	 149.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185262247	         6.486 ns/op	 154.18 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185350360	         6.490 ns/op	 154.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185624358	         6.496 ns/op	 153.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMismatchOptimized-2   	185744317	         6.451 ns/op	 155.02 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	9.345s

Result 1 parsed
Benchmark run succesful
125 / 193 done
### Execute Benchmark: /lib/logstorage/inmemory_part_timing_test.go::BenchmarkInmemoryPart_MustInitFromRows
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPart_MustInitFromRows$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryPart_MustInitFromRows$]
/lib/logstorage/inmemory_part_timing_test.go::BenchmarkInmemoryPart_MustInitFromRows timed out after 10s
Benchmark run succesful
126 / 193 done
### Execute Benchmark: /lib/mergeset/table_search_timing_test.go::BenchmarkTableSearch
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
/lib/mergeset/table_search_timing_test.go::BenchmarkTableSearch timed out after 10s
Benchmark run succesful
127 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkIntersectFullOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkIntersectFullOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkIntersectFullOverlap/items_1000-2         	  155853	      7652 ns/op	 261.35 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  147411	      7984 ns/op	 250.51 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  137749	      8433 ns/op	 237.15 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  150970	      8187 ns/op	 244.28 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_1000-2         	  151976	      8360 ns/op	 239.24 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	  138790	      8565 ns/op	2335.22 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	  129068	      8727 ns/op	2291.77 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	  138147	      8549 ns/op	2339.38 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	  147384	      8694 ns/op	2300.38 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_10000-2        	  140698	      8563 ns/op	2335.68 MB/s	   17056 B/op	      12 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   66418	     17762 ns/op	11259.72 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   64582	     18642 ns/op	10728.25 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   68704	     18521 ns/op	10798.30 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   66492	     18432 ns/op	10850.40 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_100000-2       	   64635	     19339 ns/op	10341.97 MB/s	   33712 B/op	      16 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7404	    165481 ns/op	12085.99 MB/s	  283648 B/op	      76 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    6832	    174577 ns/op	11456.25 MB/s	  283648 B/op	      76 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7237	    174031 ns/op	11492.21 MB/s	  283648 B/op	      76 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    6890	    174343 ns/op	11471.62 MB/s	  283648 B/op	      76 allocs/op
BenchmarkIntersectFullOverlap/items_1000000-2      	    7096	    165434 ns/op	12089.39 MB/s	  283648 B/op	      76 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     663	   1764013 ns/op	11337.79 MB/s	 2566145 B/op	     624 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     644	   1764246 ns/op	11336.29 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     679	   1760518 ns/op	11360.29 MB/s	 2566146 B/op	     624 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     666	   1745754 ns/op	11456.37 MB/s	 2566144 B/op	     624 allocs/op
BenchmarkIntersectFullOverlap/items_10000000-2     	     662	   1753742 ns/op	11404.19 MB/s	 2566144 B/op	     624 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	34.054s

Result 1 parsed
Benchmark run succesful
128 / 193 done
### Execute Benchmark: /app/vmselect/prometheus/federate_timing_test.go::BenchmarkFederate
Changing directory to dir1: /home/benchUser/other/app/vmselect/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFederate$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFederate-2   	 2362346	       509.4 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2344876	       510.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2350542	       510.0 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2355111	       508.9 ns/op	       0 B/op	       0 allocs/op
BenchmarkFederate-2   	 2356112	       508.6 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/prometheus	8.610s

Result 1 parsed
Benchmark run succesful
129 / 193 done
### Execute Benchmark: /lib/encoding/int_timing_test.go::BenchmarkMarshalVarInt64
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalVarInt64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalVarInt64/small-ints-2         	44739175	        26.35 ns/op	 265.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	45118284	        26.34 ns/op	 265.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	45064332	        26.29 ns/op	 266.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	45766146	        26.38 ns/op	 265.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/small-ints-2         	45550575	        26.34 ns/op	 265.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18261894	        65.67 ns/op	 106.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18006723	        65.76 ns/op	 106.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18188674	        65.80 ns/op	 106.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18175172	        65.81 ns/op	 106.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalVarInt64/big-ints-2           	18161954	        66.05 ns/op	 105.98 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	12.443s

Result 1 parsed
Benchmark run succesful
130 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkAdd
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAdd/items_1000-2         	  108526	     10467 ns/op	  95.54 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  113716	     10519 ns/op	  95.07 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  114078	     10531 ns/op	  94.96 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  110580	     10411 ns/op	  96.06 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_1000-2         	  110794	     10347 ns/op	  96.64 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15837	     75851 ns/op	 131.84 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15789	     76157 ns/op	 131.31 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15776	     76012 ns/op	 131.56 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15856	     76433 ns/op	 130.83 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_10000-2        	   15810	     75606 ns/op	 132.26 MB/s	    8432 B/op	       5 allocs/op
BenchmarkAdd/items_100000-2       	    1609	    734178 ns/op	 136.21 MB/s	   16768 B/op	       8 allocs/op
BenchmarkAdd/items_100000-2       	    1623	    734518 ns/op	 136.14 MB/s	   16768 B/op	       8 allocs/op
BenchmarkAdd/items_100000-2       	    1622	    733012 ns/op	 136.42 MB/s	   16768 B/op	       8 allocs/op
BenchmarkAdd/items_100000-2       	    1611	    733928 ns/op	 136.25 MB/s	   16768 B/op	       8 allocs/op
BenchmarkAdd/items_100000-2       	    1628	    733850 ns/op	 136.27 MB/s	   16768 B/op	       8 allocs/op
BenchmarkAdd/items_1000000-2      	     159	   7353623 ns/op	 135.99 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     162	   7338299 ns/op	 136.27 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     162	   7349931 ns/op	 136.06 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     162	   7359208 ns/op	 135.88 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_1000000-2      	     162	   7354187 ns/op	 135.98 MB/s	  133521 B/op	      41 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73802766 ns/op	 135.50 MB/s	 1286913 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73734669 ns/op	 135.62 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73774107 ns/op	 135.55 MB/s	 1286881 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      15	  74160382 ns/op	 134.84 MB/s	 1286879 B/op	     325 allocs/op
BenchmarkAdd/items_10000000-2     	      14	  73723151 ns/op	 135.64 MB/s	 1286881 B/op	     325 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.073s

Result 1 parsed
Benchmark run succesful
131 / 193 done
### Execute Benchmark: /lib/logstorage/tokenizer_timing_test.go::BenchmarkTokenizeStrings
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTokenizeStrings$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTokenizeStrings-2   	   40678	     29543 ns/op	 113.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40806	     29726 ns/op	 112.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40700	     29753 ns/op	 112.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   40444	     29315 ns/op	 114.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeStrings-2   	   41011	     29414 ns/op	 113.82 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	7.526s

Result 1 parsed
Benchmark run succesful
132 / 193 done
### Execute Benchmark: /lib/persistentqueue/persistentqueue_timing_test.go::BenchmarkQueueThroughputConcurrent
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkQueueThroughputConcurrent$]
Benchmark 1 done: 2025-02-08T12:50:35.148Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   11850	     87438 ns/op	   1.14 MB/s	      91 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12471	     88833 ns/op	   1.13 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12748	     87140 ns/op	   1.15 MB/s	      84 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   11778	     87937 ns/op	   1.14 MB/s	      91 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1-2         	   12843	     87735 ns/op	   1.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11488	     91529 ns/op	  10.93 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   12162	     91499 ns/op	  10.93 MB/s	      88 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   12130	     91293 ns/op	  10.95 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11594	     92031 ns/op	  10.87 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10-2        	   11983	     92224 ns/op	  10.84 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	   10038	    113824 ns/op	  87.85 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	   10197	    110787 ns/op	  90.26 MB/s	     105 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	   10088	    111937 ns/op	  89.34 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	    9285	    110027 ns/op	  90.89 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100-2       	   10320	    112046 ns/op	  89.25 MB/s	       1 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1630	    765125 ns/op	 130.70 MB/s	     651 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1474	    792807 ns/op	 126.13 MB/s	     733 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1702	    802711 ns/op	 124.58 MB/s	       7 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1693	    802556 ns/op	 124.60 MB/s	     634 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000-2      	    1650	    799489 ns/op	 125.08 MB/s	      10 B/op	       0 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     163	   8140344 ns/op	 122.84 MB/s	      83 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     164	   8124231 ns/op	 123.09 MB/s	     180 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     159	   8423429 ns/op	 118.72 MB/s	    3532 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     160	   8131077 ns/op	 122.98 MB/s	    6794 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-10000-2     	     165	   8088049 ns/op	 123.64 MB/s	     178 B/op	       1 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      20	  81836198 ns/op	 122.20 MB/s	   14194 B/op	      10 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      21	  81382307 ns/op	 122.88 MB/s	   57246 B/op	      10 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      20	  81652209 ns/op	 122.47 MB/s	   66218 B/op	      10 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      21	  82427896 ns/op	 121.32 MB/s	   56792 B/op	       9 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-100000-2    	      18	  83351565 ns/op	 119.97 MB/s	   74092 B/op	      12 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 825510177 ns/op	 121.14 MB/s	  268532 B/op	      97 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 821107636 ns/op	 121.79 MB/s	 1063428 B/op	     102 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 819352242 ns/op	 122.05 MB/s	  797128 B/op	     100 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 825311256 ns/op	 121.17 MB/s	  530856 B/op	     100 allocs/op
BenchmarkQueueThroughputConcurrent/block-size-1000000-2   	       2	 813182082 ns/op	 122.97 MB/s	 1055060 B/op	     100 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	56.658s

Result 1 parsed
Benchmark run succesful
133 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexOrValuesMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexOrValuesMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150437313	         7.987 ns/op	 125.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150371022	         7.973 ns/op	 125.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	149571438	         7.961 ns/op	 125.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	150720150	         7.973 ns/op	 125.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexOrValuesMatchOptimized-2   	143950849	         7.977 ns/op	 125.36 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.045s

Result 1 parsed
Benchmark run succesful
134 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddRandomLastBits$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     463	   2527209 ns/op	  39.57 MB/s	  145948 B/op	     124 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     475	   2504216 ns/op	  39.93 MB/s	  143243 B/op	     116 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     469	   2500988 ns/op	  39.98 MB/s	  131216 B/op	     109 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     466	   2541739 ns/op	  39.34 MB/s	  155242 B/op	     129 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_20-2         	     471	   2540773 ns/op	  39.36 MB/s	  159012 B/op	     134 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     381	   3272364 ns/op	  30.56 MB/s	  589363 B/op	     478 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     379	   3161668 ns/op	  31.63 MB/s	  529259 B/op	     424 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     406	   3124017 ns/op	  32.01 MB/s	  506146 B/op	     400 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     385	   3183155 ns/op	  31.42 MB/s	  531795 B/op	     437 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_24-2         	     384	   3192856 ns/op	  31.32 MB/s	  527730 B/op	     404 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     277	   4342186 ns/op	  23.03 MB/s	 1125242 B/op	     940 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     253	   4341308 ns/op	  23.03 MB/s	 1158028 B/op	     952 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     278	   4261181 ns/op	  23.47 MB/s	 1125816 B/op	     943 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     260	   4230132 ns/op	  23.64 MB/s	 1119943 B/op	     945 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_28-2         	     266	   4192409 ns/op	  23.85 MB/s	 1086333 B/op	     909 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     211	   5527188 ns/op	  18.09 MB/s	 1740413 B/op	    1534 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     254	   6254805 ns/op	  15.99 MB/s	 2158883 B/op	    1962 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     208	   5706561 ns/op	  17.52 MB/s	 1838743 B/op	    1639 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     219	   5861617 ns/op	  17.06 MB/s	 1884377 B/op	    1703 allocs/op
BenchmarkMapAddRandomLastBits/lastBits_32-2         	     193	   6204126 ns/op	  16.12 MB/s	 2073693 B/op	    1796 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	32.205s

Result 1 parsed
Benchmark run succesful
135 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseTimestampRFC3339Nano
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseTimestampRFC3339Nano$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseTimestampRFC3339Nano-2   	 1786057	       673.9 ns/op	   7.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1787366	       670.7 ns/op	   7.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1786408	       670.4 ns/op	   7.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1787314	       671.3 ns/op	   7.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseTimestampRFC3339Nano-2   	 1788322	       670.1 ns/op	   7.46 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	9.409s

Result 1 parsed
Benchmark run succesful
136 / 193 done
### Execute Benchmark: /lib/encoding/nearest_delta2_timing_test.go::BenchmarkMarshalInt64NearestDelta2
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64NearestDelta2$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15358	     78380 ns/op	 104.52 MB/s	      10 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15336	     77986 ns/op	 105.04 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15310	     78204 ns/op	 104.75 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15354	     77887 ns/op	 105.18 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_4-2         	   15358	     78220 ns/op	 104.73 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43834	     27437 ns/op	 298.57 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43431	     27483 ns/op	 298.07 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43710	     27465 ns/op	 298.28 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43780	     27533 ns/op	 297.53 MB/s	       2 B/op	       0 allocs/op
BenchmarkMarshalInt64NearestDelta2/precisionBits_64-2        	   43852	     27393 ns/op	 299.06 MB/s	       2 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	17.366s

Result 1 parsed
Benchmark run succesful
137 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalInt64Array
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalInt64Array$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalInt64Array-2   	    4905	    264217 ns/op	  31.00 MB/s	      18 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    3958	    260204 ns/op	  31.48 MB/s	      23 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4495	    263557 ns/op	  31.08 MB/s	      20 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4506	    259509 ns/op	  31.57 MB/s	       6 B/op	       0 allocs/op
BenchmarkMarshalInt64Array-2   	    4531	    261548 ns/op	  31.32 MB/s	      20 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.964s

Result 1 parsed
Benchmark run succesful
138 / 193 done
### Execute Benchmark: /lib/protoparser/prometheus/parser_timing_test.go::BenchmarkAreIdenticalSeriesFast
Changing directory to dir1: /home/benchUser/other/lib/protoparser/prometheus
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAreIdenticalSeriesFast$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1281672	       934.2 ns/op	2165.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1283187	       937.5 ns/op	2157.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1276214	       935.6 ns/op	2162.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1286044	       937.7 ns/op	2157.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-no-timestamps-2         	 1285460	       938.1 ns/op	2156.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1211460	       988.6 ns/op	2046.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1211961	       993.2 ns/op	2036.86 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1210312	       989.4 ns/op	2044.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1217618	       990.8 ns/op	2041.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-no-timestamps-2         	 1212296	      1051 ns/op	1924.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  603546	      1864 ns/op	3554.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  634405	      1875 ns/op	3534.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  639842	      1876 ns/op	3531.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  642648	      1877 ns/op	3529.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/identical-series-with-timestamps-2       	  615265	      1865 ns/op	3552.09 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  582380	      2090 ns/op	3170.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  572803	      2074 ns/op	3194.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  580422	      2072 ns/op	3197.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  571900	      2078 ns/op	3189.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkAreIdenticalSeriesFast/different-series-with-timestamps-2       	  581443	      2084 ns/op	3179.09 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/prometheus	33.933s

Result 1 parsed
Benchmark run succesful
139 / 193 done
### Execute Benchmark: /lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePrefix
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePrefix$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchAnyCasePrefix$]
/lib/logstorage/filter_timing_test.go::BenchmarkMatchAnyCasePrefix timed out after 10s
Benchmark run succesful
140 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHitRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHitRandomLastBits$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapHasHitRandomLastBits$]
/lib/uint64set/uint64set_timing_test.go::BenchmarkMapHasHitRandomLastBits timed out after 10s
Benchmark run succesful
141 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterAdd
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterAdd$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterAdd/maxItems=1000-2         	    1660	    703006 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1683	    711926 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1710	    712193 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1687	    705532 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000-2         	    1701	    711464 ns/op	       2 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1628	    731330 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1615	    730188 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1639	    732236 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1614	    727759 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000-2        	    1635	    732239 ns/op	      25 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1543	    778896 ns/op	     265 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1521	    775579 ns/op	     269 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1540	    785017 ns/op	     266 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1506	    787007 ns/op	     272 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=100000-2       	    1514	    785931 ns/op	     270 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     818	   1566620 ns/op	    4907 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     800	   1521124 ns/op	    5017 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     639	   1574067 ns/op	    6282 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     765	   1563573 ns/op	    5247 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=1000000-2      	     805	   1544100 ns/op	    4987 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     211	   5406196 ns/op	  189622 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     216	   5442815 ns/op	  185231 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     220	   5354944 ns/op	  181863 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     223	   5426955 ns/op	  179416 B/op	       0 allocs/op
BenchmarkFilterAdd/maxItems=10000000-2     	     222	   5349197 ns/op	  180227 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	34.033s

Result 1 parsed
Benchmark run succesful
142 / 193 done
### Execute Benchmark: /app/vmalert/datasource/vm_prom_api_timing_test.go::BenchmarkPromInstantUnmarshal
Changing directory to dir1: /home/benchUser/other/app/vmalert/datasource
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkPromInstantUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmalert/datasource
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     819	   1436918 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     832	   1457502 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     828	   1447242 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     819	   1443902 ns/op
BenchmarkPromInstantUnmarshal/Instant_std+fastjson-2         	     820	   1441172 ns/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmalert/datasource	6.716s

Result 1 parsed
Benchmark run succesful
143 / 193 done
### Execute Benchmark: /lib/fasttime/fasttime_timing_test.go::BenchmarkUnixTimestamp
Changing directory to dir1: /home/benchUser/other/lib/fasttime
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnixTimestamp$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnixTimestamp-2   	786186848	         1.516 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	791742693	         1.516 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	795159508	         1.520 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	794213755	         1.520 ns/op	       0 B/op	       0 allocs/op
BenchmarkUnixTimestamp-2   	789671346	         1.519 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime	6.790s

Result 1 parsed
Benchmark run succesful
144 / 193 done
### Execute Benchmark: /lib/decimal/decimal_timing_test.go::BenchmarkAppendDecimalToFloat
Changing directory to dir1: /home/benchUser/other/lib/decimal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAppendDecimalToFloat$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48175	     24924 ns/op	 328.67 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48420	     24886 ns/op	 329.18 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48201	     24876 ns/op	 329.32 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   48237	     24884 ns/op	 329.21 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/RealFloat-2         	   47931	     24903 ns/op	 328.95 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64072	     18670 ns/op	 438.78 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   63956	     18744 ns/op	 437.04 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64294	     18692 ns/op	 438.26 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   64191	     18700 ns/op	 438.07 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Integers-2          	   63418	     18702 ns/op	 438.03 MB/s	       2 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  496497	      2415 ns/op	3392.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  504373	      2415 ns/op	3392.27 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  478447	      2427 ns/op	3374.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  502332	      2435 ns/op	3364.80 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Zeros-2             	  489817	      2414 ns/op	3393.39 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  372964	      3205 ns/op	2556.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  377020	      3216 ns/op	2547.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  372176	      3172 ns/op	2582.61 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  362974	      3205 ns/op	2556.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkAppendDecimalToFloat/Ones-2              	  367339	      3200 ns/op	2560.21 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/decimal	26.423s

Result 1 parsed
Benchmark run succesful
145 / 193 done
### Execute Benchmark: /lib/streamaggr/streamaggr_timing_test.go::BenchmarkAggregatorsPush
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAggregatorsPush$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkAggregatorsPush$]
/lib/streamaggr/streamaggr_timing_test.go::BenchmarkAggregatorsPush timed out after 10s
Benchmark run succesful
146 / 193 done
### Execute Benchmark: /lib/storage/table_timing_test.go::BenchmarkTableAddRows
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableAddRows$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableAddRows$]
Cmd Error:
2025-02-08T12:58:18.136Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/1822358744411A98" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
2025-02-08T12:58:18.148Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T12:58:18.556Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/18223D052719E694" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
--- FAIL: BenchmarkTableAddRows/tsidsCount_1/rowsPerInsert_1
    table_timing_test.go:98: unexpected rows count in the final table "benchmarkTableAddRows": got 222344470; want 1000
2025-02-08T12:58:19.810Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/18223D052FC7B14A" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
2025-02-08T12:58:19.812Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/18223D05316FA20D" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
--- FAIL: BenchmarkTableAddRows/tsidsCount_1/rowsPerInsert_10
    table_timing_test.go:98: unexpected rows count in the final table "benchmarkTableAddRows": got 222354470; want 10000
2025-02-08T12:58:20.357Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/18223D057D5C52D8" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
2025-02-08T12:58:20.358Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/18223D057FB42ED5" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
--- FAIL: BenchmarkTableAddRows/tsidsCount_1/rowsPerInsert_100
    table_timing_test.go:98: unexpected rows count in the final table "benchmarkTableAddRows": got 222454470; want 100000
2025-02-08T12:58:21.397Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/18223D059AFFA03D" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
2025-02-08T12:58:21.406Z	info	/home/benchUser/other/lib/storage/partition.go:1947	deleting "benchmarkTableAddRows/small/2025_02/18223D059DF93066" because it isn't listed in "benchmarkTableAddRows/small/2025_02/parts.json"; this is the expected case after unclean shutdown
--- FAIL: BenchmarkTableAddRows/tsidsCount_1/rowsPerInsert_1000
    table_timing_test.go:98: unexpected rows count in the final table "benchmarkTableAddRows": got 223454470; want 1000000
2025-02-08T12:59:14.696Z	panic	/home/benchUser/other/lib/filestream/filestream.go:222	FATAL: cannot create file "benchmarkTableAddRows/small/2025_02/18223D059AFFA03D/metadata.json": open benchmarkTableAddRows/small/2025_02/18223D059AFFA03D/metadata.json: no such file or directory
panic: FATAL: cannot create file "benchmarkTableAddRows/small/2025_02/18223D059AFFA03D/metadata.json": open benchmarkTableAddRows/small/2025_02/18223D059AFFA03D/metadata.json: no such file or directory

goroutine 140 [running]:
github.com/VictoriaMetrics/VictoriaMetrics/lib/logger.logMessage({0x832bd6, 0x5}, {0xc0083fa000, 0xc2}, 0x4)
	/home/benchUser/other/lib/logger/logger.go:315 +0xa74
github.com/VictoriaMetrics/VictoriaMetrics/lib/logger.logLevelSkipframes(0x1, {0x832bd6, 0x5}, {0x83f537?, 0xc001fa1b00?}, {0xc001fa1ab8?, 0xc001fa1b38?, 0x6e0000004e0f77?})
	/home/benchUser/other/lib/logger/logger.go:155 +0x1a5
github.com/VictoriaMetrics/VictoriaMetrics/lib/logger.logLevel(...)
	/home/benchUser/other/lib/logger/logger.go:147
github.com/VictoriaMetrics/VictoriaMetrics/lib/logger.Panicf(...)
	/home/benchUser/other/lib/logger/logger.go:143
github.com/VictoriaMetrics/VictoriaMetrics/lib/filestream.MustCreate({0xc0002820f0, 0x42}, 0x0)
	/home/benchUser/other/lib/filestream/filestream.go:222 +0xdd
github.com/VictoriaMetrics/VictoriaMetrics/lib/fs.MustWriteSync({0xc0002820f0, 0x42}, {0xc000066780, 0x7a, 0x80})
	/home/benchUser/other/lib/fs/fs.go:38 +0x49
github.com/VictoriaMetrics/VictoriaMetrics/lib/storage.(*partHeader).MustWriteMetadata(0xc0002964d0?, {0xc008de5440, 0x34})
	/home/benchUser/other/lib/storage/part_header.go:178 +0xf9
github.com/VictoriaMetrics/VictoriaMetrics/lib/storage.(*partition).mergePartsInternal(0xc000296480, {0xc008de5440, 0x34}, 0xc0073a2000, {0xc0003a65b0, 0xe, 0xe}, 0x1, 0xc000288ee0, 0x194e5a3bb73, ...)
	/home/benchUser/other/lib/storage/partition.go:1581 +0x245
github.com/VictoriaMetrics/VictoriaMetrics/lib/storage.(*partition).mergeParts(0xc000296480, {0xc0003a6540, 0xe, 0xe}, 0xc000288ee0, 0x0, 0x0)
	/home/benchUser/other/lib/storage/partition.go:1434 +0x65a
github.com/VictoriaMetrics/VictoriaMetrics/lib/storage.(*partition).smallPartsMerger(0xc000296480)
	/home/benchUser/other/lib/storage/partition.go:670 +0x165
github.com/VictoriaMetrics/VictoriaMetrics/lib/storage.(*partition).startSmallPartsMergerLocked.func1()
	/home/benchUser/other/lib/storage/partition.go:974 +0x1c
created by github.com/VictoriaMetrics/VictoriaMetrics/lib/storage.(*partition).startSmallPartsMergerLocked in goroutine 104
	/home/benchUser/other/lib/storage/partition.go:973 +0x85
exit status 2
FAIL	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	56.880s

Benchmark run succesful
147 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkUnionNoOverlap
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnionNoOverlap$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnionNoOverlap/items_1000-2         	  151204	      8259 ns/op	 242.16 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  149284	      8290 ns/op	 241.24 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  152216	      8564 ns/op	 233.52 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  156004	      8866 ns/op	 225.59 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_1000-2         	  136064	      8686 ns/op	 230.26 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  147886	      8968 ns/op	2230.04 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  140802	      9180 ns/op	2178.59 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  120288	      9138 ns/op	2188.67 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  129043	      9523 ns/op	2100.24 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_10000-2        	  119919	      9197 ns/op	2174.72 MB/s	   17056 B/op	      12 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   36404	     32943 ns/op	6071.09 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   33969	     34341 ns/op	5823.97 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   33474	     34971 ns/op	5719.07 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   35300	     33197 ns/op	6024.66 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_100000-2       	   35577	     33659 ns/op	5941.92 MB/s	   67080 B/op	      26 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4310	    283666 ns/op	7050.55 MB/s	  517184 B/op	     136 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4275	    283752 ns/op	7048.42 MB/s	  517184 B/op	     136 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4350	    290911 ns/op	6874.96 MB/s	  517184 B/op	     136 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4966	    278149 ns/op	7190.40 MB/s	  517184 B/op	     136 allocs/op
BenchmarkUnionNoOverlap/items_1000000-2      	    4620	    278113 ns/op	7191.32 MB/s	  517184 B/op	     136 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     394	   2964010 ns/op	6747.62 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     402	   2981972 ns/op	6706.97 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     402	   2950349 ns/op	6778.86 MB/s	 5102082 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     380	   2924828 ns/op	6838.01 MB/s	 5102080 B/op	    1236 allocs/op
BenchmarkUnionNoOverlap/items_10000000-2     	     408	   2964048 ns/op	6747.53 MB/s	 5102080 B/op	    1236 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	36.012s

Result 1 parsed
Benchmark run succesful
148 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150408717	         7.997 ns/op	 125.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150419893	         7.986 ns/op	 125.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150084522	         8.046 ns/op	 124.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	150178297	         8.038 ns/op	 124.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchOptimized-2   	147446650	         8.006 ns/op	 124.91 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.078s

Result 1 parsed
Benchmark run succesful
149 / 193 done
### Execute Benchmark: /lib/storage/storage_timing_test.go::BenchmarkStorageAddRows
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStorageAddRows$]
Benchmark 1 done: 2025-02-08T13:00:03.803Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T13:00:03.863Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:03.867Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T13:00:03.979Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:03.983Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:04.104Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:04.107Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:04.259Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:04.263Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:05.210Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:05.214Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  617696	      1935 ns/op	   0.52 MB/s	      54 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T13:00:06.602Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:06.606Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:06.728Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:06.732Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:06.855Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:06.859Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:07.001Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:07.005Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:07.940Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:07.944Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  612481	      1982 ns/op	   0.50 MB/s	      56 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T13:00:09.368Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:09.371Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:09.492Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:09.495Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:09.617Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:09.621Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:09.767Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:09.771Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:10.720Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:10.724Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  615268	      1917 ns/op	   0.52 MB/s	      57 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T13:00:12.130Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:12.134Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:12.255Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:12.259Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:12.382Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:12.386Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:12.535Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:12.538Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:13.449Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:13.453Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  632620	      1936 ns/op	   0.52 MB/s	      55 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1-2         	2025-02-08T13:00:14.910Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:14.914Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:15.040Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:15.043Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:15.174Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:15.178Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:15.331Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:15.335Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:16.279Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1/data/big/1970_01"
2025-02-08T13:00:16.283Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  632902	      2015 ns/op	   0.50 MB/s	      54 B/op	       0 allocs/op
2025-02-08T13:00:17.771Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:17.774Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T13:00:17.911Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:17.915Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:18.043Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:18.047Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:18.243Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:18.246Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  269577	      4175 ns/op	   2.40 MB/s	     500 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T13:00:19.862Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:19.866Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:20.011Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:20.016Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:20.154Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:20.159Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:20.355Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:20.358Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  264948	      4208 ns/op	   2.38 MB/s	     509 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T13:00:21.952Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:21.955Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:22.094Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:22.098Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:22.243Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:22.248Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:22.441Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:22.445Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  271189	      4273 ns/op	   2.34 MB/s	     499 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T13:00:24.091Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:24.095Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:24.243Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:24.247Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:24.388Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:24.392Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:24.583Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:24.586Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  267920	      4215 ns/op	   2.37 MB/s	     505 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_10-2        	2025-02-08T13:00:26.222Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:26.226Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:26.369Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:26.373Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:26.519Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:26.522Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:26.726Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_10/data/big/1970_01"
2025-02-08T13:00:26.730Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
  279538	      4263 ns/op	   2.35 MB/s	     484 B/op	       0 allocs/op
2025-02-08T13:00:28.438Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:28.442Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T13:00:28.586Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:28.590Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:28.738Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:28.743Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:29.278Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:29.282Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   44378	     39323 ns/op	   2.54 MB/s	    5064 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T13:00:31.450Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:31.454Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:31.606Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:31.610Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:31.765Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:31.769Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:32.309Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:32.313Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   44397	     35228 ns/op	   2.84 MB/s	    5072 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T13:00:34.295Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:34.300Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:34.446Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:34.450Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:34.607Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:34.611Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:35.148Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:35.152Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   44878	     38221 ns/op	   2.62 MB/s	    5007 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T13:00:37.293Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:37.297Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:37.458Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:37.462Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:37.631Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:37.635Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:38.183Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:38.187Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   44268	     35706 ns/op	   2.80 MB/s	    5056 B/op	       0 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_100-2       	2025-02-08T13:00:40.176Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:40.180Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:40.339Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:40.343Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:40.515Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:40.520Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:41.069Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_100/data/big/1970_01"
2025-02-08T13:00:41.073Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
   43861	     35681 ns/op	   2.80 MB/s	    5124 B/op	       0 allocs/op
2025-02-08T13:00:43.038Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:43.042Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T13:00:43.220Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:43.225Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:43.431Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:43.435Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3681	    327732 ns/op	   3.05 MB/s	   52163 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T13:00:44.907Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:44.910Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:45.080Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:45.083Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:45.291Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:45.294Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3730	    339175 ns/op	   2.95 MB/s	   51563 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T13:00:46.840Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:46.845Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:47.027Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:47.033Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:47.256Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:47.261Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3456	    309310 ns/op	   3.23 MB/s	   51045 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T13:00:48.654Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:48.658Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:48.835Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:48.838Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:49.051Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:49.055Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3807	    345505 ns/op	   2.89 MB/s	   50272 B/op	       2 allocs/op
BenchmarkStorageAddRows/rowsPerBatch_1000-2      	2025-02-08T13:00:50.646Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:50.650Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:50.827Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:50.832Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
2025-02-08T13:00:51.047Z	info	/home/benchUser/other/lib/storage/partition.go:202	creating a partition "1970_01" with smallPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/small/1970_01", bigPartsPath="/home/benchUser/other/lib/storage/BenchmarkStorageAddRows_1000/data/big/1970_01"
2025-02-08T13:00:51.051Z	info	/home/benchUser/other/lib/storage/partition.go:211	partition "1970_01" has been created
    3518	    356632 ns/op	   2.80 MB/s	   54596 B/op	       2 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	48.973s

Result 1 parsed
Benchmark run succesful
150 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalZeroConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalZeroConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalZeroConstArray-2   	  823000	      1413 ns/op	5798.75 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  836643	      1421 ns/op	5765.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  845740	      1411 ns/op	5805.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  857592	      1428 ns/op	5738.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalZeroConstArray-2   	  850843	      1420 ns/op	5768.83 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.069s

Result 1 parsed
Benchmark run succesful
151 / 193 done
### Execute Benchmark: /lib/fs/reader_at_timing_test.go::BenchmarkReaderAtMustReadAt
Changing directory to dir1: /home/benchUser/other/lib/fs
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReaderAtMustReadAt$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkReaderAtMustReadAt$]
/lib/fs/reader_at_timing_test.go::BenchmarkReaderAtMustReadAt timed out after 10s
Benchmark run succesful
152 / 193 done
### Execute Benchmark: /lib/promscrape/config_timing_test.go::BenchmarkGetScrapeWork
Changing directory to dir1: /home/benchUser/other/lib/promscrape
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGetScrapeWork$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGetScrapeWork-2   	  326328	      4072 ns/op	   0.25 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  280010	      4177 ns/op	   0.24 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  296780	      3990 ns/op	   0.25 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  299260	      4255 ns/op	   0.24 MB/s	     864 B/op	       6 allocs/op
BenchmarkGetScrapeWork-2   	  293126	      4361 ns/op	   0.23 MB/s	     864 B/op	       6 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promscrape	6.472s

Result 1 parsed
Benchmark run succesful
153 / 193 done
### Execute Benchmark: /lib/storage/block_stream_writer_timing_test.go::BenchmarkBlockStreamWriterRowsWorstCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlockStreamWriterRowsWorstCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlockStreamWriterRowsWorstCase-2   	      27	  38693015 ns/op	   2.58 MB/s	11340825 B/op	   51858 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      30	  38184364 ns/op	   2.62 MB/s	10206733 B/op	   46673 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      30	  38942895 ns/op	   2.57 MB/s	10206748 B/op	   46673 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      30	  37831191 ns/op	   2.64 MB/s	10206757 B/op	   46673 allocs/op
BenchmarkBlockStreamWriterRowsWorstCase-2   	      30	  36768253 ns/op	   2.72 MB/s	10206742 B/op	   46673 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	16.755s

Result 1 parsed
Benchmark run succesful
154 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkParsePromQLWithCacheSimple
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParsePromQLWithCacheSimple$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParsePromQLWithCacheSimple-2   	 2256832	       533.2 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2254723	       530.2 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2260777	       532.5 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2261722	       529.6 ns/op	       0 B/op	       0 allocs/op
BenchmarkParsePromQLWithCacheSimple-2   	 2262948	       532.8 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	8.729s

Result 1 parsed
Benchmark run succesful
155 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkTryParseUint64
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTryParseUint64$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTryParseUint64-2   	18455614	        64.12 ns/op	  77.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18888670	        64.21 ns/op	  77.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18804316	        63.69 ns/op	  78.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18732001	        63.98 ns/op	  78.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkTryParseUint64-2   	18783457	        63.99 ns/op	  78.14 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.340s

Result 1 parsed
Benchmark run succesful
156 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalConstArray-2   	  190992	      6265 ns/op	1307.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  191070	      6290 ns/op	1302.46 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  189338	      6285 ns/op	1303.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  192686	      6278 ns/op	1304.78 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalConstArray-2   	  189608	      6270 ns/op	1306.49 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.335s

Result 1 parsed
Benchmark run succesful
157 / 193 done
### Execute Benchmark: /lib/bloomfilter/filter_timing_test.go::BenchmarkFilterHasMiss
Changing directory to dir1: /home/benchUser/other/lib/bloomfilter
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFilterHasMiss$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFilterHasMiss/maxItems=1000-2         	    7854	    147479 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8158	    150067 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    7983	    147203 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8085	    149748 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000-2         	    8008	    148630 ns/op	       0 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7699	    151215 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7935	    150700 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7910	    150212 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7722	    152603 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000-2        	    7936	    150028 ns/op	       5 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7594	    158720 ns/op	      53 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7522	    161022 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7526	    165143 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7581	    160803 ns/op	      54 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=100000-2       	    7164	    163226 ns/op	      57 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5998	    199777 ns/op	     669 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5499	    199711 ns/op	     730 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5541	    201425 ns/op	     724 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5553	    199262 ns/op	     722 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=1000000-2      	    5659	    198208 ns/op	     709 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3693	    324715 ns/op	   10833 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3698	    321756 ns/op	   10819 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3117	    321593 ns/op	   12836 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3176	    322486 ns/op	   12597 B/op	       0 allocs/op
BenchmarkFilterHasMiss/maxItems=10000000-2     	    3705	    323282 ns/op	   10798 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/bloomfilter	33.319s

Result 1 parsed
Benchmark run succesful
158 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotStarMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotStarMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7383531	       162.7 ns/op	   6.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7308694	       162.3 ns/op	   6.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7343628	       162.9 ns/op	   6.14 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7386314	       163.6 ns/op	   6.11 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotStarMatchUnoptimized-2   	 7159657	       162.9 ns/op	   6.14 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.814s

Result 1 parsed
Benchmark run succesful
159 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHit
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetHasHit/items_1000-2         	  130548	      9185 ns/op	 108.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  131482	      9181 ns/op	 108.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  130215	      9194 ns/op	 108.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  130317	      9190 ns/op	 108.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000-2         	  128607	      9219 ns/op	 108.48 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13101	     92158 ns/op	 108.51 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13040	     91820 ns/op	 108.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   10000	    103845 ns/op	  96.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13116	     92003 ns/op	 108.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000-2        	   13006	     91855 ns/op	 108.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1148	   1071610 ns/op	  93.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1112	   1053954 ns/op	  94.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1107	   1041657 ns/op	  96.00 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1150	   1053689 ns/op	  94.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_100000-2       	    1114	   1064035 ns/op	  93.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      82	  13048386 ns/op	  76.64 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      80	  13028202 ns/op	  76.76 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      84	  13112503 ns/op	  76.26 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      81	  13151727 ns/op	  76.04 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_1000000-2      	      80	  13008336 ns/op	  76.87 MB/s	       2 B/op	       0 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158014991 ns/op	  63.29 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158502381 ns/op	  63.09 MB/s	      96 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158284603 ns/op	  63.18 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158117165 ns/op	  63.24 MB/s	      32 B/op	       1 allocs/op
BenchmarkSetHasHit/items_10000000-2     	       7	 158281166 ns/op	  63.18 MB/s	      96 B/op	       1 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.199s

Result 1 parsed
Benchmark run succesful
160 / 193 done
### Execute Benchmark: /lib/prompbmarshal/prompbmarshal_timing_test.go::BenchmarkWriteRequestMarshalProtobuf
Changing directory to dir1: /home/benchUser/other/lib/prompbmarshal
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkWriteRequestMarshalProtobuf$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/prompbmarshal
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkWriteRequestMarshalProtobuf-2   	    4452	    263195 ns/op	   3.80 MB/s	     110 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4461	    264968 ns/op	   3.77 MB/s	     110 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4562	    262611 ns/op	   3.81 MB/s	     107 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4568	    262109 ns/op	   3.82 MB/s	     107 B/op	       0 allocs/op
BenchmarkWriteRequestMarshalProtobuf-2   	    4561	    264358 ns/op	   3.78 MB/s	     107 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/prompbmarshal	6.111s

Result 1 parsed
Benchmark run succesful
161 / 193 done
### Execute Benchmark: /lib/logstorage/block_timing_test.go::BenchmarkBlock_MustInitFromRows
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBlock_MustInitFromRows$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4707607	       252.8 ns/op	   3.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4728782	       252.6 ns/op	   3.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4681948	       254.0 ns/op	   3.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4774989	       254.9 ns/op	   3.92 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1-2         	 4767414	       252.3 ns/op	   3.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  695929	      1687 ns/op	   5.93 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  669391	      1686 ns/op	   5.93 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  700341	      1775 ns/op	   5.64 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  663463	      1749 ns/op	   5.72 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10-2        	  646906	      1734 ns/op	   5.77 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  151390	      7732 ns/op	  12.93 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  153531	      7710 ns/op	  12.97 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  153994	      7767 ns/op	  12.88 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  152308	      7787 ns/op	  12.84 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_100-2       	  152298	      7818 ns/op	  12.79 MB/s	       3 B/op	       0 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17217	     68920 ns/op	  14.51 MB/s	      41 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17354	     68815 ns/op	  14.53 MB/s	      40 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17436	     68739 ns/op	  14.55 MB/s	      40 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   17293	     69858 ns/op	  14.31 MB/s	      40 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_1000-2      	   16990	     70031 ns/op	  14.28 MB/s	      41 B/op	       1 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     967	   1114428 ns/op	   8.97 MB/s	   10503 B/op	     318 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     913	   1176900 ns/op	   8.50 MB/s	   11124 B/op	     336 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     892	   1230103 ns/op	   8.13 MB/s	   11386 B/op	     344 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     862	   1240345 ns/op	   8.06 MB/s	   11783 B/op	     356 allocs/op
BenchmarkBlock_MustInitFromRows/rowsPerBlock_10000-2     	     889	   1250383 ns/op	   8.00 MB/s	   11424 B/op	     345 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	37.660s

Result 1 parsed
Benchmark run succesful
162 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMismatchOptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMismatchOptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	124870236	         9.526 ns/op	 104.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	126196038	         9.489 ns/op	 105.38 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	125372056	         9.536 ns/op	 104.87 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	125451453	         9.541 ns/op	 104.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchOptimized-2   	125821110	         9.536 ns/op	 104.87 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	10.839s

Result 1 parsed
Benchmark run succesful
163 / 193 done
### Execute Benchmark: /app/vmselect/promql/parse_cache_timing_test.go::BenchmarkCachePutNoOverFlow
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCachePutNoOverFlow$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCachePutNoOverFlow-2   	    3130	    354092 ns/op	       1 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3408	    351705 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3171	    362182 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3289	    353341 ns/op	       0 B/op	       0 allocs/op
BenchmarkCachePutNoOverFlow-2   	    3417	    353923 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	6.074s

Result 1 parsed
Benchmark run succesful
164 / 193 done
### Execute Benchmark: /lib/protoparser/datadogv2/parser_timing_test.go::BenchmarkRequestUnmarshalJSON
Changing directory to dir1: /home/benchUser/other/lib/protoparser/datadogv2
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRequestUnmarshalJSON$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv2
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRequestUnmarshalJSON-2   	  189531	      6202 ns/op	  53.04 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  183238	      6195 ns/op	  53.10 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  186864	      6116 ns/op	  53.79 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  193471	      6161 ns/op	  53.40 MB/s	     480 B/op	      13 allocs/op
BenchmarkRequestUnmarshalJSON-2   	  189787	      6093 ns/op	  53.99 MB/s	     480 B/op	      13 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/datadogv2	6.146s

Result 1 parsed
Benchmark run succesful
165 / 193 done
### Execute Benchmark: /lib/protoparser/csvimport/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/csvimport
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/csvimport
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 1280508	       936.7 ns/op	 186.82 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1281823	       939.3 ns/op	 186.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1273279	       941.9 ns/op	 185.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1284255	       939.6 ns/op	 186.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 1284309	       937.4 ns/op	 186.68 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/csvimport	10.765s

Result 1 parsed
Benchmark run succesful
166 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalZeroConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalZeroConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalZeroConstArray-2   	  909703	      1328 ns/op	6167.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  894456	      1328 ns/op	6166.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  882068	      1329 ns/op	6165.55 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  903738	      1332 ns/op	6147.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkUnmarshalZeroConstArray-2   	  893560	      1325 ns/op	6183.89 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.045s

Result 1 parsed
Benchmark run succesful
167 / 193 done
### Execute Benchmark: /lib/protoparser/vmimport/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/vmimport
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/vmimport
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	  334164	      3515 ns/op	 173.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  340144	      3513 ns/op	 173.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  342451	      3513 ns/op	 173.36 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  343137	      3527 ns/op	 172.69 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	  338304	      3545 ns/op	 171.79 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/vmimport	6.176s

Result 1 parsed
Benchmark run succesful
168 / 193 done
### Execute Benchmark: /lib/fasttime/fasttime_timing_test.go::BenchmarkTimeNowUnix
Changing directory to dir1: /home/benchUser/other/lib/fasttime
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTimeNowUnix$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTimeNowUnix-2   	28762308	        39.93 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	30037128	        40.31 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	28650312	        40.73 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	29671639	        40.25 ns/op	       0 B/op	       0 allocs/op
BenchmarkTimeNowUnix-2   	30129878	        40.13 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/fasttime	6.150s

Result 1 parsed
Benchmark run succesful
169 / 193 done
### Execute Benchmark: /lib/streamaggr/dedup_timing_test.go::BenchmarkDedupAggr
Changing directory to dir1: /home/benchUser/other/lib/streamaggr
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkDedupAggr$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkDedupAggr/samplesPerPush_1-2         	 2212129	       541.2 ns/op	   3.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2229135	       538.4 ns/op	   3.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2229680	       536.9 ns/op	   3.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2232621	       535.8 ns/op	   3.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1-2         	 2238216	       536.3 ns/op	   3.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  758488	      1545 ns/op	  12.94 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  755373	      1550 ns/op	  12.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  768789	      1553 ns/op	  12.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  782058	      1740 ns/op	  11.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10-2        	  783063	      1542 ns/op	  12.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  115360	     10632 ns/op	  18.81 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  114939	     10437 ns/op	  19.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  112192	     10556 ns/op	  18.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  113103	     10505 ns/op	  19.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_100-2       	  113808	     10618 ns/op	  18.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12196	     96945 ns/op	  20.63 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12356	     96206 ns/op	  20.79 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12444	     98258 ns/op	  20.35 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12475	     97607 ns/op	  20.49 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_1000-2      	   12080	     97760 ns/op	  20.46 MB/s	       7 B/op	       0 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     883	   1279522 ns/op	  15.63 MB/s	    1176 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     930	   1263909 ns/op	  15.82 MB/s	    1116 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     909	   1230821 ns/op	  16.25 MB/s	    1141 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     933	   1224484 ns/op	  16.33 MB/s	    1112 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_10000-2     	     918	   1237546 ns/op	  16.16 MB/s	    1131 B/op	       1 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      39	  29837306 ns/op	   6.70 MB/s	  202630 B/op	      84 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      33	  30497615 ns/op	   6.56 MB/s	  239479 B/op	     100 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      38	  28158799 ns/op	   7.10 MB/s	  207946 B/op	      86 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      38	  29478552 ns/op	   6.78 MB/s	  207919 B/op	      86 allocs/op
BenchmarkDedupAggr/samplesPerPush_100000-2    	      38	  30348903 ns/op	   6.59 MB/s	  207930 B/op	      86 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/streamaggr	51.405s

Result 1 parsed
Benchmark run succesful
170 / 193 done
### Execute Benchmark: /lib/logstorage/values_encoder_timing_test.go::BenchmarkMarshalUint8String
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalUint8String$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalUint8String-2   	 1604245	       744.9 ns/op	 343.65 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1608056	       747.5 ns/op	 342.50 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1605406	       745.8 ns/op	 343.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1608651	       748.8 ns/op	 341.88 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalUint8String-2   	 1596531	       748.1 ns/op	 342.19 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	9.793s

Result 1 parsed
Benchmark run succesful
171 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkMarshalDeltaConstArray
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMarshalDeltaConstArray$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMarshalDeltaConstArray-2   	  187879	      6288 ns/op	1302.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  191497	      6286 ns/op	1303.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  190850	      6285 ns/op	1303.42 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  191678	      6281 ns/op	1304.22 MB/s	       0 B/op	       0 allocs/op
BenchmarkMarshalDeltaConstArray-2   	  192526	      6262 ns/op	1308.19 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	6.332s

Result 1 parsed
Benchmark run succesful
172 / 193 done
### Execute Benchmark: /lib/persistentqueue/fastqueue_timing_test.go::BenchmarkFastQueueThroughputConcurrent
Changing directory to dir1: /home/benchUser/other/lib/persistentqueue
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkFastQueueThroughputConcurrent$]
Benchmark 1 done: 2025-02-08T13:07:16.774Z	info	/home/benchUser/other/lib/memory/memory.go:42	limiting caches to 5005924761 bytes, leaving 3337283175 bytes to the OS according to -memory.allowedPercent=60
2025-02-08T13:07:16.777Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:16.781Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T13:07:16.794Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:16.798Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:16.812Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:16.825Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:16.838Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:17.378Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:17.389Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:18.552Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  321129	      3655 ns/op	   2.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T13:07:18.564Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:18.567Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:18.578Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:18.581Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:18.593Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:18.622Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:18.634Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:19.416Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:19.428Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:20.575Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  317290	      3650 ns/op	   2.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T13:07:20.587Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:20.590Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:20.601Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:20.605Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:20.616Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:20.644Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:20.656Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:21.434Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:21.445Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:22.609Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  317073	      3704 ns/op	   2.70 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T13:07:22.621Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:22.624Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:22.638Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:22.641Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:22.655Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:22.680Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:22.693Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:23.378Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:23.391Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:24.571Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  317739	      3755 ns/op	   2.66 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1-2         	2025-02-08T13:07:24.583Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:24.587Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:24.599Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:24.602Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:24.615Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:24.640Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:24.652Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:25.428Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
2025-02-08T13:07:25.439Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:26.622Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1"
  318320	      3749 ns/op	   2.67 MB/s	       0 B/op	       0 allocs/op
2025-02-08T13:07:26.634Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:26.637Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T13:07:26.648Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:26.652Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:26.664Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:26.692Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:26.703Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:27.426Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:27.438Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:28.658Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  324087	      3799 ns/op	  26.33 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T13:07:28.669Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:28.673Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:28.684Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:28.687Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:28.700Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:28.730Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:28.742Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:29.499Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:29.513Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:30.714Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  316207	      3837 ns/op	  26.06 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T13:07:30.726Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:30.729Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:30.741Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:30.745Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:30.758Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:30.784Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:30.798Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:31.483Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:31.495Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:32.691Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  318777	      3788 ns/op	  26.40 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T13:07:32.702Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:32.706Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:32.717Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:32.721Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:32.733Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:32.760Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:32.773Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:33.571Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:33.584Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:34.754Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  313702	      3768 ns/op	  26.54 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10-2        	2025-02-08T13:07:34.765Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:34.768Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:34.780Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:34.784Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:34.796Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:34.827Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:34.838Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:35.561Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
2025-02-08T13:07:35.573Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:36.753Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10"
  314458	      3790 ns/op	  26.38 MB/s	       0 B/op	       0 allocs/op
2025-02-08T13:07:36.766Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:36.769Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T13:07:36.782Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:36.786Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:36.797Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:36.819Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:36.832Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:37.638Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:37.649Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:38.834Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  308910	      3869 ns/op	 258.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T13:07:38.847Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:38.850Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:38.863Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:38.867Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:38.878Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:38.905Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:38.918Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:39.619Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:39.633Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:40.829Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  307969	      3927 ns/op	 254.66 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T13:07:40.841Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:40.845Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:40.858Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:40.862Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:40.873Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:40.893Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:40.905Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:41.729Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:41.744Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:42.926Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  315774	      3790 ns/op	 263.84 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T13:07:42.938Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:42.941Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:42.953Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:42.956Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:42.968Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:42.997Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:43.008Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:43.769Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:43.783Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:44.975Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  310862	      3877 ns/op	 257.91 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100-2       	2025-02-08T13:07:44.986Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:44.990Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:45.003Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:45.006Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:45.018Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:45.045Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:45.057Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:45.815Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
2025-02-08T13:07:45.831Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:47.020Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100"
  311095	      3870 ns/op	 258.41 MB/s	       3 B/op	       0 allocs/op
2025-02-08T13:07:47.033Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:47.036Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T13:07:47.048Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:47.051Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:47.064Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:47.094Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:47.108Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:47.864Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:47.876Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:49.039Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  270837	      4335 ns/op	2306.83 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T13:07:49.051Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:49.055Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:49.099Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:49.103Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:49.116Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:49.125Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:49.137Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:49.600Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:49.613Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:50.793Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  274424	      4342 ns/op	2303.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T13:07:50.805Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:50.809Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:50.821Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:50.825Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:50.837Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:50.864Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:50.873Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:51.660Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:51.672Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:52.852Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  275667	      4322 ns/op	2313.54 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T13:07:52.863Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:52.866Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:52.878Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:52.881Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:52.892Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:52.925Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:52.938Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:53.784Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:53.796Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:54.998Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  275469	      4407 ns/op	2269.21 MB/s	       3 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000-2      	2025-02-08T13:07:55.011Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:55.015Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:55.026Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:55.030Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:55.044Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:55.073Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:55.085Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:55.843Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
2025-02-08T13:07:55.856Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:57.020Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000"
  268906	      4375 ns/op	2285.79 MB/s	       3 B/op	       0 allocs/op
2025-02-08T13:07:57.033Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:57.036Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T13:07:57.049Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:57.054Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:07:57.066Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:57.121Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:07:57.135Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:58.077Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:07:58.089Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:59.270Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  124934	      9544 ns/op	10477.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T13:07:59.281Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:59.284Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:07:59.296Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:59.300Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:07:59.312Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:07:59.381Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:07:59.393Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:00.385Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  105418	      9513 ns/op	10512.29 MB/s	      10 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T13:08:00.397Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:00.401Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:00.414Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:00.419Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:00.433Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:00.483Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:00.495Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:01.391Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:01.403Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:02.594Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  129068	      9315 ns/op	10735.81 MB/s	       8 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T13:08:02.605Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:02.609Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:02.620Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:02.625Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:02.637Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:02.701Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:02.712Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:03.686Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:03.698Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:04.882Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  127414	      9388 ns/op	10651.95 MB/s	       8 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-10000-2     	2025-02-08T13:08:04.894Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:04.897Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:04.908Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:04.912Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:04.923Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:04.990Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
2025-02-08T13:08:05.002Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-10000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:06.017Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-10000"
  108856	      9429 ns/op	10606.00 MB/s	       9 B/op	       0 allocs/op
2025-02-08T13:08:06.030Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:06.034Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T13:08:06.046Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:06.058Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:06.071Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:06.455Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:06.466Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:07.673Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10867	    112068 ns/op	8923.17 MB/s	       1 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T13:08:07.685Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:07.688Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:07.700Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:07.715Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:07.727Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:08.154Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:08.166Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:09.337Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10423	    113485 ns/op	8811.76 MB/s	     112 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T13:08:09.349Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:09.353Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:09.363Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:09.376Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:09.387Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:09.871Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:09.883Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:11.051Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10534	    111940 ns/op	8933.37 MB/s	     101 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T13:08:11.065Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:11.069Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:11.081Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:11.092Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:11.105Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:11.512Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:11.524Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:12.653Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10093	    112996 ns/op	8849.85 MB/s	     117 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-100000-2    	2025-02-08T13:08:12.666Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:12.669Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:12.682Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:12.696Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:12.709Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:13.072Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
2025-02-08T13:08:13.084Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-100000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:14.260Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-100000"
   10695	    111023 ns/op	9007.17 MB/s	       1 B/op	       0 allocs/op
2025-02-08T13:08:14.272Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:14.281Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T13:08:14.292Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:14.461Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:14.473Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:15.573Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     381	   2916658 ns/op	3428.58 MB/s	    2688 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T13:08:15.585Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:15.591Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:15.604Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:15.797Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:15.810Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:16.893Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     385	   2843367 ns/op	3516.96 MB/s	    2814 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T13:08:16.905Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:16.912Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:16.925Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:17.121Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:17.135Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:18.174Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     361	   2913091 ns/op	3432.78 MB/s	   11350 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T13:08:18.185Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:18.192Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:18.204Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:18.417Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:18.431Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:19.487Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     362	   2955678 ns/op	3383.32 MB/s	    5777 B/op	       0 allocs/op
BenchmarkFastQueueThroughputConcurrent/block-size-1000000-2   	2025-02-08T13:08:19.501Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:19.508Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:19.519Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:19.703Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
2025-02-08T13:08:19.715Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:71	opened fast queue at "bench-fast-queue-throughput-concurrent-1000000" with maxInmemoryBlocks=40, it contains 0 pending bytes, persistence is enabled
2025-02-08T13:08:20.784Z	info	/home/benchUser/other/lib/persistentqueue/fastqueue.go:117	closed fast persistent queue at "bench-fast-queue-throughput-concurrent-1000000"
     369	   2928287 ns/op	3414.97 MB/s	    2793 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/persistentqueue	64.039s

Result 1 parsed
Benchmark run succesful
173 / 193 done
### Execute Benchmark: /lib/protoparser/opentsdb/parser_timing_test.go::BenchmarkRowsUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentsdb
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRowsUnmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdb
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRowsUnmarshal-2   	 2484880	       485.4 ns/op	 341.98 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2474595	       487.2 ns/op	 340.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2481028	       486.7 ns/op	 341.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2463734	       486.5 ns/op	 341.19 MB/s	       0 B/op	       0 allocs/op
BenchmarkRowsUnmarshal-2   	 2473911	       486.1 ns/op	 341.50 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentsdb	8.487s

Result 1 parsed
Benchmark run succesful
174 / 193 done
### Execute Benchmark: /app/vmselect/promql/rollup_timing_test.go::BenchmarkRollupAvg
Changing directory to dir1: /home/benchUser/other/app/vmselect/promql
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRollupAvg$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkRollupAvg-2   	 1589437	       753.6 ns/op	1326.89 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1590583	       755.3 ns/op	1324.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1594636	       752.7 ns/op	1328.63 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1597593	       753.3 ns/op	1327.53 MB/s	       0 B/op	       0 allocs/op
BenchmarkRollupAvg-2   	 1593189	       751.4 ns/op	1330.86 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/app/vmselect/promql	9.845s

Result 1 parsed
Benchmark run succesful
175 / 193 done
### Execute Benchmark: /lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockUnmarshal
Changing directory to dir1: /home/benchUser/other/lib/mergeset
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockUnmarshal$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkInmemoryBlockUnmarshal$]
/lib/mergeset/encoding_timing_test.go::BenchmarkInmemoryBlockUnmarshal timed out after 10s
Benchmark run succesful
176 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHitRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHitRandomLastBits$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetHasHitRandomLastBits$]
/lib/uint64set/uint64set_timing_test.go::BenchmarkSetHasHitRandomLastBits timed out after 10s
Benchmark run succesful
177 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetAddRandomLastBits
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetAddRandomLastBits$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     240	   5158833 ns/op	  19.38 MB/s	   37818 B/op	      15 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     246	   4377664 ns/op	  22.84 MB/s	   37039 B/op	      14 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     258	   5159471 ns/op	  19.38 MB/s	   37248 B/op	      14 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     254	   5191343 ns/op	  19.26 MB/s	   37353 B/op	      14 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_20-2         	     238	   4934465 ns/op	  20.27 MB/s	   36416 B/op	      14 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     158	   7588242 ns/op	  13.18 MB/s	  207309 B/op	      60 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     147	   7008180 ns/op	  14.27 MB/s	  169717 B/op	      51 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     159	   7253292 ns/op	  13.79 MB/s	  160135 B/op	      48 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     165	   7232998 ns/op	  13.83 MB/s	  186102 B/op	      56 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_24-2         	     205	   5018952 ns/op	  19.92 MB/s	  187344 B/op	      56 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     280	   5261703 ns/op	  19.01 MB/s	 1008706 B/op	     278 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     254	   5053384 ns/op	  19.79 MB/s	  883363 B/op	     243 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     241	   5017571 ns/op	  19.93 MB/s	  801529 B/op	     258 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     230	   5167212 ns/op	  19.35 MB/s	  894283 B/op	     234 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_28-2         	     250	   5107227 ns/op	  19.58 MB/s	  900066 B/op	     246 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     152	   7274690 ns/op	  13.75 MB/s	 1869113 B/op	     797 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     189	   8166791 ns/op	  12.24 MB/s	 2331047 B/op	    1067 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     157	   7211431 ns/op	  13.87 MB/s	 1991611 B/op	     744 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     171	   7991283 ns/op	  12.51 MB/s	 1798485 B/op	    1168 allocs/op
BenchmarkSetAddRandomLastBits/lastBits_32-2         	     147	   7648945 ns/op	  13.07 MB/s	 2234841 B/op	     784 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	36.237s

Result 1 parsed
Benchmark run succesful
178 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7887805	       151.8 ns/op	   6.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7842990	       151.6 ns/op	   6.60 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7892572	       151.7 ns/op	   6.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7923667	       151.9 ns/op	   6.58 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexPrefixDotPlusMatchUnoptimized-2   	 7849628	       152.1 ns/op	   6.58 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.771s

Result 1 parsed
Benchmark run succesful
179 / 193 done
### Execute Benchmark: /lib/logstorage/hash_tokenizer_timing_test.go::BenchmarkTokenizeHashes
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTokenizeHashes$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkTokenizeHashes-2   	   75549	     15963 ns/op	 209.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   75222	     16009 ns/op	 209.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   74452	     16016 ns/op	 209.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   75140	     15884 ns/op	 210.77 MB/s	       0 B/op	       0 allocs/op
BenchmarkTokenizeHashes-2   	   74911	     16000 ns/op	 209.25 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.823s

Result 1 parsed
Benchmark run succesful
180 / 193 done
### Execute Benchmark: /lib/storage/table_search_timing_test.go::BenchmarkTableSearch
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkTableSearch$]
/lib/storage/table_search_timing_test.go::BenchmarkTableSearch timed out after 10s
Benchmark run succesful
181 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkApplyRelabelConfigs
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkApplyRelabelConfigs$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkApplyRelabelConfigs$]
/lib/promrelabel/relabel_timing_test.go::BenchmarkApplyRelabelConfigs timed out after 10s
Benchmark run succesful
182 / 193 done
### Execute Benchmark: /lib/regexutil/regex_timing_test.go::BenchmarkRegexMatchString
Changing directory to dir1: /home/benchUser/other/lib/regexutil
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexMatchString$]
Error while executing command '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkRegexMatchString$]
/lib/regexutil/regex_timing_test.go::BenchmarkRegexMatchString timed out after 10s
Benchmark run succesful
183 / 193 done
### Execute Benchmark: /lib/logstorage/bitmap_timing_test.go::BenchmarkBitmapForEachSetBit
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkBitmapForEachSetBit$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4846	    243031 ns/op	 269.66 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4957	    242711 ns/op	 270.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4952	    242753 ns/op	 269.97 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4928	    243291 ns/op	 269.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-noclear-2         	    4954	    242452 ns/op	 270.30 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4852	    244286 ns/op	 268.28 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4932	    244066 ns/op	 268.52 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4881	    243508 ns/op	 269.13 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4946	    243294 ns/op	 269.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/no-zero-bits-clear-2           	    4866	    244626 ns/op	 267.90 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    7862	    137765 ns/op	 475.71 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8535	    137834 ns/op	 475.47 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8316	    138422 ns/op	 473.45 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8458	    137696 ns/op	 475.95 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-noclear-2       	    8509	    138234 ns/op	 474.10 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8055	    139368 ns/op	 470.24 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8479	    138679 ns/op	 472.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8426	    139066 ns/op	 471.26 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8427	    138581 ns/op	 472.91 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/half-zero-bits-clear-2         	    8458	    140242 ns/op	 467.31 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1498371	       815.3 ns/op	80385.96 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1499601	       798.0 ns/op	82126.37 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1507360	       804.1 ns/op	81503.21 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1509386	       793.9 ns/op	82547.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-noclear-2          	 1515217	       791.2 ns/op	82835.12 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  832321	      1405 ns/op	46658.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  831921	      1404 ns/op	46683.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  839102	      1404 ns/op	46680.41 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  836241	      1406 ns/op	46627.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkBitmapForEachSetBit/one-set-bit-clear-2            	  844395	      1406 ns/op	46618.77 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	40.008s

Result 1 parsed
Benchmark run succesful
184 / 193 done
### Execute Benchmark: /lib/blockcache/blockcache_timing_test.go::BenchmarkCacheGet
Changing directory to dir1: /home/benchUser/other/lib/blockcache
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkCacheGet$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkCacheGet-2   	    1074	   1078609 ns/op	   9.27 MB/s	    1585 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1082	   1090025 ns/op	   9.17 MB/s	    1570 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1093	   1079393 ns/op	   9.26 MB/s	    1556 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1092	   1083197 ns/op	   9.23 MB/s	    1556 B/op	       9 allocs/op
BenchmarkCacheGet-2   	    1054	   1095079 ns/op	   9.13 MB/s	    1614 B/op	       9 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/blockcache	6.450s

Result 1 parsed
Benchmark run succesful
185 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkSetAddWithAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkSetAddWithAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkSetAddWithAllocs/items_1000-2         	  107316	     10590 ns/op	  94.43 MB/s	    8558 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  112633	     10620 ns/op	  94.16 MB/s	    8547 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  113424	     10563 ns/op	  94.67 MB/s	    8549 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  113204	     10647 ns/op	  93.92 MB/s	    8552 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_1000-2         	  111620	     10717 ns/op	  93.31 MB/s	    8550 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15708	     76117 ns/op	 131.38 MB/s	    9786 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15642	     76363 ns/op	 130.95 MB/s	    9808 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15550	     76325 ns/op	 131.02 MB/s	    9816 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15714	     76309 ns/op	 131.05 MB/s	    9795 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_10000-2        	   15712	     76277 ns/op	 131.10 MB/s	    9811 B/op	       5 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1630	    732031 ns/op	 136.61 MB/s	   21303 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1615	    736298 ns/op	 135.81 MB/s	   21184 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1604	    731102 ns/op	 136.78 MB/s	   21236 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1617	    733813 ns/op	 136.27 MB/s	   21638 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_100000-2       	    1609	    730483 ns/op	 136.90 MB/s	   21544 B/op	       9 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     164	   7276762 ns/op	 137.42 MB/s	  135473 B/op	      41 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     164	   7283567 ns/op	 137.30 MB/s	  136682 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     163	   7269416 ns/op	 137.56 MB/s	  135859 B/op	      42 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     164	   7323278 ns/op	 136.55 MB/s	  135470 B/op	      41 allocs/op
BenchmarkSetAddWithAllocs/items_1000000-2      	     164	   7326029 ns/op	 136.50 MB/s	  135156 B/op	      41 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73213046 ns/op	 136.59 MB/s	 1283555 B/op	     324 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73596353 ns/op	 135.88 MB/s	 1283001 B/op	     324 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73301273 ns/op	 136.42 MB/s	 1281921 B/op	     324 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73622427 ns/op	 135.83 MB/s	 1284584 B/op	     326 allocs/op
BenchmarkSetAddWithAllocs/items_10000000-2     	      15	  73403427 ns/op	 136.23 MB/s	 1283009 B/op	     324 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	38.219s

Result 1 parsed
Benchmark run succesful
186 / 193 done
### Execute Benchmark: /lib/promrelabel/graphite_timing_test.go::BenchmarkGraphiteReplaceTemplateExpand
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkGraphiteReplaceTemplateExpand$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.04 ns/op	  99.62 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.85 ns/op	  92.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.21 ns/op	  97.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.32 ns/op	  96.93 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-2         	100000000	        10.48 ns/op	  95.44 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	83040367	        14.26 ns/op	  70.15 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85602006	        14.28 ns/op	  70.03 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	75730390	        14.07 ns/op	  71.05 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	85572846	        14.08 ns/op	  71.04 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-2         	83878057	        14.07 ns/op	  71.07 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64682578	        18.47 ns/op	  54.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64956333	        18.43 ns/op	  54.25 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	65164819	        18.79 ns/op	  53.23 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	62499045	        18.51 ns/op	  54.02 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/one-replacement-with-prefix-suffix-2  	64433221	        18.46 ns/op	  54.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	80979325	        14.64 ns/op	  68.29 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	80962612	        14.66 ns/op	  68.20 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82105636	        14.67 ns/op	  68.16 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82074610	        14.64 ns/op	  68.32 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-2                    	82411248	        14.61 ns/op	  68.43 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63420417	        19.02 ns/op	  52.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	62785407	        19.05 ns/op	  52.49 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63286204	        19.01 ns/op	  52.59 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	62201254	        18.96 ns/op	  52.76 MB/s	       0 B/op	       0 allocs/op
BenchmarkGraphiteReplaceTemplateExpand/two-replacements-with-delimiter-2     	63208201	        19.02 ns/op	  52.57 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	29.445s

Result 1 parsed
Benchmark run succesful
187 / 193 done
### Execute Benchmark: /lib/logstorage/encoding_timing_test.go::BenchmarkStringsBlockUnmarshaler_Unmarshal
Changing directory to dir1: /home/benchUser/other/lib/logstorage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkStringsBlockUnmarshaler_Unmarshal$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  201741	      5839 ns/op	 573.35 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  221794	      5593 ns/op	 598.56 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  181766	      5650 ns/op	 592.57 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  202154	      5658 ns/op	 591.73 MB/s	       0 B/op	       0 allocs/op
BenchmarkStringsBlockUnmarshaler_Unmarshal-2   	  195246	      5732 ns/op	 584.06 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/logstorage	6.033s

Result 1 parsed
Benchmark run succesful
188 / 193 done
### Execute Benchmark: /lib/promrelabel/relabel_timing_test.go::BenchmarkMatchRegexSingleValueMismatchUnoptimized
Changing directory to dir1: /home/benchUser/other/lib/promrelabel
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMatchRegexSingleValueMismatchUnoptimized$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	20645325	        56.21 ns/op	  17.79 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21165564	        56.06 ns/op	  17.84 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	20261463	        56.44 ns/op	  17.72 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	20961597	        56.36 ns/op	  17.74 MB/s	       0 B/op	       0 allocs/op
BenchmarkMatchRegexSingleValueMismatchUnoptimized-2   	21246064	        56.57 ns/op	  17.68 MB/s	       0 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/promrelabel	6.185s

Result 1 parsed
Benchmark run succesful
189 / 193 done
### Execute Benchmark: /lib/protoparser/opentelemetry/stream/streamparser_timing_test.go::BenchmarkParseStream
Changing directory to dir1: /home/benchUser/other/lib/protoparser/opentelemetry/stream
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkParseStream$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentelemetry/stream
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkParseStream-2   	  134643	      9841 ns/op	   0.10 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  127957	      9552 ns/op	   0.10 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  121891	      9716 ns/op	   0.10 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  114769	     10220 ns/op	   0.10 MB/s	    2368 B/op	      96 allocs/op
BenchmarkParseStream-2   	  118904	      9564 ns/op	   0.10 MB/s	    2368 B/op	      96 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/protoparser/opentelemetry/stream	6.563s

Result 1 parsed
Benchmark run succesful
190 / 193 done
### Execute Benchmark: /lib/storage/merge_timing_test.go::BenchmarkMergeBlockStreamsFourSourcesBestCase
Changing directory to dir1: /home/benchUser/other/lib/storage
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMergeBlockStreamsFourSourcesBestCase$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/storage
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   97189	     11642 ns/op	2814.69 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	  107156	     11810 ns/op	2774.59 MB/s	    2824 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   99069	     11821 ns/op	2772.00 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	   99318	     11637 ns/op	2815.92 MB/s	    2825 B/op	      28 allocs/op
BenchmarkMergeBlockStreamsFourSourcesBestCase-2   	  100512	     11899 ns/op	2753.90 MB/s	    2825 B/op	      28 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/storage	6.933s

Result 1 parsed
Benchmark run succesful
191 / 193 done
### Execute Benchmark: /lib/uint64set/uint64set_timing_test.go::BenchmarkMapAddWithAllocs
Changing directory to dir1: /home/benchUser/other/lib/uint64set
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkMapAddWithAllocs$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkMapAddWithAllocs/items_1000-2         	   15735	     74657 ns/op	  13.39 MB/s	   47738 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   16039	     75184 ns/op	  13.30 MB/s	   47735 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   16009	     75978 ns/op	  13.16 MB/s	   47736 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   16004	     75794 ns/op	  13.19 MB/s	   47735 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_1000-2         	   15835	     75781 ns/op	  13.20 MB/s	   47741 B/op	      65 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1794	    654917 ns/op	  15.27 MB/s	  389444 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1740	    650072 ns/op	  15.38 MB/s	  389483 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1813	    649754 ns/op	  15.39 MB/s	  389490 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1794	    646426 ns/op	  15.47 MB/s	  389426 B/op	     254 allocs/op
BenchmarkMapAddWithAllocs/items_10000-2        	    1804	    657471 ns/op	  15.21 MB/s	  389459 B/op	     255 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     139	   8824946 ns/op	  11.33 MB/s	 3266670 B/op	    3928 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     139	   8704565 ns/op	  11.49 MB/s	 3266408 B/op	    3925 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     140	   8488383 ns/op	  11.78 MB/s	 3267270 B/op	    3936 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     135	   8746445 ns/op	  11.43 MB/s	 3266990 B/op	    3932 allocs/op
BenchmarkMapAddWithAllocs/items_100000-2       	     142	   8738654 ns/op	  11.44 MB/s	 3266687 B/op	    3928 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 173357631 ns/op	   5.77 MB/s	49632154 B/op	   38445 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 168664588 ns/op	   5.93 MB/s	49626570 B/op	   38377 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 169049400 ns/op	   5.92 MB/s	49617374 B/op	   38260 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 169293438 ns/op	   5.91 MB/s	49619614 B/op	   38291 allocs/op
BenchmarkMapAddWithAllocs/items_1000000-2      	       7	 169992171 ns/op	   5.88 MB/s	49616798 B/op	   38254 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	3152862174 ns/op	   3.17 MB/s	403105432 B/op	  306210 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2790935758 ns/op	   3.58 MB/s	403167816 B/op	  306999 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2832395084 ns/op	   3.53 MB/s	403201304 B/op	  307420 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2905137731 ns/op	   3.44 MB/s	403189880 B/op	  307271 allocs/op
BenchmarkMapAddWithAllocs/items_10000000-2     	       1	2814007762 ns/op	   3.55 MB/s	403137768 B/op	  306625 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/uint64set	56.028s

Result 1 parsed
Benchmark run succesful
192 / 193 done
### Execute Benchmark: /lib/encoding/encoding_timing_test.go::BenchmarkUnmarshalInt64Array
Changing directory to dir1: /home/benchUser/other/lib/encoding
Running '[go test -benchtime=1s -timeout=10s -count=5 -run=^$ -bench=^BenchmarkUnmarshalInt64Array$]
Benchmark 1 done: goos: linux
goarch: amd64
pkg: github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
BenchmarkUnmarshalInt64Array-2   	   23648	     50700 ns/op	 161.58 MB/s	       5 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23479	     50021 ns/op	 163.77 MB/s	       5 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23942	     51394 ns/op	 159.40 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23487	     50124 ns/op	 163.43 MB/s	       8 B/op	       0 allocs/op
BenchmarkUnmarshalInt64Array-2   	   23637	     49976 ns/op	 163.92 MB/s	       8 B/op	       0 allocs/op
PASS
ok  	github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding	8.547s

Result 1 parsed
Benchmark run succesful
193 / 193 done
--- Run #2 of Baseline executed 193 which took 4981037683271ns

579 Benchmarks executed in 3 runs which took 15080627457409ns
(251.343791 minutes) 
